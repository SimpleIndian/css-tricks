{"version":3,"sources":["node_modules/workbox-core/_version.js","node_modules/workbox-core/models/messages/messages.js","node_modules/workbox-core/models/messages/messageGenerator.js","node_modules/workbox-core/_private/WorkboxError.js","node_modules/workbox-core/_private/assert.js","node_modules/workbox-precaching/_version.js","node_modules/workbox-precaching/utils/precachePlugins.js","node_modules/workbox-precaching/addPlugins.js","node_modules/workbox-core/_private/cacheNames.js","node_modules/workbox-core/_private/getFriendlyURL.js","node_modules/workbox-core/_private/logger.js","node_modules/workbox-core/models/quotaErrorCallbacks.js","node_modules/workbox-core/_private/executeQuotaErrorCallbacks.js","node_modules/workbox-core/utils/pluginUtils.js","node_modules/workbox-core/_private/cacheWrapper.js","node_modules/workbox-core/_private/fetchWrapper.js","node_modules/workbox-core/_private/canConstructResponseFromBodyStream.js","node_modules/workbox-core/copyResponse.js","node_modules/workbox-precaching/utils/createCacheKey.js","node_modules/workbox-precaching/utils/printCleanupDetails.js","node_modules/workbox-precaching/utils/printInstallDetails.js","node_modules/workbox-precaching/PrecacheController.js","node_modules/workbox-precaching/utils/getOrCreatePrecacheController.js","node_modules/workbox-precaching/utils/removeIgnoredSearchParams.js","node_modules/workbox-precaching/utils/generateURLVariations.js","node_modules/workbox-precaching/utils/getCacheKeyForURL.js","node_modules/workbox-precaching/utils/addFetchListener.js","node_modules/workbox-precaching/addRoute.js","node_modules/workbox-precaching/utils/deleteOutdatedCaches.js","node_modules/workbox-precaching/cleanupOutdatedCaches.js","node_modules/workbox-precaching/createHandler.js","node_modules/workbox-precaching/createHandlerBoundToURL.js","node_modules/workbox-precaching/getCacheKeyForURL.js","node_modules/workbox-precaching/matchPrecache.js","node_modules/workbox-precaching/precache.js","node_modules/workbox-precaching/precacheAndRoute.js","node_modules/workbox-precaching/index.js","node_modules/workbox-precaching/index.mjs","node_modules/workbox-routing/_version.js","node_modules/workbox-routing/utils/constants.js","node_modules/workbox-routing/utils/normalizeHandler.js","node_modules/workbox-routing/Route.js","node_modules/workbox-routing/NavigationRoute.js","node_modules/workbox-routing/RegExpRoute.js","node_modules/workbox-routing/Router.js","node_modules/workbox-routing/utils/getOrCreateDefaultRouter.js","node_modules/workbox-routing/registerRoute.js","node_modules/workbox-routing/setCatchHandler.js","node_modules/workbox-routing/setDefaultHandler.js","node_modules/workbox-routing/index.js","node_modules/workbox-routing/index.mjs","node_modules/workbox-strategies/_version.js","node_modules/workbox-strategies/utils/messages.js","node_modules/workbox-strategies/CacheFirst.js","node_modules/workbox-strategies/CacheOnly.js","node_modules/workbox-strategies/plugins/cacheOkAndOpaquePlugin.js","node_modules/workbox-strategies/NetworkFirst.js","node_modules/workbox-strategies/NetworkOnly.js","node_modules/workbox-strategies/StaleWhileRevalidate.js","node_modules/workbox-strategies/index.js","node_modules/workbox-strategies/index.mjs","sw-src.js","../../AppData/Roaming/npm/node_modules/parcel-bundler/src/builtins/hmr-runtime.js"],"names":["messages","paramName","validValueDescription","value","Error","JSON","stringify","moduleName","className","funcName","expectedType","expectedClass","isReturnValueProblem","name","expectedMethod","entry","firstEntry","secondEntry","_entryId","thrownError","message","cacheNameId","method","methodName","normalizedRangeHeader","size","start","end","url","error","status","cacheName","fallback","code","args","msg","length","generatorFunction","details","messageGenerator","WorkboxError","constructor","errorCode","isSWEnv","self","isArray","Array","hasMethod","object","type","isType","isInstance","isOneOf","validValues","includes","isArrayOfClass","item","finalAssertExports","plugins","precachePlugins","get","add","newPlugins","push","addPlugins","_cacheNameDetails","googleAnalytics","precache","prefix","runtime","suffix","registration","scope","_createCacheName","filter","join","eachCacheNameDetail","fn","key","Object","keys","cacheNames","updateDetails","getGoogleAnalyticsName","userCacheName","getPrecacheName","getPrefix","getRuntimeName","getSuffix","getFriendlyURL","urlObj","URL","String","location","href","origin","pathname","logger","__WB_DISABLE_DEV_LOGS","inGroup","methodToColorMap","debug","log","warn","groupCollapsed","groupEnd","print","test","navigator","userAgent","console","styles","logPrefix","api","loggerMethods","quotaErrorCallbacks","Set","executeQuotaErrorCallbacks","callback","pluginUtils","callbackName","plugin","putWrapper","request","response","event","matchOptions","effectiveRequest","_getEffectiveRequest","mode","responseToCache","_isResponseSafeToCache","cache","caches","open","updatePlugins","oldResponse","matchWrapper","put","call","newResponse","cachedResponse","match","pluginMethod","assert","Response","pluginsUsed","undefined","cacheKeyWillBeUsedPlugins","Request","cacheWrapper","wrappedFetch","fetchOptions","FetchEvent","preloadResponse","possiblePreloadResponse","failedFetchPlugins","originalRequest","clone","requestClone","err","pluginFilteredRequest","fetchResponse","fetch","fetchWrapper","supportStatus","canConstructResponseFromBodyStream","testResponse","body","copyResponse","modifier","clonedResponse","responseInit","headers","Headers","statusText","modifiedResponseInit","blob","REVISION_SEARCH_PARAM","createCacheKey","urlObject","cacheKey","revision","cacheKeyURL","originalURL","searchParams","set","logGroup","groupTitle","deletedURLs","printCleanupDetails","deletionCount","_nestedGroup","urls","printInstallDetails","urlsToPrecache","urlsAlreadyPrecached","precachedCount","alreadyPrecachedCount","PrecacheController","_cacheName","_urlsToCacheKeys","Map","_urlsToCacheModes","_cacheKeysToIntegrities","addToCacheList","entries","urlsToWarnAbout","cacheMode","has","integrity","warningMessage","install","toBePrecached","alreadyPrecached","alreadyCachedRequests","existingCacheKeys","map","precacheRequests","_addURLToCache","Promise","all","updatedURLs","notUpdatedURLs","activate","currentlyCachedRequests","expectedCacheKeys","values","delete","credentials","cacheWillUpdatePlugin","isValidResponse","cacheWillUpdate","redirected","ignoreSearch","getURLsToCacheKeys","getCachedURLs","getCacheKeyForURL","matchPrecache","createHandler","fallbackToNetwork","createHandlerBoundToURL","handler","precacheController","getOrCreatePrecacheController","removeIgnoredSearchParams","ignoreURLParametersMatching","some","regExp","generateURLVariations","directoryIndex","cleanURLs","urlManipulation","hash","urlWithoutIgnoredParams","endsWith","directoryURL","cleanURL","additionalURLs","urlToAttempt","options","urlsToCacheKeys","possibleURL","possibleCacheKey","addFetchListener","addEventListener","precachedURL","responsePromise","then","respondWith","listenerAdded","addRoute","SUBSTRING_TO_FIND","deleteOutdatedCaches","currentPrecacheName","substringToFind","cacheNamesToDelete","cleanupOutdatedCaches","waitUntil","cachesDeleted","installListener","catch","activateListener","precacheAndRoute","defaultMethod","validMethods","normalizeHandler","handle","Route","NavigationRoute","allowlist","denylist","RegExp","_match","_allowlist","_denylist","pathnameAndSearch","search","RegExpRoute","result","exec","index","slice","Router","_routes","routes","handleRequest","addCacheListener","data","payload","urlsToCache","requestPromises","ports","postMessage","protocol","startsWith","params","route","findMatchingRoute","debugMessages","_defaultHandler","forEach","reject","_catchHandler","matchResult","setDefaultHandler","setCatchHandler","registerRoute","unregisterRoute","routeIndex","indexOf","splice","defaultRouter","getOrCreateDefaultRouter","capture","captureUrl","valueToCheck","wildcards","matchCallback","strategyStart","strategyName","printFinalResponse","CacheFirst","_plugins","_fetchOptions","_matchOptions","logs","_getFromNetwork","responseClone","cachePutPromise","CacheOnly","cacheOkAndOpaquePlugin","NetworkFirst","isUsingCacheWillUpdate","_networkTimeoutSeconds","networkTimeoutSeconds","promises","timeoutId","id","promise","_getTimeoutPromise","networkPromise","_getNetworkPromise","race","timeoutPromise","resolve","onNetworkTimeout","_respondFromCache","setTimeout","clearTimeout","cachePut","NetworkOnly","StaleWhileRevalidate","fetchAndCachePromise","__WB_MANIFEST","OVERLAY_ID","OldModule","module","bundle","Module","hot","hotData","_acceptCallbacks","_disposeCallbacks","accept","dispose","checkedAssets","assetsToAccept","parent","isParcelRequire","WebSocket","hostname","ws","onmessage","parse","handled","assets","asset","isNew","didAccept","hmrAcceptCheck","global","parcelRequire","every","generated","js","clear","hmrApply","v","hmrAcceptRun","reload","close","onclose","removeErrorOverlay","stack","overlay","createErrorOverlay","document","appendChild","getElementById","remove","createElement","stackTrace","innerText","innerHTML","getParents","modules","parents","k","d","dep","concat","Function","deps","cached","cb"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACCA;;AAPA;;;;;;;AAQO,MAAMA,QAAQ,GAAG;AACpB,mBAAiB,CAAC;AAAEC,IAAAA,SAAF;AAAaC,IAAAA,qBAAb;AAAoCC,IAAAA;AAApC,GAAD,KAAiD;AAC9D,QAAI,CAACF,SAAD,IAAc,CAACC,qBAAnB,EAA0C;AACtC,YAAM,IAAIE,KAAJ,CAAW,4CAAX,CAAN;AACH;;AACD,WAAQ,QAAOH,SAAU,wCAAlB,GACF,qBAAoBC,qBAAsB,uBADxC,GAEF,GAAEG,IAAI,CAACC,SAAL,CAAeH,KAAf,CAAsB,GAF7B;AAGH,GARmB;AASpB,eAAa,CAAC;AAAEI,IAAAA;AAAF,GAAD,KAAoB;AAC7B,QAAI,CAACA,UAAL,EAAiB;AACb,YAAM,IAAIH,KAAJ,CAAW,wCAAX,CAAN;AACH;;AACD,WAAQ,QAAOG,UAAW,qCAA1B;AACH,GAdmB;AAepB,kBAAgB,CAAC;AAAEA,IAAAA,UAAF;AAAcC,IAAAA,SAAd;AAAyBC,IAAAA,QAAzB;AAAmCR,IAAAA;AAAnC,GAAD,KAAoD;AAChE,QAAI,CAACM,UAAD,IAAe,CAACC,SAAhB,IAA6B,CAACC,QAA9B,IAA0C,CAACR,SAA/C,EAA0D;AACtD,YAAM,IAAIG,KAAJ,CAAW,2CAAX,CAAN;AACH;;AACD,WAAQ,kBAAiBH,SAAU,gBAA5B,GACF,IAAGM,UAAW,IAAGC,SAAU,IAAGC,QAAS,uBAD5C;AAEH,GArBmB;AAsBpB,oBAAkB,CAAC;AAAEC,IAAAA,YAAF;AAAgBT,IAAAA,SAAhB;AAA2BM,IAAAA,UAA3B;AAAuCC,IAAAA,SAAvC;AAAkDC,IAAAA;AAAlD,GAAD,KAAkE;AAChF,QAAI,CAACC,YAAD,IAAiB,CAACT,SAAlB,IAA+B,CAACM,UAAhC,IAA8C,CAACE,QAAnD,EAA6D;AACzD,YAAM,IAAIL,KAAJ,CAAW,6CAAX,CAAN;AACH;;AACD,WAAQ,kBAAiBH,SAAU,gBAA5B,GACF,IAAGM,UAAW,IAAGC,SAAS,GAAIA,SAAS,GAAG,GAAhB,GAAuB,EAAG,EADlD,GAEF,GAAEC,QAAS,uBAAsBC,YAAa,GAFnD;AAGH,GA7BmB;AA8BpB,qBAAmB,CAAC;AAAEC,IAAAA,aAAF;AAAiBV,IAAAA,SAAjB;AAA4BM,IAAAA,UAA5B;AAAwCC,IAAAA,SAAxC;AAAmDC,IAAAA,QAAnD;AAA6DG,IAAAA;AAA7D,GAAD,KAAyF;AACxG,QAAI,CAACD,aAAD,IAAkB,CAACJ,UAAnB,IAAiC,CAACE,QAAtC,EAAgD;AAC5C,YAAM,IAAIL,KAAJ,CAAW,8CAAX,CAAN;AACH;;AACD,QAAIQ,oBAAJ,EAA0B;AACtB,aAAQ,wBAAD,GACF,IAAGL,UAAW,IAAGC,SAAS,GAAIA,SAAS,GAAG,GAAhB,GAAuB,EAAG,GAAEC,QAAS,MAD7D,GAEF,gCAA+BE,aAAa,CAACE,IAAK,GAFvD;AAGH;;AACD,WAAQ,kBAAiBZ,SAAU,gBAA5B,GACF,IAAGM,UAAW,IAAGC,SAAS,GAAIA,SAAS,GAAG,GAAhB,GAAuB,EAAG,GAAEC,QAAS,MAD7D,GAEF,gCAA+BE,aAAa,CAACE,IAAK,GAFvD;AAGH,GA1CmB;AA2CpB,sBAAoB,CAAC;AAAEC,IAAAA,cAAF;AAAkBb,IAAAA,SAAlB;AAA6BM,IAAAA,UAA7B;AAAyCC,IAAAA,SAAzC;AAAoDC,IAAAA;AAApD,GAAD,KAAoE;AACpF,QAAI,CAACK,cAAD,IAAmB,CAACb,SAApB,IAAiC,CAACM,UAAlC,IAAgD,CAACC,SAAjD,IACG,CAACC,QADR,EACkB;AACd,YAAM,IAAIL,KAAJ,CAAW,+CAAX,CAAN;AACH;;AACD,WAAQ,GAAEG,UAAW,IAAGC,SAAU,IAAGC,QAAS,kBAAvC,GACF,IAAGR,SAAU,4BAA2Ba,cAAe,WAD5D;AAEH,GAlDmB;AAmDpB,uCAAqC,CAAC;AAAEC,IAAAA;AAAF,GAAD,KAAe;AAChD,WAAQ,oCAAD,GACF,qEADE,GAEF,IAAGV,IAAI,CAACC,SAAL,CAAeS,KAAf,CAAsB,iDAFvB,GAGF,sEAHE,GAIF,kBAJL;AAKH,GAzDmB;AA0DpB,2CAAyC,CAAC;AAAEC,IAAAA,UAAF;AAAcC,IAAAA;AAAd,GAAD,KAAiC;AACtE,QAAI,CAACD,UAAD,IAAe,CAACC,WAApB,EAAiC;AAC7B,YAAM,IAAIb,KAAJ,CAAW,sBAAD,GACX,8CADC,CAAN;AAEH;;AACD,WAAQ,+BAAD,GACF,uEADE,GAEF,GAAEY,UAAU,CAACE,QAAS,8CAFpB,GAGF,wEAHE,GAIF,iBAJL;AAKH,GApEmB;AAqEpB,qCAAmC,CAAC;AAAEC,IAAAA;AAAF,GAAD,KAAqB;AACpD,QAAI,CAACA,WAAL,EAAkB;AACd,YAAM,IAAIf,KAAJ,CAAW,sBAAD,GACX,2CADC,CAAN;AAEH;;AACD,WAAQ,gEAAD,GACF,kCAAiCe,WAAW,CAACC,OAAQ,IAD1D;AAEH,GA5EmB;AA6EpB,wBAAsB,CAAC;AAAEC,IAAAA,WAAF;AAAelB,IAAAA;AAAf,GAAD,KAA4B;AAC9C,QAAI,CAACkB,WAAL,EAAkB;AACd,YAAM,IAAIjB,KAAJ,CAAW,yDAAX,CAAN;AACH;;AACD,WAAQ,gEAAD,GACF,oBAAmBiB,WAAY,iCAD7B,GAEF,IAAGhB,IAAI,CAACC,SAAL,CAAeH,KAAf,CAAsB,GAF9B;AAGH,GApFmB;AAqFpB,gDAA8C,CAAC;AAAEmB,IAAAA;AAAF,GAAD,KAAgB;AAC1D,QAAI,CAACA,MAAL,EAAa;AACT,YAAM,IAAIlB,KAAJ,CAAW,sBAAD,GACX,qDADC,CAAN;AAEH;;AACD,WAAQ,4DAAD,GACF,mCAAkCkB,MAAO,IAD9C;AAEH,GA5FmB;AA6FpB,2CAAyC,MAAM;AAC3C,WAAQ,2DAAD,GACF,aADL;AAEH,GAhGmB;AAiGpB,yBAAuB,CAAC;AAAET,IAAAA;AAAF,GAAD,KAAc;AACjC,WAAQ,wCAAuCA,IAAK,WAApD;AACH,GAnGmB;AAoGpB,0BAAwB,CAAC;AAAEA,IAAAA;AAAF,GAAD,KAAc;AAClC,WAAQ,mBAAkBA,IAAK,2BAAxB,GACF,mEADL;AAEH,GAvGmB;AAwGpB,kCAAgC,CAAC;AAAEU,IAAAA,UAAF;AAActB,IAAAA;AAAd,GAAD,KAA+B;AAC3D,WAAQ,QAAOsB,UAAW,uCAAnB,GACF,IAAGtB,SAAU,+BADlB;AAEH,GA3GmB;AA4GpB,4BAA0B,CAAC;AAAEM,IAAAA,UAAF;AAAcC,IAAAA,SAAd;AAAyBC,IAAAA,QAAzB;AAAmCR,IAAAA;AAAnC,GAAD,KAAoD;AAC1E,WAAQ,iBAAgBA,SAAU,uCAA3B,GACF,6BAA4BM,UAAW,IAAGC,SAAU,IAAGC,QAAS,OAD9D,GAEF,oBAFL;AAGH,GAhHmB;AAiHpB,wBAAsB,CAAC;AAAEN,IAAAA,KAAF;AAASQ,IAAAA,aAAT;AAAwBJ,IAAAA,UAAxB;AAAoCC,IAAAA,SAApC;AAA+CC,IAAAA,QAA/C;AAAyDR,IAAAA;AAAzD,GAAD,KAA0E;AAC5F,WAAQ,iBAAgBA,SAAU,kCAA3B,GACF,IAAGU,aAAc,wBAAuBN,IAAI,CAACC,SAAL,CAAeH,KAAf,CAAsB,MAD5D,GAEF,4BAA2BI,UAAW,IAAGC,SAAU,IAAGC,QAAS,KAF7D,GAGF,mBAHL;AAIH,GAtHmB;AAuHpB,iCAA+B,CAAC;AAAEF,IAAAA,UAAF;AAAcC,IAAAA,SAAd;AAAyBC,IAAAA;AAAzB,GAAD,KAAyC;AACpE,WAAQ,kEAAD,GACF,MAAKF,UAAW,IAAGC,SAAU,IAAGC,QAAS,EAD9C;AAEH,GA1HmB;AA2HpB,kCAAgC,CAAC;AAAEF,IAAAA,UAAF;AAAcC,IAAAA,SAAd;AAAyBC,IAAAA;AAAzB,GAAD,KAAyC;AACrE,WAAQ,0DAAD,GACF,MAAKF,UAAW,IAAGC,SAAU,IAAGC,QAAS,EAD9C;AAEH,GA9HmB;AA+HpB,oBAAkB,CAAC;AAAEF,IAAAA,UAAF;AAAcE,IAAAA,QAAd;AAAwBR,IAAAA;AAAxB,GAAD,KAAyC;AACvD,QAAI,CAACA,SAAD,IAAc,CAACM,UAAf,IAA6B,CAACE,QAAlC,EAA4C;AACxC,YAAM,IAAIL,KAAJ,CAAW,6CAAX,CAAN;AACH;;AACD,WAAQ,4BAA2BH,SAAU,8BAAtC,GACF,sEADE,GAEF,2BAA0BM,UAAW,IAAGE,QAAS,SAF/C,GAGF,YAHL;AAIH,GAvImB;AAwIpB,2BAAyB,MAAM;AAC3B,WAAQ,gDAAD,GACF,gCADL;AAEH,GA3ImB;AA4IpB,qCAAmC,MAAM;AACrC,WAAQ,4DAAD,GACF,kDADL;AAEH,GA/ImB;AAgJpB,+BAA6B,MAAM;AAC/B,WAAQ,yDAAD,GACF,oDADL;AAEH,GAnJmB;AAoJpB,wBAAsB,CAAC;AAAEe,IAAAA;AAAF,GAAD,KAA+B;AACjD,QAAI,CAACA,qBAAL,EAA4B;AACxB,YAAM,IAAIpB,KAAJ,CAAW,iDAAX,CAAN;AACH;;AACD,WAAQ,iEAAD,GACF,kCAAiCoB,qBAAsB,GAD5D;AAEH,GA1JmB;AA2JpB,uBAAqB,CAAC;AAAEA,IAAAA;AAAF,GAAD,KAA+B;AAChD,QAAI,CAACA,qBAAL,EAA4B;AACxB,YAAM,IAAIpB,KAAJ,CAAW,gDAAX,CAAN;AACH;;AACD,WAAQ,gEAAD,GACF,+DADE,GAEF,IAAGoB,qBAAsB,GAF9B;AAGH,GAlKmB;AAmKpB,0BAAwB,CAAC;AAAEA,IAAAA;AAAF,GAAD,KAA+B;AACnD,QAAI,CAACA,qBAAL,EAA4B;AACxB,YAAM,IAAIpB,KAAJ,CAAW,mDAAX,CAAN;AACH;;AACD,WAAQ,kEAAD,GACF,+DADE,GAEF,IAAGoB,qBAAsB,GAF9B;AAGH,GA1KmB;AA2KpB,qBAAmB,MAAM;AACrB,WAAQ,oDAAR;AACH,GA7KmB;AA8KpB,2BAAyB,CAAC;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,KAAR;AAAeC,IAAAA;AAAf,GAAD,KAA0B;AAC/C,WAAQ,cAAaD,KAAM,cAAaC,GAAI,4BAArC,GACF,oDAAmDF,IAAK,SAD7D;AAEH,GAjLmB;AAkLpB,sCAAoC,CAAC;AAAEG,IAAAA,GAAF;AAAON,IAAAA;AAAP,GAAD,KAAqB;AACrD,WAAQ,oBAAmBM,GAAI,sBAAqBN,MAAO,gBAApD,GACF,oCADL;AAEH,GArLmB;AAsLpB,gCAA8B,CAAC;AAAEM,IAAAA;AAAF,GAAD,KAAa;AACvC,WAAQ,kCAAiCA,GAAI,6BAAtC,GACF,UADL;AAEH,GAzLmB;AA0LpB,iBAAe,CAAC;AAAEA,IAAAA,GAAF;AAAOC,IAAAA;AAAP,GAAD,KAAoB;AAC/B,QAAIT,OAAO,GAAI,mDAAkDQ,GAAI,IAArE;;AACA,QAAIC,KAAJ,EAAW;AACPT,MAAAA,OAAO,IAAK,4BAA2BS,KAAM,GAA7C;AACH;;AACD,WAAOT,OAAP;AACH,GAhMmB;AAiMpB,6BAA2B,CAAC;AAAEQ,IAAAA,GAAF;AAAOE,IAAAA;AAAP,GAAD,KAAqB;AAC5C,WAAQ,+BAA8BF,GAAI,wBAAnC,GACF,aAAYE,MAAO,GADxB;AAEH,GApMmB;AAqMpB,uBAAqB,CAAC;AAAEF,IAAAA;AAAF,GAAD,KAAa;AAC9B,WAAQ,4BAA2BA,GAAI,iCAAhC,GACF,gEADL;AAEH,GAxMmB;AAyMpB,+CAA6C,CAAC;AAAEA,IAAAA;AAAF,GAAD,KAAa;AACtD,WAAQ,+BAAD,GACF,uEADE,GAEF,GAAEA,GAAI,8DAFX;AAGH,GA7MmB;AA8MpB,4BAA0B,CAAC;AAAEG,IAAAA,SAAF;AAAaH,IAAAA;AAAb,GAAD,KAAwB;AAC9C,WAAQ,0CAAyCG,SAAU,QAAOH,GAAI,GAAtE;AACH;AAhNmB,CAAjB;;;;;;;;;;ACDP;;AACA;;AARA;;;;;;;AASA,MAAMI,QAAQ,GAAG,CAACC,IAAD,EAAO,GAAGC,IAAV,KAAmB;AAChC,MAAIC,GAAG,GAAGF,IAAV;;AACA,MAAIC,IAAI,CAACE,MAAL,GAAc,CAAlB,EAAqB;AACjBD,IAAAA,GAAG,IAAK,OAAM9B,IAAI,CAACC,SAAL,CAAe4B,IAAf,CAAqB,EAAnC;AACH;;AACD,SAAOC,GAAP;AACH,CAND;;AAOA,MAAME,iBAAiB,GAAG,CAACJ,IAAD,EAAOK,OAAO,GAAG,EAAjB,KAAwB;AAC9C,QAAMlB,OAAO,GAAGpB,mBAASiC,IAAT,CAAhB;;AACA,MAAI,CAACb,OAAL,EAAc;AACV,UAAM,IAAIhB,KAAJ,CAAW,oCAAmC6B,IAAK,IAAnD,CAAN;AACH;;AACD,SAAOb,OAAO,CAACkB,OAAD,CAAd;AACH,CAND;;AAOO,MAAMC,gBAAgB,GAAI,kBAAyB,YAA1B,GAC5BP,QAD4B,GACjBK,iBADR;;;;;;;;;;AChBP;;AACA;;AARA;;;;;;;;AASA;;;;;;;;;AASA,MAAMG,YAAN,SAA2BpC,KAA3B,CAAiC;AAC7B;;;;;;;;AAQAqC,EAAAA,WAAW,CAACC,SAAD,EAAYJ,OAAZ,EAAqB;AAC5B,QAAIlB,OAAO,GAAG,wCAAiBsB,SAAjB,EAA4BJ,OAA5B,CAAd;AACA,UAAMlB,OAAN;AACA,SAAKP,IAAL,GAAY6B,SAAZ;AACA,SAAKJ,OAAL,GAAeA,OAAf;AACH;;AAd4B;;;;;;;;;;;ACXjC;;AACA;;AARA;;;;;;;;AASA;;;AAGA,MAAMK,OAAO,GAAIpC,UAAD,IAAgB;AAC5B,MAAI,EAAE,8BAA8BqC,IAAhC,CAAJ,EAA2C;AACvC,UAAM,IAAIJ,0BAAJ,CAAiB,WAAjB,EAA8B;AAAEjC,MAAAA;AAAF,KAA9B,CAAN;AACH;AACJ,CAJD;AAKA;;;;;;;;AAMA,MAAMsC,OAAO,GAAG,CAAC1C,KAAD,EAAQmC,OAAR,KAAoB;AAChC,MAAI,CAACQ,KAAK,CAACD,OAAN,CAAc1C,KAAd,CAAL,EAA2B;AACvB,UAAM,IAAIqC,0BAAJ,CAAiB,cAAjB,EAAiCF,OAAjC,CAAN;AACH;AACJ,CAJD;;AAKA,MAAMS,SAAS,GAAG,CAACC,MAAD,EAASlC,cAAT,EAAyBwB,OAAzB,KAAqC;AACnD,QAAMW,IAAI,GAAG,OAAOD,MAAM,CAAClC,cAAD,CAA1B;;AACA,MAAImC,IAAI,KAAK,UAAb,EAAyB;AACrBX,IAAAA,OAAO,CAAC,gBAAD,CAAP,GAA4BxB,cAA5B;AACA,UAAM,IAAI0B,0BAAJ,CAAiB,kBAAjB,EAAqCF,OAArC,CAAN;AACH;AACJ,CAND;;AAOA,MAAMY,MAAM,GAAG,CAACF,MAAD,EAAStC,YAAT,EAAuB4B,OAAvB,KAAmC;AAC9C,MAAI,OAAOU,MAAP,KAAkBtC,YAAtB,EAAoC;AAChC4B,IAAAA,OAAO,CAAC,cAAD,CAAP,GAA0B5B,YAA1B;AACA,UAAM,IAAI8B,0BAAJ,CAAiB,gBAAjB,EAAmCF,OAAnC,CAAN;AACH;AACJ,CALD;;AAMA,MAAMa,UAAU,GAAG,CAACH,MAAD,EAASrC,aAAT,EAAwB2B,OAAxB,KAAoC;AACnD,MAAI,EAAEU,MAAM,YAAYrC,aAApB,CAAJ,EAAwC;AACpC2B,IAAAA,OAAO,CAAC,eAAD,CAAP,GAA2B3B,aAA3B;AACA,UAAM,IAAI6B,0BAAJ,CAAiB,iBAAjB,EAAoCF,OAApC,CAAN;AACH;AACJ,CALD;;AAMA,MAAMc,OAAO,GAAG,CAACjD,KAAD,EAAQkD,WAAR,EAAqBf,OAArB,KAAiC;AAC7C,MAAI,CAACe,WAAW,CAACC,QAAZ,CAAqBnD,KAArB,CAAL,EAAkC;AAC9BmC,IAAAA,OAAO,CAAC,uBAAD,CAAP,GACK,oBAAmBjC,IAAI,CAACC,SAAL,CAAe+C,WAAf,CAA4B,GADpD;AAEA,UAAM,IAAIb,0BAAJ,CAAiB,eAAjB,EAAkCF,OAAlC,CAAN;AACH;AACJ,CAND;;AAOA,MAAMiB,cAAc,GAAG,CAACpD,KAAD,EAAQQ,aAAR,EAAuB2B,OAAvB,KAAmC;AACtD,QAAMT,KAAK,GAAG,IAAIW,0BAAJ,CAAiB,oBAAjB,EAAuCF,OAAvC,CAAd;;AACA,MAAI,CAACQ,KAAK,CAACD,OAAN,CAAc1C,KAAd,CAAL,EAA2B;AACvB,UAAM0B,KAAN;AACH;;AACD,OAAK,IAAI2B,IAAT,IAAiBrD,KAAjB,EAAwB;AACpB,QAAI,EAAEqD,IAAI,YAAY7C,aAAlB,CAAJ,EAAsC;AAClC,YAAMkB,KAAN;AACH;AACJ;AACJ,CAVD;;AAWA,MAAM4B,kBAAkB,GAAG,kBAAyB,YAAzB,GAAwC,IAAxC,GAA+C;AACtEV,EAAAA,SADsE;AAEtEF,EAAAA,OAFsE;AAGtEM,EAAAA,UAHsE;AAItEC,EAAAA,OAJsE;AAKtET,EAAAA,OALsE;AAMtEO,EAAAA,MANsE;AAOtEK,EAAAA;AAPsE,CAA1E;;;ACjEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACCA;;AAPA;;;;;;;AAQA,MAAMG,OAAO,GAAG,EAAhB;AACO,MAAMC,eAAe,GAAG;AAC3B;;;;AAIAC,EAAAA,GAAG,GAAG;AACF,WAAOF,OAAP;AACH,GAP0B;;AAQ3B;;;;AAIAG,EAAAA,GAAG,CAACC,UAAD,EAAa;AACZJ,IAAAA,OAAO,CAACK,IAAR,CAAa,GAAGD,UAAhB;AACH;;AAd0B,CAAxB;;;;;;;;;;ACFP;;AACA;;AARA;;;;;;;;AASA;;;;;;;AAOA,SAASE,UAAT,CAAoBF,UAApB,EAAgC;AAC5BH,mCAAgBE,GAAhB,CAAoBC,UAApB;AACH;;AACD;;;;;;;;;ACZA;;AAPA;;;;;;;AAQA,MAAMG,iBAAiB,GAAG;AACtBC,EAAAA,eAAe,EAAE,iBADK;AAEtBC,EAAAA,QAAQ,EAAE,aAFY;AAGtBC,EAAAA,MAAM,EAAE,SAHc;AAItBC,EAAAA,OAAO,EAAE,SAJa;AAKtBC,EAAAA,MAAM,EAAE,OAAOC,YAAP,KAAwB,WAAxB,GAAsCA,YAAY,CAACC,KAAnD,GAA2D;AAL7C,CAA1B;;AAOA,MAAMC,gBAAgB,GAAI1C,SAAD,IAAe;AACpC,SAAO,CAACkC,iBAAiB,CAACG,MAAnB,EAA2BrC,SAA3B,EAAsCkC,iBAAiB,CAACK,MAAxD,EACFI,MADE,CACMvE,KAAD,IAAWA,KAAK,IAAIA,KAAK,CAACiC,MAAN,GAAe,CADxC,EAEFuC,IAFE,CAEG,GAFH,CAAP;AAGH,CAJD;;AAKA,MAAMC,mBAAmB,GAAIC,EAAD,IAAQ;AAChC,OAAK,MAAMC,GAAX,IAAkBC,MAAM,CAACC,IAAP,CAAYf,iBAAZ,CAAlB,EAAkD;AAC9CY,IAAAA,EAAE,CAACC,GAAD,CAAF;AACH;AACJ,CAJD;;AAKO,MAAMG,UAAU,GAAG;AACtBC,EAAAA,aAAa,EAAG5C,OAAD,IAAa;AACxBsC,IAAAA,mBAAmB,CAAEE,GAAD,IAAS;AACzB,UAAI,OAAOxC,OAAO,CAACwC,GAAD,CAAd,KAAwB,QAA5B,EAAsC;AAClCb,QAAAA,iBAAiB,CAACa,GAAD,CAAjB,GAAyBxC,OAAO,CAACwC,GAAD,CAAhC;AACH;AACJ,KAJkB,CAAnB;AAKH,GAPqB;AAQtBK,EAAAA,sBAAsB,EAAGC,aAAD,IAAmB;AACvC,WAAOA,aAAa,IAAIX,gBAAgB,CAACR,iBAAiB,CAACC,eAAnB,CAAxC;AACH,GAVqB;AAWtBmB,EAAAA,eAAe,EAAGD,aAAD,IAAmB;AAChC,WAAOA,aAAa,IAAIX,gBAAgB,CAACR,iBAAiB,CAACE,QAAnB,CAAxC;AACH,GAbqB;AActBmB,EAAAA,SAAS,EAAE,MAAM;AACb,WAAOrB,iBAAiB,CAACG,MAAzB;AACH,GAhBqB;AAiBtBmB,EAAAA,cAAc,EAAGH,aAAD,IAAmB;AAC/B,WAAOA,aAAa,IAAIX,gBAAgB,CAACR,iBAAiB,CAACI,OAAnB,CAAxC;AACH,GAnBqB;AAoBtBmB,EAAAA,SAAS,EAAE,MAAM;AACb,WAAOvB,iBAAiB,CAACK,MAAzB;AACH;AAtBqB,CAAnB;;;;;;;;;;AClBP;;AAPA;;;;;;;AAQA,MAAMmB,cAAc,GAAI7D,GAAD,IAAS;AAC5B,QAAM8D,MAAM,GAAG,IAAIC,GAAJ,CAAQC,MAAM,CAAChE,GAAD,CAAd,EAAqBiE,QAAQ,CAACC,IAA9B,CAAf;;AACA,MAAIJ,MAAM,CAACK,MAAP,KAAkBF,QAAQ,CAACE,MAA/B,EAAuC;AACnC,WAAOL,MAAM,CAACM,QAAd;AACH;;AACD,SAAON,MAAM,CAACI,IAAd;AACH,CAND;;;;;;;;;;;ACFA;;AANA;;;;;;AAOA,MAAMG,MAAM,GAAI,kBAAyB,YAAzB,GAAwC,IAAxC,GAA+C,CAAC,MAAM;AAClE;AACA;AACA,MAAI,EAAE,2BAA2BrD,IAA7B,CAAJ,EAAwC;AACpCA,IAAAA,IAAI,CAACsD,qBAAL,GAA6B,KAA7B;AACH;;AACD,MAAIC,OAAO,GAAG,KAAd;AACA,QAAMC,gBAAgB,GAAG;AACrBC,IAAAA,KAAK,EAAG,SADa;AAErBC,IAAAA,GAAG,EAAG,SAFe;AAGrBC,IAAAA,IAAI,EAAG,SAHc;AAIrB1E,IAAAA,KAAK,EAAG,SAJa;AAKrB2E,IAAAA,cAAc,EAAG,SALI;AAMrBC,IAAAA,QAAQ,EAAE;AANW,GAAzB;;AAQA,QAAMC,KAAK,GAAG,UAAUpF,MAAV,EAAkBY,IAAlB,EAAwB;AAClC,QAAIU,IAAI,CAACsD,qBAAT,EAAgC;AAC5B;AACH;;AACD,QAAI5E,MAAM,KAAK,gBAAf,EAAiC;AAC7B;AACA;AACA,UAAI,iCAAiCqF,IAAjC,CAAsCC,SAAS,CAACC,SAAhD,CAAJ,EAAgE;AAC5DC,QAAAA,OAAO,CAACxF,MAAD,CAAP,CAAgB,GAAGY,IAAnB;AACA;AACH;AACJ;;AACD,UAAM6E,MAAM,GAAG,CACV,eAAcX,gBAAgB,CAAC9E,MAAD,CAAS,EAD7B,EAEV,sBAFU,EAGV,cAHU,EAIV,mBAJU,EAKV,oBALU,CAAf,CAZkC,CAmBlC;;AACA,UAAM0F,SAAS,GAAGb,OAAO,GAAG,EAAH,GAAQ,CAAC,WAAD,EAAcY,MAAM,CAACpC,IAAP,CAAY,GAAZ,CAAd,CAAjC;AACAmC,IAAAA,OAAO,CAACxF,MAAD,CAAP,CAAgB,GAAG0F,SAAnB,EAA8B,GAAG9E,IAAjC;;AACA,QAAIZ,MAAM,KAAK,gBAAf,EAAiC;AAC7B6E,MAAAA,OAAO,GAAG,IAAV;AACH;;AACD,QAAI7E,MAAM,KAAK,UAAf,EAA2B;AACvB6E,MAAAA,OAAO,GAAG,KAAV;AACH;AACJ,GA5BD;;AA6BA,QAAMc,GAAG,GAAG,EAAZ;AACA,QAAMC,aAAa,GAAGnC,MAAM,CAACC,IAAP,CAAYoB,gBAAZ,CAAtB;;AACA,OAAK,MAAMtB,GAAX,IAAkBoC,aAAlB,EAAiC;AAC7B,UAAM5F,MAAM,GAAGwD,GAAf;;AACAmC,IAAAA,GAAG,CAAC3F,MAAD,CAAH,GAAc,CAAC,GAAGY,IAAJ,KAAa;AACvBwE,MAAAA,KAAK,CAACpF,MAAD,EAASY,IAAT,CAAL;AACH,KAFD;AAGH;;AACD,SAAO+E,GAAP;AACH,CArD8D,GAA/D;;;;;;;;;;ACAA;;AAPA;;;;;;;AAQA;AACA,MAAME,mBAAmB,GAAG,IAAIC,GAAJ,EAA5B;;;;;;;;;;ACFA;;AACA;;AACA;;AATA;;;;;;;;AAUA;;;;;;;AAOA,eAAeC,0BAAf,GAA4C;AACxC,MAAI,kBAAyB,YAA7B,EAA2C;AACvCpB,mBAAOK,GAAP,CAAY,gBAAea,yCAAoB1F,IAAK,GAAzC,GACN,+BADL;AAEH;;AACD,OAAK,MAAM6F,QAAX,IAAuBH,wCAAvB,EAA4C;AACxC,UAAMG,QAAQ,EAAd;;AACA,QAAI,kBAAyB,YAA7B,EAA2C;AACvCrB,qBAAOK,GAAP,CAAWgB,QAAX,EAAqB,cAArB;AACH;AACJ;;AACD,MAAI,kBAAyB,YAA7B,EAA2C;AACvCrB,mBAAOK,GAAP,CAAW,6BAAX;AACH;AACJ;;;;;;;;;ACxBD;;AAPA;;;;;;;AAQO,MAAMiB,WAAW,GAAG;AACvB7C,EAAAA,MAAM,EAAE,CAAChB,OAAD,EAAU8D,YAAV,KAA2B;AAC/B,WAAO9D,OAAO,CAACgB,MAAR,CAAgB+C,MAAD,IAAYD,YAAY,IAAIC,MAA3C,CAAP;AACH;AAHsB,CAApB;;;;;;;;;;ACDP;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AAbA;;;;;;;;AAcA;;;;;;;;;;;;;;;;;AAiBA,MAAMC,UAAU,GAAG,OAAO;AAAE3F,EAAAA,SAAF;AAAa4F,EAAAA,OAAb;AAAsBC,EAAAA,QAAtB;AAAgCC,EAAAA,KAAhC;AAAuCnE,EAAAA,OAAO,GAAG,EAAjD;AAAqDoE,EAAAA;AAArD,CAAP,KAAgF;AAC/F,MAAI,kBAAyB,YAA7B,EAA2C;AACvC,QAAIH,OAAO,CAACrG,MAAR,IAAkBqG,OAAO,CAACrG,MAAR,KAAmB,KAAzC,EAAgD;AAC5C,YAAM,IAAIkB,0BAAJ,CAAiB,kCAAjB,EAAqD;AACvDZ,QAAAA,GAAG,EAAE,oCAAe+F,OAAO,CAAC/F,GAAvB,CADkD;AAEvDN,QAAAA,MAAM,EAAEqG,OAAO,CAACrG;AAFuC,OAArD,CAAN;AAIH;AACJ;;AACD,QAAMyG,gBAAgB,GAAG,MAAMC,oBAAoB,CAAC;AAChDtE,IAAAA,OADgD;AACvCiE,IAAAA,OADuC;AAC9BM,IAAAA,IAAI,EAAE;AADwB,GAAD,CAAnD;;AAGA,MAAI,CAACL,QAAL,EAAe;AACX,QAAI,kBAAyB,YAA7B,EAA2C;AACvC3B,qBAAOpE,KAAP,CAAc,yCAAD,GACR,IAAG,oCAAekG,gBAAgB,CAACnG,GAAhC,CAAqC,IAD7C;AAEH;;AACD,UAAM,IAAIY,0BAAJ,CAAiB,4BAAjB,EAA+C;AACjDZ,MAAAA,GAAG,EAAE,oCAAemG,gBAAgB,CAACnG,GAAhC;AAD4C,KAA/C,CAAN;AAGH;;AACD,MAAIsG,eAAe,GAAG,MAAMC,sBAAsB,CAAC;AAC/CN,IAAAA,KAD+C;AAE/CnE,IAAAA,OAF+C;AAG/CkE,IAAAA,QAH+C;AAI/CD,IAAAA,OAAO,EAAEI;AAJsC,GAAD,CAAlD;;AAMA,MAAI,CAACG,eAAL,EAAsB;AAClB,QAAI,kBAAyB,YAA7B,EAA2C;AACvCjC,qBAAOI,KAAP,CAAc,aAAY,oCAAe0B,gBAAgB,CAACnG,GAAhC,CAAqC,SAAlD,GACR,gBADL,EACsBsG,eADtB;AAEH;;AACD;AACH;;AACD,QAAME,KAAK,GAAG,MAAMxF,IAAI,CAACyF,MAAL,CAAYC,IAAZ,CAAiBvG,SAAjB,CAApB;;AACA,QAAMwG,aAAa,GAAGhB,yBAAY7C,MAAZ,CAAmBhB,OAAnB,EAA4B;AAAiB;AAA7C,GAAtB;;AACA,MAAI8E,WAAW,GAAGD,aAAa,CAACnG,MAAd,GAAuB,CAAvB,GACd,MAAMqG,YAAY,CAAC;AAAE1G,IAAAA,SAAF;AAAa+F,IAAAA,YAAb;AAA2BH,IAAAA,OAAO,EAAEI;AAApC,GAAD,CADJ,GAEd,IAFJ;;AAGA,MAAI,kBAAyB,YAA7B,EAA2C;AACvC9B,mBAAOI,KAAP,CAAc,iBAAgBtE,SAAU,kCAA3B,GACR,GAAE,oCAAegG,gBAAgB,CAACnG,GAAhC,CAAqC,GAD5C;AAEH;;AACD,MAAI;AACA,UAAMwG,KAAK,CAACM,GAAN,CAAUX,gBAAV,EAA4BG,eAA5B,CAAN;AACH,GAFD,CAGA,OAAOrG,KAAP,EAAc;AACV;AACA,QAAIA,KAAK,CAAChB,IAAN,KAAe,oBAAnB,EAAyC;AACrC,YAAM,6DAAN;AACH;;AACD,UAAMgB,KAAN;AACH;;AACD,OAAK,IAAI4F,MAAT,IAAmBc,aAAnB,EAAkC;AAC9B,UAAMd,MAAM,CAAC;AAAiB;AAAlB,KAAN,CAAgDkB,IAAhD,CAAqDlB,MAArD,EAA6D;AAC/D1F,MAAAA,SAD+D;AAE/D8F,MAAAA,KAF+D;AAG/DW,MAAAA,WAH+D;AAI/DI,MAAAA,WAAW,EAAEV,eAJkD;AAK/DP,MAAAA,OAAO,EAAEI;AALsD,KAA7D,CAAN;AAOH;AACJ,CA9DD;AA+DA;;;;;;;;;;;;;;;;;AAeA,MAAMU,YAAY,GAAG,OAAO;AAAE1G,EAAAA,SAAF;AAAa4F,EAAAA,OAAb;AAAsBE,EAAAA,KAAtB;AAA6BC,EAAAA,YAA7B;AAA2CpE,EAAAA,OAAO,GAAG;AAArD,CAAP,KAAsE;AACvF,QAAM0E,KAAK,GAAG,MAAMxF,IAAI,CAACyF,MAAL,CAAYC,IAAZ,CAAiBvG,SAAjB,CAApB;AACA,QAAMgG,gBAAgB,GAAG,MAAMC,oBAAoB,CAAC;AAChDtE,IAAAA,OADgD;AACvCiE,IAAAA,OADuC;AAC9BM,IAAAA,IAAI,EAAE;AADwB,GAAD,CAAnD;AAGA,MAAIY,cAAc,GAAG,MAAMT,KAAK,CAACU,KAAN,CAAYf,gBAAZ,EAA8BD,YAA9B,CAA3B;;AACA,MAAI,kBAAyB,YAA7B,EAA2C;AACvC,QAAIe,cAAJ,EAAoB;AAChB5C,qBAAOI,KAAP,CAAc,+BAA8BtE,SAAU,IAAtD;AACH,KAFD,MAGK;AACDkE,qBAAOI,KAAP,CAAc,gCAA+BtE,SAAU,IAAvD;AACH;AACJ;;AACD,OAAK,MAAM0F,MAAX,IAAqB/D,OAArB,EAA8B;AAC1B,QAAI;AAA2B;AAA3B,OAAiE+D,MAArE,EAA6E;AACzE,YAAMsB,YAAY,GAAGtB,MAAM,CAAC;AAA2B;AAA5B,OAA3B;AACAoB,MAAAA,cAAc,GAAG,MAAME,YAAY,CAACJ,IAAb,CAAkBlB,MAAlB,EAA0B;AAC7C1F,QAAAA,SAD6C;AAE7C8F,QAAAA,KAF6C;AAG7CC,QAAAA,YAH6C;AAI7Ce,QAAAA,cAJ6C;AAK7ClB,QAAAA,OAAO,EAAEI;AALoC,OAA1B,CAAvB;;AAOA,UAAI,kBAAyB,YAA7B,EAA2C;AACvC,YAAIc,cAAJ,EAAoB;AAChBG,yBAAO7F,UAAP,CAAkB0F,cAAlB,EAAkCI,QAAlC,EAA4C;AACxC1I,YAAAA,UAAU,EAAE,QAD4B;AAExCE,YAAAA,QAAQ,EAAE;AAA2B;AAFG;AAGxCG,YAAAA,oBAAoB,EAAE;AAHkB,WAA5C;AAKH;AACJ;AACJ;AACJ;;AACD,SAAOiI,cAAP;AACH,CApCD;AAqCA;;;;;;;;;;;;;;;;AAcA,MAAMV,sBAAsB,GAAG,OAAO;AAAER,EAAAA,OAAF;AAAWC,EAAAA,QAAX;AAAqBC,EAAAA,KAArB;AAA4BnE,EAAAA,OAAO,GAAG;AAAtC,CAAP,KAAuD;AAClF,MAAIwE,eAAe,GAAGN,QAAtB;AACA,MAAIsB,WAAW,GAAG,KAAlB;;AACA,OAAK,IAAIzB,MAAT,IAAmB/D,OAAnB,EAA4B;AACxB,QAAI;AAAkB;AAAlB,OAA6C+D,MAAjD,EAAyD;AACrDyB,MAAAA,WAAW,GAAG,IAAd;AACA,YAAMH,YAAY,GAAGtB,MAAM,CAAC;AAAkB;AAAnB,OAA3B;AACAS,MAAAA,eAAe,GAAG,MAAMa,YAAY,CAACJ,IAAb,CAAkBlB,MAAlB,EAA0B;AAC9CE,QAAAA,OAD8C;AAE9CC,QAAAA,QAAQ,EAAEM,eAFoC;AAG9CL,QAAAA;AAH8C,OAA1B,CAAxB;;AAKA,UAAI,kBAAyB,YAA7B,EAA2C;AACvC,YAAIK,eAAJ,EAAqB;AACjBc,yBAAO7F,UAAP,CAAkB+E,eAAlB,EAAmCe,QAAnC,EAA6C;AACzC1I,YAAAA,UAAU,EAAE,QAD6B;AAEzCE,YAAAA,QAAQ,EAAE;AAAkB;AAFa;AAGzCG,YAAAA,oBAAoB,EAAE;AAHmB,WAA7C;AAKH;AACJ;;AACD,UAAI,CAACsH,eAAL,EAAsB;AAClB;AACH;AACJ;AACJ;;AACD,MAAI,CAACgB,WAAL,EAAkB;AACd,QAAI,kBAAyB,YAA7B,EAA2C;AACvC,UAAIhB,eAAJ,EAAqB;AACjB,YAAIA,eAAe,CAACpG,MAAhB,KAA2B,GAA/B,EAAoC;AAChC,cAAIoG,eAAe,CAACpG,MAAhB,KAA2B,CAA/B,EAAkC;AAC9BmE,2BAAOM,IAAP,CAAa,qBAAoBoB,OAAO,CAAC/F,GAAI,iBAAjC,GACP,4DADO,GAEP,oCAFL;AAGH,WAJD,MAKK;AACDqE,2BAAOI,KAAP,CAAc,qBAAoBsB,OAAO,CAAC/F,GAAI,aAAjC,GACR,qBAAoBgG,QAAQ,CAAC9F,MAAO,6BAD5B,GAER,SAFL;AAGH;AACJ;AACJ;AACJ;;AACDoG,IAAAA,eAAe,GAAGA,eAAe,IAAIA,eAAe,CAACpG,MAAhB,KAA2B,GAA9C,GACdoG,eADc,GACIiB,SADtB;AAEH;;AACD,SAAOjB,eAAe,GAAGA,eAAH,GAAqB,IAA3C;AACH,CA/CD;AAgDA;;;;;;;;;;;;;;;;;AAeA,MAAMF,oBAAoB,GAAG,OAAO;AAAEL,EAAAA,OAAF;AAAWM,EAAAA,IAAX;AAAiBvE,EAAAA,OAAO,GAAG;AAA3B,CAAP,KAA4C;AACrE,QAAM0F,yBAAyB,GAAG7B,yBAAY7C,MAAZ,CAAmBhB,OAAnB,EAA4B;AAAqB;AAAjD,GAAlC;;AACA,MAAIqE,gBAAgB,GAAGJ,OAAvB;;AACA,OAAK,MAAMF,MAAX,IAAqB2B,yBAArB,EAAgD;AAC5CrB,IAAAA,gBAAgB,GAAG,MAAMN,MAAM,CAAC;AAAqB;AAAtB,KAAN,CAA0DkB,IAA1D,CAA+DlB,MAA/D,EAAuE;AAAEQ,MAAAA,IAAF;AAAQN,MAAAA,OAAO,EAAEI;AAAjB,KAAvE,CAAzB;;AACA,QAAI,OAAOA,gBAAP,KAA4B,QAAhC,EAA0C;AACtCA,MAAAA,gBAAgB,GAAG,IAAIsB,OAAJ,CAAYtB,gBAAZ,CAAnB;AACH;;AACD,QAAI,kBAAyB,YAA7B,EAA2C;AACvCiB,qBAAO7F,UAAP,CAAkB4E,gBAAlB,EAAoCsB,OAApC,EAA6C;AACzC9I,QAAAA,UAAU,EAAE,QAD6B;AAEzCE,QAAAA,QAAQ,EAAE;AAAqB;AAFU;AAGzCG,QAAAA,oBAAoB,EAAE;AAHmB,OAA7C;AAKH;AACJ;;AACD,SAAOmH,gBAAP;AACH,CAjBD;;AAkBO,MAAMuB,YAAY,GAAG;AACxBZ,EAAAA,GAAG,EAAEhB,UADmB;AAExBoB,EAAAA,KAAK,EAAEL;AAFiB,CAArB;;;;;;;;;;AC1OP;;AACA;;AACA;;AACA;;AACA;;AACA;;AAZA;;;;;;;;AAaA;;;;;;;;;;;;;;;AAeA,MAAMc,YAAY,GAAG,OAAO;AAAE5B,EAAAA,OAAF;AAAW6B,EAAAA,YAAX;AAAyB3B,EAAAA,KAAzB;AAAgCnE,EAAAA,OAAO,GAAG;AAA1C,CAAP,KAA2D;AAC5E,MAAI,OAAOiE,OAAP,KAAmB,QAAvB,EAAiC;AAC7BA,IAAAA,OAAO,GAAG,IAAI0B,OAAJ,CAAY1B,OAAZ,CAAV;AACH,GAH2E,CAI5E;AACA;AACA;;;AACA,MAAIE,KAAK,YAAY4B,UAAjB,IAA+B5B,KAAK,CAAC6B,eAAzC,EAA0D;AACtD,UAAMC,uBAAuB,GAAG,MAAM9B,KAAK,CAAC6B,eAA5C;;AACA,QAAIC,uBAAJ,EAA6B;AACzB,UAAI,kBAAyB,YAA7B,EAA2C;AACvC1D,uBAAOK,GAAP,CAAY,4CAAD,GACN,IAAG,oCAAeqB,OAAO,CAAC/F,GAAvB,CAA4B,GADpC;AAEH;;AACD,aAAO+H,uBAAP;AACH;AACJ;;AACD,MAAI,kBAAyB,YAA7B,EAA2C;AACvCX,mBAAO7F,UAAP,CAAkBwE,OAAlB,EAA2B0B,OAA3B,EAAoC;AAChCpJ,MAAAA,SAAS,EAAE,SADqB;AAEhCU,MAAAA,aAAa,EAAE0I,OAFiB;AAGhC9I,MAAAA,UAAU,EAAE,cAHoB;AAIhCC,MAAAA,SAAS,EAAE,cAJqB;AAKhCC,MAAAA,QAAQ,EAAE;AALsB,KAApC;AAOH;;AACD,QAAMmJ,kBAAkB,GAAGrC,yBAAY7C,MAAZ,CAAmBhB,OAAnB,EAA4B;AAAe;AAA3C,GAA3B,CA1B4E,CA2B5E;AACA;AACA;;;AACA,QAAMmG,eAAe,GAAGD,kBAAkB,CAACxH,MAAnB,GAA4B,CAA5B,GACpBuF,OAAO,CAACmC,KAAR,EADoB,GACF,IADtB;;AAEA,MAAI;AACA,SAAK,IAAIrC,MAAT,IAAmB/D,OAAnB,EAA4B;AACxB,UAAI;AAAmB;AAAnB,SAA+C+D,MAAnD,EAA2D;AACvD,cAAMsB,YAAY,GAAGtB,MAAM,CAAC;AAAmB;AAApB,SAA3B;AACA,cAAMsC,YAAY,GAAGpC,OAAO,CAACmC,KAAR,EAArB;AACAnC,QAAAA,OAAO,GAAI,MAAMoB,YAAY,CAACJ,IAAb,CAAkBlB,MAAlB,EAA0B;AACvCE,UAAAA,OAAO,EAAEoC,YAD8B;AAEvClC,UAAAA;AAFuC,SAA1B,CAAjB;;AAIA,YAAI,kBAAyB,YAA7B,EAA2C;AACvC,cAAIF,OAAJ,EAAa;AACTqB,2BAAO7F,UAAP,CAAkBwE,OAAlB,EAA2B0B,OAA3B,EAAoC;AAChC9I,cAAAA,UAAU,EAAE,QADoB;AAEhCE,cAAAA,QAAQ,EAAE;AAA2B;AAFL;AAGhCG,cAAAA,oBAAoB,EAAE;AAHU,aAApC;AAKH;AACJ;AACJ;AACJ;AACJ,GApBD,CAqBA,OAAOoJ,GAAP,EAAY;AACR,UAAM,IAAIxH,0BAAJ,CAAiB,iCAAjB,EAAoD;AACtDrB,MAAAA,WAAW,EAAE6I;AADyC,KAApD,CAAN;AAGH,GAzD2E,CA0D5E;AACA;AACA;;;AACA,MAAIC,qBAAqB,GAAGtC,OAAO,CAACmC,KAAR,EAA5B;;AACA,MAAI;AACA,QAAII,aAAJ,CADA,CAEA;;AACA,QAAIvC,OAAO,CAACM,IAAR,KAAiB,UAArB,EAAiC;AAC7BiC,MAAAA,aAAa,GAAG,MAAMC,KAAK,CAACxC,OAAD,CAA3B;AACH,KAFD,MAGK;AACDuC,MAAAA,aAAa,GAAG,MAAMC,KAAK,CAACxC,OAAD,EAAU6B,YAAV,CAA3B;AACH;;AACD,QAAI,kBAAyB,YAA7B,EAA2C;AACvCvD,qBAAOI,KAAP,CAAc,sBAAD,GACR,IAAG,oCAAesB,OAAO,CAAC/F,GAAvB,CAA4B,6BADvB,GAER,WAAUsI,aAAa,CAACpI,MAAO,IAFpC;AAGH;;AACD,SAAK,MAAM2F,MAAX,IAAqB/D,OAArB,EAA8B;AAC1B,UAAI;AAAkB;AAAlB,SAA6C+D,MAAjD,EAAyD;AACrDyC,QAAAA,aAAa,GAAG,MAAMzC,MAAM,CAAC;AAAkB;AAAnB,SAAN,CACjBkB,IADiB,CACZlB,MADY,EACJ;AACdI,UAAAA,KADc;AAEdF,UAAAA,OAAO,EAAEsC,qBAFK;AAGdrC,UAAAA,QAAQ,EAAEsC;AAHI,SADI,CAAtB;;AAMA,YAAI,kBAAyB,YAA7B,EAA2C;AACvC,cAAIA,aAAJ,EAAmB;AACflB,2BAAO7F,UAAP,CAAkB+G,aAAlB,EAAiCjB,QAAjC,EAA2C;AACvC1I,cAAAA,UAAU,EAAE,QAD2B;AAEvCE,cAAAA,QAAQ,EAAE;AAAkB;AAFW;AAGvCG,cAAAA,oBAAoB,EAAE;AAHiB,aAA3C;AAKH;AACJ;AACJ;AACJ;;AACD,WAAOsJ,aAAP;AACH,GAlCD,CAmCA,OAAOrI,KAAP,EAAc;AACV,QAAI,kBAAyB,YAA7B,EAA2C;AACvCoE,qBAAOpE,KAAP,CAAc,sBAAD,GACR,IAAG,oCAAe8F,OAAO,CAAC/F,GAAvB,CAA4B,mBADpC,EACwDC,KADxD;AAEH;;AACD,SAAK,MAAM4F,MAAX,IAAqBmC,kBAArB,EAAyC;AACrC,YAAMnC,MAAM,CAAC;AAAe;AAAhB,OAAN,CAA4CkB,IAA5C,CAAiDlB,MAAjD,EAAyD;AAC3D5F,QAAAA,KAD2D;AAE3DgG,QAAAA,KAF2D;AAG3DgC,QAAAA,eAAe,EAAEA,eAAe,CAACC,KAAhB,EAH0C;AAI3DnC,QAAAA,OAAO,EAAEsC,qBAAqB,CAACH,KAAtB;AAJkD,OAAzD,CAAN;AAMH;;AACD,UAAMjI,KAAN;AACH;AACJ,CAhHD;;AAiHA,MAAMuI,YAAY,GAAG;AACjBD,EAAAA,KAAK,EAAEZ;AADU,CAArB;;;;;;;;;;ACtIA;;AAPA;;;;;;;AAQA,IAAIc,aAAJ;AACA;;;;;;;;;;AASA,SAASC,kCAAT,GAA8C;AAC1C,MAAID,aAAa,KAAKlB,SAAtB,EAAiC;AAC7B,UAAMoB,YAAY,GAAG,IAAItB,QAAJ,CAAa,EAAb,CAArB;;AACA,QAAI,UAAUsB,YAAd,EAA4B;AACxB,UAAI;AACA,YAAItB,QAAJ,CAAasB,YAAY,CAACC,IAA1B;AACAH,QAAAA,aAAa,GAAG,IAAhB;AACH,OAHD,CAIA,OAAOxI,KAAP,EAAc;AACVwI,QAAAA,aAAa,GAAG,KAAhB;AACH;AACJ;;AACDA,IAAAA,aAAa,GAAG,KAAhB;AACH;;AACD,SAAOA,aAAP;AACH;;;;;;;;;AC1BD;;AACA;;AARA;;;;;;;;AASA;;;;;;;;;;;;;;;;AAgBA,eAAeI,YAAf,CAA4B7C,QAA5B,EAAsC8C,QAAtC,EAAgD;AAC5C,QAAMC,cAAc,GAAG/C,QAAQ,CAACkC,KAAT,EAAvB,CAD4C,CAE5C;;AACA,QAAMc,YAAY,GAAG;AACjBC,IAAAA,OAAO,EAAE,IAAIC,OAAJ,CAAYH,cAAc,CAACE,OAA3B,CADQ;AAEjB/I,IAAAA,MAAM,EAAE6I,cAAc,CAAC7I,MAFN;AAGjBiJ,IAAAA,UAAU,EAAEJ,cAAc,CAACI;AAHV,GAArB,CAH4C,CAQ5C;;AACA,QAAMC,oBAAoB,GAAGN,QAAQ,GAAGA,QAAQ,CAACE,YAAD,CAAX,GAA4BA,YAAjE,CAT4C,CAU5C;AACA;AACA;;AACA,QAAMJ,IAAI,GAAG,gFACTG,cAAc,CAACH,IADN,GACa,MAAMG,cAAc,CAACM,IAAf,EADhC;AAEA,SAAO,IAAIhC,QAAJ,CAAauB,IAAb,EAAmBQ,oBAAnB,CAAP;AACH;;AACD;;;;;;;;;ACnCA;;AACA;;AARA;;;;;;;AASA;AACA,MAAME,qBAAqB,GAAG,iBAA9B;AACA;;;;;;;;;;AASO,SAASC,cAAT,CAAwBpK,KAAxB,EAA+B;AAClC,MAAI,CAACA,KAAL,EAAY;AACR,UAAM,IAAIyB,0BAAJ,CAAiB,mCAAjB,EAAsD;AAAEzB,MAAAA;AAAF,KAAtD,CAAN;AACH,GAHiC,CAIlC;AACA;;;AACA,MAAI,OAAOA,KAAP,KAAiB,QAArB,EAA+B;AAC3B,UAAMqK,SAAS,GAAG,IAAIzF,GAAJ,CAAQ5E,KAAR,EAAe8E,QAAQ,CAACC,IAAxB,CAAlB;AACA,WAAO;AACHuF,MAAAA,QAAQ,EAAED,SAAS,CAACtF,IADjB;AAEHlE,MAAAA,GAAG,EAAEwJ,SAAS,CAACtF;AAFZ,KAAP;AAIH;;AACD,QAAM;AAAEwF,IAAAA,QAAF;AAAY1J,IAAAA;AAAZ,MAAoBb,KAA1B;;AACA,MAAI,CAACa,GAAL,EAAU;AACN,UAAM,IAAIY,0BAAJ,CAAiB,mCAAjB,EAAsD;AAAEzB,MAAAA;AAAF,KAAtD,CAAN;AACH,GAhBiC,CAiBlC;AACA;;;AACA,MAAI,CAACuK,QAAL,EAAe;AACX,UAAMF,SAAS,GAAG,IAAIzF,GAAJ,CAAQ/D,GAAR,EAAaiE,QAAQ,CAACC,IAAtB,CAAlB;AACA,WAAO;AACHuF,MAAAA,QAAQ,EAAED,SAAS,CAACtF,IADjB;AAEHlE,MAAAA,GAAG,EAAEwJ,SAAS,CAACtF;AAFZ,KAAP;AAIH,GAzBiC,CA0BlC;AACA;;;AACA,QAAMyF,WAAW,GAAG,IAAI5F,GAAJ,CAAQ/D,GAAR,EAAaiE,QAAQ,CAACC,IAAtB,CAApB;AACA,QAAM0F,WAAW,GAAG,IAAI7F,GAAJ,CAAQ/D,GAAR,EAAaiE,QAAQ,CAACC,IAAtB,CAApB;AACAyF,EAAAA,WAAW,CAACE,YAAZ,CAAyBC,GAAzB,CAA6BR,qBAA7B,EAAoDI,QAApD;AACA,SAAO;AACHD,IAAAA,QAAQ,EAAEE,WAAW,CAACzF,IADnB;AAEHlE,IAAAA,GAAG,EAAE4J,WAAW,CAAC1F;AAFd,GAAP;AAIH;;;;;;;;;AChDD;;AACA;;AARA;;;;;;;;AASA;;;;;;AAMA,MAAM6F,QAAQ,GAAG,CAACC,UAAD,EAAaC,WAAb,KAA6B;AAC1C5F,iBAAOO,cAAP,CAAsBoF,UAAtB;;AACA,OAAK,MAAMhK,GAAX,IAAkBiK,WAAlB,EAA+B;AAC3B5F,mBAAOK,GAAP,CAAW1E,GAAX;AACH;;AACDqE,iBAAOQ,QAAP;AACH,CAND;AAOA;;;;;;;;AAMO,SAASqF,mBAAT,CAA6BD,WAA7B,EAA0C;AAC7C,QAAME,aAAa,GAAGF,WAAW,CAACzJ,MAAlC;;AACA,MAAI2J,aAAa,GAAG,CAApB,EAAuB;AACnB9F,mBAAOO,cAAP,CAAuB,6BAAD,GACjB,GAAEuF,aAAc,UADC,GAEjB,UAASA,aAAa,KAAK,CAAlB,GAAsB,MAAtB,GAA+B,QAAS,WAFtD;;AAGAJ,IAAAA,QAAQ,CAAC,wBAAD,EAA2BE,WAA3B,CAAR;;AACA5F,mBAAOQ,QAAP;AACH;AACJ;;;;;;;;;AC9BD;;AACA;;AARA;;;;;;;;AASA;;;;;;AAMA,SAASuF,YAAT,CAAsBJ,UAAtB,EAAkCK,IAAlC,EAAwC;AACpC,MAAIA,IAAI,CAAC7J,MAAL,KAAgB,CAApB,EAAuB;AACnB;AACH;;AACD6D,iBAAOO,cAAP,CAAsBoF,UAAtB;;AACA,OAAK,MAAMhK,GAAX,IAAkBqK,IAAlB,EAAwB;AACpBhG,mBAAOK,GAAP,CAAW1E,GAAX;AACH;;AACDqE,iBAAOQ,QAAP;AACH;AACD;;;;;;;;;AAOO,SAASyF,mBAAT,CAA6BC,cAA7B,EAA6CC,oBAA7C,EAAmE;AACtE,QAAMC,cAAc,GAAGF,cAAc,CAAC/J,MAAtC;AACA,QAAMkK,qBAAqB,GAAGF,oBAAoB,CAAChK,MAAnD;;AACA,MAAIiK,cAAc,IAAIC,qBAAtB,EAA6C;AACzC,QAAIlL,OAAO,GAAI,cAAaiL,cAAe,QAAOA,cAAc,KAAK,CAAnB,GAAuB,EAAvB,GAA4B,GAAI,GAAlF;;AACA,QAAIC,qBAAqB,GAAG,CAA5B,EAA+B;AAC3BlL,MAAAA,OAAO,IAAK,IAAGkL,qBAAsB,GAA1B,GACN,OAAMA,qBAAqB,KAAK,CAA1B,GAA8B,KAA9B,GAAsC,OAAQ,kBADzD;AAEH;;AACDrG,mBAAOO,cAAP,CAAsBpF,OAAtB;;AACA4K,IAAAA,YAAY,CAAE,4BAAF,EAA+BG,cAA/B,CAAZ;;AACAH,IAAAA,YAAY,CAAE,iCAAF,EAAoCI,oBAApC,CAAZ;;AACAnG,mBAAOQ,QAAP;AACH;AACJ;;;;;;;;;ACvCD;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AAjBA;;;;;;;;AAkBA;;;;;AAKA,MAAM8F,kBAAN,CAAyB;AACrB;;;;;;AAMA9J,EAAAA,WAAW,CAACV,SAAD,EAAY;AACnB,SAAKyK,UAAL,GAAkBvH,uBAAWI,eAAX,CAA2BtD,SAA3B,CAAlB;AACA,SAAK0K,gBAAL,GAAwB,IAAIC,GAAJ,EAAxB;AACA,SAAKC,iBAAL,GAAyB,IAAID,GAAJ,EAAzB;AACA,SAAKE,uBAAL,GAA+B,IAAIF,GAAJ,EAA/B;AACH;AACD;;;;;;;;;;AAQAG,EAAAA,cAAc,CAACC,OAAD,EAAU;AACpB,QAAI,kBAAyB,YAA7B,EAA2C;AACvC9D,qBAAOnG,OAAP,CAAeiK,OAAf,EAAwB;AACpBvM,QAAAA,UAAU,EAAE,oBADQ;AAEpBC,QAAAA,SAAS,EAAE,oBAFS;AAGpBC,QAAAA,QAAQ,EAAE,gBAHU;AAIpBR,QAAAA,SAAS,EAAE;AAJS,OAAxB;AAMH;;AACD,UAAM8M,eAAe,GAAG,EAAxB;;AACA,SAAK,MAAMhM,KAAX,IAAoB+L,OAApB,EAA6B;AACzB;AACA,UAAI,OAAO/L,KAAP,KAAiB,QAArB,EAA+B;AAC3BgM,QAAAA,eAAe,CAAChJ,IAAhB,CAAqBhD,KAArB;AACH,OAFD,MAGK,IAAIA,KAAK,IAAIA,KAAK,CAACuK,QAAN,KAAmBnC,SAAhC,EAA2C;AAC5C4D,QAAAA,eAAe,CAAChJ,IAAhB,CAAqBhD,KAAK,CAACa,GAA3B;AACH;;AACD,YAAM;AAAEyJ,QAAAA,QAAF;AAAYzJ,QAAAA;AAAZ,UAAoB,oCAAeb,KAAf,CAA1B;AACA,YAAMiM,SAAS,GAAI,OAAOjM,KAAP,KAAiB,QAAjB,IAA6BA,KAAK,CAACuK,QAApC,GACd,QADc,GACH,SADf;;AAEA,UAAI,KAAKmB,gBAAL,CAAsBQ,GAAtB,CAA0BrL,GAA1B,KACA,KAAK6K,gBAAL,CAAsB7I,GAAtB,CAA0BhC,GAA1B,MAAmCyJ,QADvC,EACiD;AAC7C,cAAM,IAAI7I,0BAAJ,CAAiB,uCAAjB,EAA0D;AAC5DxB,UAAAA,UAAU,EAAE,KAAKyL,gBAAL,CAAsB7I,GAAtB,CAA0BhC,GAA1B,CADgD;AAE5DX,UAAAA,WAAW,EAAEoK;AAF+C,SAA1D,CAAN;AAIH;;AACD,UAAI,OAAOtK,KAAP,KAAiB,QAAjB,IAA6BA,KAAK,CAACmM,SAAvC,EAAkD;AAC9C,YAAI,KAAKN,uBAAL,CAA6BK,GAA7B,CAAiC5B,QAAjC,KACA,KAAKuB,uBAAL,CAA6BhJ,GAA7B,CAAiCyH,QAAjC,MAA+CtK,KAAK,CAACmM,SADzD,EACoE;AAChE,gBAAM,IAAI1K,0BAAJ,CAAiB,2CAAjB,EAA8D;AAChEZ,YAAAA;AADgE,WAA9D,CAAN;AAGH;;AACD,aAAKgL,uBAAL,CAA6BlB,GAA7B,CAAiCL,QAAjC,EAA2CtK,KAAK,CAACmM,SAAjD;AACH;;AACD,WAAKT,gBAAL,CAAsBf,GAAtB,CAA0B9J,GAA1B,EAA+ByJ,QAA/B;;AACA,WAAKsB,iBAAL,CAAuBjB,GAAvB,CAA2B9J,GAA3B,EAAgCoL,SAAhC;;AACA,UAAID,eAAe,CAAC3K,MAAhB,GAAyB,CAA7B,EAAgC;AAC5B,cAAM+K,cAAc,GAAI,8CAAD,GAClB,SAAQJ,eAAe,CAACpI,IAAhB,CAAqB,IAArB,CAA2B,gCADjB,GAElB,0CAFL;;AAGA,YAAI,kBAAyB,YAA7B,EAA2C;AACvC;AACA;AACAmC,UAAAA,OAAO,CAACP,IAAR,CAAa4G,cAAb;AACH,SAJD,MAKK;AACDlH,yBAAOM,IAAP,CAAY4G,cAAZ;AACH;AACJ;AACJ;AACJ;AACD;;;;;;;;;;;;AAUA,QAAMC,OAAN,CAAc;AAAEvF,IAAAA,KAAF;AAASnE,IAAAA;AAAT,MAAqB,EAAnC,EAAuC;AACnC,QAAI,kBAAyB,YAA7B,EAA2C;AACvC,UAAIA,OAAJ,EAAa;AACTsF,uBAAOnG,OAAP,CAAea,OAAf,EAAwB;AACpBnD,UAAAA,UAAU,EAAE,oBADQ;AAEpBC,UAAAA,SAAS,EAAE,oBAFS;AAGpBC,UAAAA,QAAQ,EAAE,SAHU;AAIpBR,UAAAA,SAAS,EAAE;AAJS,SAAxB;AAMH;AACJ;;AACD,UAAMoN,aAAa,GAAG,EAAtB;AACA,UAAMC,gBAAgB,GAAG,EAAzB;AACA,UAAMlF,KAAK,GAAG,MAAMxF,IAAI,CAACyF,MAAL,CAAYC,IAAZ,CAAiB,KAAKkE,UAAtB,CAApB;AACA,UAAMe,qBAAqB,GAAG,MAAMnF,KAAK,CAACpD,IAAN,EAApC;AACA,UAAMwI,iBAAiB,GAAG,IAAIpG,GAAJ,CAAQmG,qBAAqB,CAACE,GAAtB,CAA2B9F,OAAD,IAAaA,OAAO,CAAC/F,GAA/C,CAAR,CAA1B;;AACA,SAAK,MAAM,CAACA,GAAD,EAAMyJ,QAAN,CAAX,IAA8B,KAAKoB,gBAAnC,EAAqD;AACjD,UAAIe,iBAAiB,CAACP,GAAlB,CAAsB5B,QAAtB,CAAJ,EAAqC;AACjCiC,QAAAA,gBAAgB,CAACvJ,IAAjB,CAAsBnC,GAAtB;AACH,OAFD,MAGK;AACDyL,QAAAA,aAAa,CAACtJ,IAAd,CAAmB;AAAEsH,UAAAA,QAAF;AAAYzJ,UAAAA;AAAZ,SAAnB;AACH;AACJ;;AACD,UAAM8L,gBAAgB,GAAGL,aAAa,CAACI,GAAd,CAAkB,CAAC;AAAEpC,MAAAA,QAAF;AAAYzJ,MAAAA;AAAZ,KAAD,KAAuB;AAC9D,YAAMsL,SAAS,GAAG,KAAKN,uBAAL,CAA6BhJ,GAA7B,CAAiCyH,QAAjC,CAAlB;;AACA,YAAM2B,SAAS,GAAG,KAAKL,iBAAL,CAAuB/I,GAAvB,CAA2BhC,GAA3B,CAAlB;;AACA,aAAO,KAAK+L,cAAL,CAAoB;AACvBtC,QAAAA,QADuB;AAEvB2B,QAAAA,SAFuB;AAGvBnF,QAAAA,KAHuB;AAIvBqF,QAAAA,SAJuB;AAKvBxJ,QAAAA,OALuB;AAMvB9B,QAAAA;AANuB,OAApB,CAAP;AAQH,KAXwB,CAAzB;AAYA,UAAMgM,OAAO,CAACC,GAAR,CAAYH,gBAAZ,CAAN;AACA,UAAMI,WAAW,GAAGT,aAAa,CAACI,GAAd,CAAmBjK,IAAD,IAAUA,IAAI,CAAC5B,GAAjC,CAApB;;AACA,QAAI,kBAAyB,YAA7B,EAA2C;AACvC,oDAAoBkM,WAApB,EAAiCR,gBAAjC;AACH;;AACD,WAAO;AACHQ,MAAAA,WADG;AAEHC,MAAAA,cAAc,EAAET;AAFb,KAAP;AAIH;AACD;;;;;;;;AAMA,QAAMU,QAAN,GAAiB;AACb,UAAM5F,KAAK,GAAG,MAAMxF,IAAI,CAACyF,MAAL,CAAYC,IAAZ,CAAiB,KAAKkE,UAAtB,CAApB;AACA,UAAMyB,uBAAuB,GAAG,MAAM7F,KAAK,CAACpD,IAAN,EAAtC;AACA,UAAMkJ,iBAAiB,GAAG,IAAI9G,GAAJ,CAAQ,KAAKqF,gBAAL,CAAsB0B,MAAtB,EAAR,CAA1B;AACA,UAAMtC,WAAW,GAAG,EAApB;;AACA,SAAK,MAAMlE,OAAX,IAAsBsG,uBAAtB,EAA+C;AAC3C,UAAI,CAACC,iBAAiB,CAACjB,GAAlB,CAAsBtF,OAAO,CAAC/F,GAA9B,CAAL,EAAyC;AACrC,cAAMwG,KAAK,CAACgG,MAAN,CAAazG,OAAb,CAAN;AACAkE,QAAAA,WAAW,CAAC9H,IAAZ,CAAiB4D,OAAO,CAAC/F,GAAzB;AACH;AACJ;;AACD,QAAI,kBAAyB,YAA7B,EAA2C;AACvC,oDAAoBiK,WAApB;AACH;;AACD,WAAO;AAAEA,MAAAA;AAAF,KAAP;AACH;AACD;;;;;;;;;;;;;;;;;;;;;;AAoBA,QAAM8B,cAAN,CAAqB;AAAEtC,IAAAA,QAAF;AAAYzJ,IAAAA,GAAZ;AAAiBoL,IAAAA,SAAjB;AAA4BnF,IAAAA,KAA5B;AAAmCnE,IAAAA,OAAnC;AAA4CwJ,IAAAA;AAA5C,GAArB,EAA8E;AAC1E,UAAMvF,OAAO,GAAG,IAAI0B,OAAJ,CAAYzH,GAAZ,EAAiB;AAC7BsL,MAAAA,SAD6B;AAE7B9E,MAAAA,KAAK,EAAE4E,SAFsB;AAG7BqB,MAAAA,WAAW,EAAE;AAHgB,KAAjB,CAAhB;AAKA,QAAIzG,QAAQ,GAAG,MAAMwC,2BAAaD,KAAb,CAAmB;AACpCtC,MAAAA,KADoC;AAEpCnE,MAAAA,OAFoC;AAGpCiE,MAAAA;AAHoC,KAAnB,CAArB,CAN0E,CAW1E;AACA;AACA;;AACA,QAAI2G,qBAAJ;;AACA,SAAK,MAAM7G,MAAX,IAAsB/D,OAAO,IAAI,EAAjC,EAAsC;AAClC,UAAI,qBAAqB+D,MAAzB,EAAiC;AAC7B6G,QAAAA,qBAAqB,GAAG7G,MAAxB;AACH;AACJ;;AACD,UAAM8G,eAAe,GAAGD,qBAAqB,GACzC;AACA;AACA;AACA,UAAMA,qBAAqB,CAACE,eAAtB,CAAsC;AAAE3G,MAAAA,KAAF;AAASF,MAAAA,OAAT;AAAkBC,MAAAA;AAAlB,KAAtC,CAJmC,GAKzC;AACA;AACAA,IAAAA,QAAQ,CAAC9F,MAAT,GAAkB,GAPtB,CApB0E,CA4B1E;AACA;;AACA,QAAI,CAACyM,eAAL,EAAsB;AAClB,YAAM,IAAI/L,0BAAJ,CAAiB,yBAAjB,EAA4C;AAC9CZ,QAAAA,GAD8C;AAE9CE,QAAAA,MAAM,EAAE8F,QAAQ,CAAC9F;AAF6B,OAA5C,CAAN;AAIH,KAnCyE,CAoC1E;AACA;AACA;AACA;;;AACA,QAAI8F,QAAQ,CAAC6G,UAAb,EAAyB;AACrB7G,MAAAA,QAAQ,GAAG,MAAM,gCAAaA,QAAb,CAAjB;AACH;;AACD,UAAM0B,2BAAaZ,GAAb,CAAiB;AACnBb,MAAAA,KADmB;AAEnBnE,MAAAA,OAFmB;AAGnBkE,MAAAA,QAHmB;AAInB;AACAD,MAAAA,OAAO,EAAE0D,QAAQ,KAAKzJ,GAAb,GAAmB+F,OAAnB,GAA6B,IAAI0B,OAAJ,CAAYgC,QAAZ,CALnB;AAMnBtJ,MAAAA,SAAS,EAAE,KAAKyK,UANG;AAOnB1E,MAAAA,YAAY,EAAE;AACV4G,QAAAA,YAAY,EAAE;AADJ;AAPK,KAAjB,CAAN;AAWH;AACD;;;;;;;;AAMAC,EAAAA,kBAAkB,GAAG;AACjB,WAAO,KAAKlC,gBAAZ;AACH;AACD;;;;;;;;AAMAmC,EAAAA,aAAa,GAAG;AACZ,WAAO,CAAC,GAAG,KAAKnC,gBAAL,CAAsBzH,IAAtB,EAAJ,CAAP;AACH;AACD;;;;;;;;;;;AASA6J,EAAAA,iBAAiB,CAACjN,GAAD,EAAM;AACnB,UAAMwJ,SAAS,GAAG,IAAIzF,GAAJ,CAAQ/D,GAAR,EAAaiE,QAAQ,CAACC,IAAtB,CAAlB;AACA,WAAO,KAAK2G,gBAAL,CAAsB7I,GAAtB,CAA0BwH,SAAS,CAACtF,IAApC,CAAP;AACH;AACD;;;;;;;;;;;;;;;;;;;AAiBA,QAAMgJ,aAAN,CAAoBnH,OAApB,EAA6B;AACzB,UAAM/F,GAAG,GAAG+F,OAAO,YAAY0B,OAAnB,GAA6B1B,OAAO,CAAC/F,GAArC,GAA2C+F,OAAvD;AACA,UAAM0D,QAAQ,GAAG,KAAKwD,iBAAL,CAAuBjN,GAAvB,CAAjB;;AACA,QAAIyJ,QAAJ,EAAc;AACV,YAAMjD,KAAK,GAAG,MAAMxF,IAAI,CAACyF,MAAL,CAAYC,IAAZ,CAAiB,KAAKkE,UAAtB,CAApB;AACA,aAAOpE,KAAK,CAACU,KAAN,CAAYuC,QAAZ,CAAP;AACH;;AACD,WAAOlC,SAAP;AACH;AACD;;;;;;;;;;;;;;;AAaA4F,EAAAA,aAAa,CAACC,iBAAiB,GAAG,IAArB,EAA2B;AACpC,WAAO,OAAO;AAAErH,MAAAA;AAAF,KAAP,KAAuB;AAC1B,UAAI;AACA,cAAMC,QAAQ,GAAG,MAAM,KAAKkH,aAAL,CAAmBnH,OAAnB,CAAvB;;AACA,YAAIC,QAAJ,EAAc;AACV,iBAAOA,QAAP;AACH,SAJD,CAKA;AACA;;;AACA,cAAM,IAAIpF,0BAAJ,CAAiB,wBAAjB,EAA2C;AAC7CT,UAAAA,SAAS,EAAE,KAAKyK,UAD6B;AAE7C5K,UAAAA,GAAG,EAAE+F,OAAO,YAAY0B,OAAnB,GAA6B1B,OAAO,CAAC/F,GAArC,GAA2C+F;AAFH,SAA3C,CAAN;AAIH,OAXD,CAYA,OAAO9F,KAAP,EAAc;AACV,YAAImN,iBAAJ,EAAuB;AACnB,cAAI,kBAAyB,YAA7B,EAA2C;AACvC/I,2BAAOI,KAAP,CAAc,6CAAD,GACR,0BADL,EACgCxE,KADhC;AAEH;;AACD,iBAAOsI,KAAK,CAACxC,OAAD,CAAZ;AACH;;AACD,cAAM9F,KAAN;AACH;AACJ,KAvBD;AAwBH;AACD;;;;;;;;;;;;;;;;AAcAoN,EAAAA,uBAAuB,CAACrN,GAAD,EAAMoN,iBAAiB,GAAG,IAA1B,EAAgC;AACnD,UAAM3D,QAAQ,GAAG,KAAKwD,iBAAL,CAAuBjN,GAAvB,CAAjB;;AACA,QAAI,CAACyJ,QAAL,EAAe;AACX,YAAM,IAAI7I,0BAAJ,CAAiB,mBAAjB,EAAsC;AAAEZ,QAAAA;AAAF,OAAtC,CAAN;AACH;;AACD,UAAMsN,OAAO,GAAG,KAAKH,aAAL,CAAmBC,iBAAnB,CAAhB;AACA,UAAMrH,OAAO,GAAG,IAAI0B,OAAJ,CAAYzH,GAAZ,CAAhB;AACA,WAAO,MAAMsN,OAAO,CAAC;AAAEvH,MAAAA;AAAF,KAAD,CAApB;AACH;;AA1VoB;;;;;;;;;;;AChBzB;;AACA;;AARA;;;;;;;AASA,IAAIwH,kBAAJ;AACA;;;;;AAIO,MAAMC,6BAA6B,GAAG,MAAM;AAC/C,MAAI,CAACD,kBAAL,EAAyB;AACrBA,IAAAA,kBAAkB,GAAG,IAAI5C,sCAAJ,EAArB;AACH;;AACD,SAAO4C,kBAAP;AACH,CALM;;;;;;;;;;;ACPP;;AAPA;;;;;;;;AAQA;;;;;;;;;;;;AAYO,SAASE,yBAAT,CAAmCjE,SAAnC,EAA8CkE,2BAA2B,GAAG,EAA5E,EAAgF;AACnF;AACA;AACA,OAAK,MAAMrP,SAAX,IAAwB,CAAC,GAAGmL,SAAS,CAACK,YAAV,CAAuBzG,IAAvB,EAAJ,CAAxB,EAA4D;AACxD,QAAIsK,2BAA2B,CAACC,IAA5B,CAAkCC,MAAD,IAAYA,MAAM,CAAC7I,IAAP,CAAY1G,SAAZ,CAA7C,CAAJ,EAA0E;AACtEmL,MAAAA,SAAS,CAACK,YAAV,CAAuB2C,MAAvB,CAA8BnO,SAA9B;AACH;AACJ;;AACD,SAAOmL,SAAP;AACH;;;;;;;;;ACtBD;;AACA;;AARA;;;;;;;;AASA;;;;;;;;;;AAUO,UAAUqE,qBAAV,CAAgC7N,GAAhC,EAAqC;AAAE0N,EAAAA,2BAAF;AAA+BI,EAAAA,cAA/B;AAA+CC,EAAAA,SAA/C;AAA0DC,EAAAA;AAA1D,IAA+E,EAApH,EAAwH;AAC3H,QAAMxE,SAAS,GAAG,IAAIzF,GAAJ,CAAQ/D,GAAR,EAAaiE,QAAQ,CAACC,IAAtB,CAAlB;AACAsF,EAAAA,SAAS,CAACyE,IAAV,GAAiB,EAAjB;AACA,QAAMzE,SAAS,CAACtF,IAAhB;AACA,QAAMgK,uBAAuB,GAAG,0DAA0B1E,SAA1B,EAAqCkE,2BAArC,CAAhC;AACA,QAAMQ,uBAAuB,CAAChK,IAA9B;;AACA,MAAI4J,cAAc,IAAII,uBAAuB,CAAC9J,QAAxB,CAAiC+J,QAAjC,CAA0C,GAA1C,CAAtB,EAAsE;AAClE,UAAMC,YAAY,GAAG,IAAIrK,GAAJ,CAAQmK,uBAAuB,CAAChK,IAAhC,CAArB;AACAkK,IAAAA,YAAY,CAAChK,QAAb,IAAyB0J,cAAzB;AACA,UAAMM,YAAY,CAAClK,IAAnB;AACH;;AACD,MAAI6J,SAAJ,EAAe;AACX,UAAMM,QAAQ,GAAG,IAAItK,GAAJ,CAAQmK,uBAAuB,CAAChK,IAAhC,CAAjB;AACAmK,IAAAA,QAAQ,CAACjK,QAAT,IAAqB,OAArB;AACA,UAAMiK,QAAQ,CAACnK,IAAf;AACH;;AACD,MAAI8J,eAAJ,EAAqB;AACjB,UAAMM,cAAc,GAAGN,eAAe,CAAC;AAAEhO,MAAAA,GAAG,EAAEwJ;AAAP,KAAD,CAAtC;;AACA,SAAK,MAAM+E,YAAX,IAA2BD,cAA3B,EAA2C;AACvC,YAAMC,YAAY,CAACrK,IAAnB;AACH;AACJ;AACJ;;;;;;;;;AClCD;;AACA;;AACA;;AATA;;;;;;;;AAUA;;;;;;;;;;;AAWO,MAAM+I,iBAAiB,GAAG,CAACjN,GAAD,EAAMwO,OAAN,KAAkB;AAC/C,QAAMjB,kBAAkB,GAAG,mEAA3B;AACA,QAAMkB,eAAe,GAAGlB,kBAAkB,CAACR,kBAAnB,EAAxB;;AACA,OAAK,MAAM2B,WAAX,IAA0B,kDAAsB1O,GAAtB,EAA2BwO,OAA3B,CAA1B,EAA+D;AAC3D,UAAMG,gBAAgB,GAAGF,eAAe,CAACzM,GAAhB,CAAoB0M,WAApB,CAAzB;;AACA,QAAIC,gBAAJ,EAAsB;AAClB,aAAOA,gBAAP;AACH;AACJ;AACJ,CATM;;;;;;;;;;;ACdP;;AACA;;AACA;;AACA;;AACA;;AAXA;;;;;;;;AAYA;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2BO,MAAMC,gBAAgB,GAAG,CAAC;AAAElB,EAAAA,2BAA2B,GAAG,CAAC,OAAD,CAAhC;AAA2CI,EAAAA,cAAc,GAAG,YAA5D;AAA0EC,EAAAA,SAAS,GAAG,IAAtF;AAA4FC,EAAAA;AAA5F,IAAiH,EAAlH,KAAyH;AACrJ,QAAM7N,SAAS,GAAGkD,uBAAWI,eAAX,EAAlB,CADqJ,CAErJ;;;AACAzC,EAAAA,IAAI,CAAC6N,gBAAL,CAAsB,OAAtB,EAAiC5I,KAAD,IAAW;AACvC,UAAM6I,YAAY,GAAG,0CAAkB7I,KAAK,CAACF,OAAN,CAAc/F,GAAhC,EAAqC;AACtD+N,MAAAA,SADsD;AAEtDD,MAAAA,cAFsD;AAGtDJ,MAAAA,2BAHsD;AAItDM,MAAAA;AAJsD,KAArC,CAArB;;AAMA,QAAI,CAACc,YAAL,EAAmB;AACf,UAAI,kBAAyB,YAA7B,EAA2C;AACvCzK,uBAAOI,KAAP,CAAc,sCAAD,GACT,oCAAewB,KAAK,CAACF,OAAN,CAAc/F,GAA7B,CADJ;AAEH;;AACD;AACH;;AACD,QAAI+O,eAAe,GAAG/N,IAAI,CAACyF,MAAL,CAAYC,IAAZ,CAAiBvG,SAAjB,EAA4B6O,IAA5B,CAAkCxI,KAAD,IAAW;AAC9D,aAAOA,KAAK,CAACU,KAAN,CAAY4H,YAAZ,CAAP;AACH,KAFqB,EAEnBE,IAFmB,CAEb/H,cAAD,IAAoB;AACxB,UAAIA,cAAJ,EAAoB;AAChB,eAAOA,cAAP;AACH,OAHuB,CAIxB;AACA;;;AACA,UAAI,kBAAyB,YAA7B,EAA2C;AACvC5C,uBAAOM,IAAP,CAAa,6BAAD,GACP,GAAE,oCAAemK,YAAf,CAA6B,OAAM3O,SAAU,kBADxC,GAEP,sCAFL;AAGH;;AACD,aAAOoI,KAAK,CAACuG,YAAD,CAAZ;AACH,KAdqB,CAAtB;;AAeA,QAAI,kBAAyB,YAA7B,EAA2C;AACvCC,MAAAA,eAAe,GAAGA,eAAe,CAACC,IAAhB,CAAsBhJ,QAAD,IAAc;AACjD;AACA;AACA3B,uBAAOO,cAAP,CAAuB,+BAAD,GAClB,oCAAeqB,KAAK,CAACF,OAAN,CAAc/F,GAA7B,CADJ;;AAEAqE,uBAAOK,GAAP,CAAY,8BAA6BoK,YAAa,EAAtD;;AACAzK,uBAAOO,cAAP,CAAuB,4BAAvB;;AACAP,uBAAOK,GAAP,CAAWuB,KAAK,CAACF,OAAjB;;AACA1B,uBAAOQ,QAAP;;AACAR,uBAAOO,cAAP,CAAuB,6BAAvB;;AACAP,uBAAOK,GAAP,CAAWsB,QAAX;;AACA3B,uBAAOQ,QAAP;;AACAR,uBAAOQ,QAAP;;AACA,eAAOmB,QAAP;AACH,OAdiB,CAAlB;AAeH;;AACDC,IAAAA,KAAK,CAACgJ,WAAN,CAAkBF,eAAlB;AACH,GA/CD;AAgDH,CAnDM;;;;;;;;;;;ACjCP;;AACA;;AAPA;;;;;;AAQA,IAAIG,aAAa,GAAG,KAApB;AACA;;;;;;;;;;;;;;;;;;;;;;;;;AAwBA,SAASC,QAAT,CAAkBX,OAAlB,EAA2B;AACvB,MAAI,CAACU,aAAL,EAAoB;AAChB,4CAAiBV,OAAjB;AACAU,IAAAA,aAAa,GAAG,IAAhB;AACH;AACJ;;AACD;;;;;;;;;AChCA;;AAPA;;;;;;;AAQA,MAAME,iBAAiB,GAAG,YAA1B;AACA;;;;;;;;;;;;;;;;;;;AAkBA,MAAMC,oBAAoB,GAAG,OAAOC,mBAAP,EAA4BC,eAAe,GAAGH,iBAA9C,KAAoE;AAC7F,QAAM/L,UAAU,GAAG,MAAMrC,IAAI,CAACyF,MAAL,CAAYrD,IAAZ,EAAzB;AACA,QAAMoM,kBAAkB,GAAGnM,UAAU,CAACP,MAAX,CAAmB3C,SAAD,IAAe;AACxD,WAAOA,SAAS,CAACuB,QAAV,CAAmB6N,eAAnB,KACHpP,SAAS,CAACuB,QAAV,CAAmBV,IAAI,CAAC2B,YAAL,CAAkBC,KAArC,CADG,IAEHzC,SAAS,KAAKmP,mBAFlB;AAGH,GAJ0B,CAA3B;AAKA,QAAMtD,OAAO,CAACC,GAAR,CAAYuD,kBAAkB,CAAC3D,GAAnB,CAAwB1L,SAAD,IAAea,IAAI,CAACyF,MAAL,CAAY+F,MAAZ,CAAmBrM,SAAnB,CAAtC,CAAZ,CAAN;AACA,SAAOqP,kBAAP;AACH,CATD;;;;;;;;;;;ACpBA;;AACA;;AACA;;AACA;;AAVA;;;;;;;;AAWA;;;;;;AAMA,SAASC,qBAAT,GAAiC;AAC7B;AACAzO,EAAAA,IAAI,CAAC6N,gBAAL,CAAsB,UAAtB,EAAoC5I,KAAD,IAAW;AAC1C,UAAM9F,SAAS,GAAGkD,uBAAWI,eAAX,EAAlB;;AACAwC,IAAAA,KAAK,CAACyJ,SAAN,CAAgB,gDAAqBvP,SAArB,EAAgC6O,IAAhC,CAAsCW,aAAD,IAAmB;AACpE,UAAI,kBAAyB,YAA7B,EAA2C;AACvC,YAAIA,aAAa,CAACnP,MAAd,GAAuB,CAA3B,EAA8B;AAC1B6D,yBAAOK,GAAP,CAAY,sDAAD,GACN,gBADL,EACsBiL,aADtB;AAEH;AACJ;AACJ,KAPe,CAAhB;AAQH,GAVD;AAWH;;AACD;;;;;;;;;ACxBA;;AACA;;AARA;;;;;;;;AASA;;;;;;;;;;;;;;;AAeA,SAASxC,aAAT,CAAuBC,iBAAiB,GAAG,IAA3C,EAAiD;AAC7C,QAAMG,kBAAkB,GAAG,mEAA3B;AACA,SAAOA,kBAAkB,CAACJ,aAAnB,CAAiCC,iBAAjC,CAAP;AACH;;AACD;;;;;;;;;ACrBA;;AACA;;AARA;;;;;;;;AASA;;;;;;;;;;;;;;;;;AAiBA,SAASC,uBAAT,CAAiCrN,GAAjC,EAAsC;AAClC,QAAMuN,kBAAkB,GAAG,mEAA3B;AACA,SAAOA,kBAAkB,CAACF,uBAAnB,CAA2CrN,GAA3C,CAAP;AACH;;AACD;;;;;;;;;ACvBA;;AACA;;AARA;;;;;;;;AASA;;;;;;;;;;;;;;;;;;;AAmBA,SAASiN,iBAAT,CAA2BjN,GAA3B,EAAgC;AAC5B,QAAMuN,kBAAkB,GAAG,mEAA3B;AACA,SAAOA,kBAAkB,CAACN,iBAAnB,CAAqCjN,GAArC,CAAP;AACH;;AACD;;;;;;;;;ACzBA;;AACA;;AARA;;;;;;;;AASA;;;;;;;;;;;;;;;AAeA,SAASkN,aAAT,CAAuBnH,OAAvB,EAAgC;AAC5B,QAAMwH,kBAAkB,GAAG,mEAA3B;AACA,SAAOA,kBAAkB,CAACL,aAAnB,CAAiCnH,OAAjC,CAAP;AACH;;AACD;;;;;;;;;ACrBA;;AACA;;AACA;;AACA;;AAVA;;;;;;;AAWA,MAAM6J,eAAe,GAAI3J,KAAD,IAAW;AAC/B,QAAMsH,kBAAkB,GAAG,mEAA3B;;AACA,QAAMzL,OAAO,GAAGC,iCAAgBC,GAAhB,EAAhB;;AACAiE,EAAAA,KAAK,CAACyJ,SAAN,CAAgBnC,kBAAkB,CAAC/B,OAAnB,CAA2B;AAAEvF,IAAAA,KAAF;AAASnE,IAAAA;AAAT,GAA3B,EACX+N,KADW,CACJ5P,KAAD,IAAW;AAClB,QAAI,kBAAyB,YAA7B,EAA2C;AACvCoE,qBAAOpE,KAAP,CAAc,8CAAD,GACR,sDADL;AAEH,KAJiB,CAKlB;;;AACA,UAAMA,KAAN;AACH,GARe,CAAhB;AASH,CAZD;;AAaA,MAAM6P,gBAAgB,GAAI7J,KAAD,IAAW;AAChC,QAAMsH,kBAAkB,GAAG,mEAA3B;AACAtH,EAAAA,KAAK,CAACyJ,SAAN,CAAgBnC,kBAAkB,CAACnB,QAAnB,EAAhB;AACH,CAHD;AAIA;;;;;;;;;;;;;;;;;;;;;AAmBA,SAAS7J,QAAT,CAAkB2I,OAAlB,EAA2B;AACvB,QAAMqC,kBAAkB,GAAG,mEAA3B;AACAA,EAAAA,kBAAkB,CAACtC,cAAnB,CAAkCC,OAAlC;;AACA,MAAIA,OAAO,CAAC1K,MAAR,GAAiB,CAArB,EAAwB;AACpB;AACA;AACA;AACA;AACAQ,IAAAA,IAAI,CAAC6N,gBAAL,CAAsB,SAAtB,EAAiCe,eAAjC;AACA5O,IAAAA,IAAI,CAAC6N,gBAAL,CAAsB,UAAtB,EAAkCiB,gBAAlC;AACH;AACJ;;AACD;;;;;;;;;ACpDA;;AACA;;AACA;;AATA;;;;;;;;AAUA;;;;;;;;;;;;;;AAcA,SAASC,gBAAT,CAA0B7E,OAA1B,EAAmCsD,OAAnC,EAA4C;AACxC,0BAAStD,OAAT;AACA,0BAASsD,OAAT;AACH;;AACD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACrBA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AAlBA;;;;;;;AAmBA,IAAI,kBAAyB,YAA7B,EAA2C;AACvCpH,iBAAOrG,OAAP,CAAe,oBAAf;AACH;AACD;;;;;;;;;;;;;;;;;;;ACtBA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACCA;;AAPA;;;;;;;;AAQA;;;;;;;;AAQO,MAAMiP,aAAa,GAAG,KAAtB;AACP;;;;;;;;;AAOO,MAAMC,YAAY,GAAG,CACxB,QADwB,EAExB,KAFwB,EAGxB,MAHwB,EAIxB,OAJwB,EAKxB,MALwB,EAMxB,KANwB,CAArB;;;;;;;;;;ACjBP;;AACA;;AARA;;;;;;;;AASA;;;;;;;AAOO,MAAMC,gBAAgB,GAAI5C,OAAD,IAAa;AACzC,MAAIA,OAAO,IAAI,OAAOA,OAAP,KAAmB,QAAlC,EAA4C;AACxC,QAAI,kBAAyB,YAA7B,EAA2C;AACvClG,qBAAOjG,SAAP,CAAiBmM,OAAjB,EAA0B,QAA1B,EAAoC;AAChC3O,QAAAA,UAAU,EAAE,iBADoB;AAEhCC,QAAAA,SAAS,EAAE,OAFqB;AAGhCC,QAAAA,QAAQ,EAAE,aAHsB;AAIhCR,QAAAA,SAAS,EAAE;AAJqB,OAApC;AAMH;;AACD,WAAOiP,OAAP;AACH,GAVD,MAWK;AACD,QAAI,kBAAyB,YAA7B,EAA2C;AACvClG,qBAAO9F,MAAP,CAAcgM,OAAd,EAAuB,UAAvB,EAAmC;AAC/B3O,QAAAA,UAAU,EAAE,iBADmB;AAE/BC,QAAAA,SAAS,EAAE,OAFoB;AAG/BC,QAAAA,QAAQ,EAAE,aAHqB;AAI/BR,QAAAA,SAAS,EAAE;AAJoB,OAAnC;AAMH;;AACD,WAAO;AAAE8R,MAAAA,MAAM,EAAE7C;AAAV,KAAP;AACH;AACJ,CAvBM;;;;;;;;;;;ACTP;;AACA;;AACA;;AACA;;AAVA;;;;;;;;AAWA;;;;;;;;;AASA,MAAM8C,KAAN,CAAY;AACR;;;;;;;;;;;AAWAvP,EAAAA,WAAW,CAACqG,KAAD,EAAQoG,OAAR,EAAiB5N,MAAM,GAAGsQ,wBAA1B,EAAyC;AAChD,QAAI,kBAAyB,YAA7B,EAA2C;AACvC5I,qBAAO9F,MAAP,CAAc4F,KAAd,EAAqB,UAArB,EAAiC;AAC7BvI,QAAAA,UAAU,EAAE,iBADiB;AAE7BC,QAAAA,SAAS,EAAE,OAFkB;AAG7BC,QAAAA,QAAQ,EAAE,aAHmB;AAI7BR,QAAAA,SAAS,EAAE;AAJkB,OAAjC;;AAMA,UAAIqB,MAAJ,EAAY;AACR0H,uBAAO5F,OAAP,CAAe9B,MAAf,EAAuBuQ,uBAAvB,EAAqC;AAAE5R,UAAAA,SAAS,EAAE;AAAb,SAArC;AACH;AACJ,KAX+C,CAYhD;AACA;;;AACA,SAAKiP,OAAL,GAAe,wCAAiBA,OAAjB,CAAf;AACA,SAAKpG,KAAL,GAAaA,KAAb;AACA,SAAKxH,MAAL,GAAcA,MAAd;AACH;;AA7BO;;;;;;;;;;;ACbZ;;AACA;;AACA;;AACA;;AAVA;;;;;;;;AAWA;;;;;;;;;;;;;;;AAeA,MAAM2Q,eAAN,SAA8BD,YAA9B,CAAoC;AAChC;;;;;;;;;;;;;;;;;;;AAmBAvP,EAAAA,WAAW,CAACyM,OAAD,EAAU;AAAEgD,IAAAA,SAAS,GAAG,CAAC,GAAD,CAAd;AAAqBC,IAAAA,QAAQ,GAAG;AAAhC,MAAuC,EAAjD,EAAqD;AAC5D,QAAI,kBAAyB,YAA7B,EAA2C;AACvCnJ,qBAAOzF,cAAP,CAAsB2O,SAAtB,EAAiCE,MAAjC,EAAyC;AACrC7R,QAAAA,UAAU,EAAE,iBADyB;AAErCC,QAAAA,SAAS,EAAE,iBAF0B;AAGrCC,QAAAA,QAAQ,EAAE,aAH2B;AAIrCR,QAAAA,SAAS,EAAE;AAJ0B,OAAzC;;AAMA+I,qBAAOzF,cAAP,CAAsB4O,QAAtB,EAAgCC,MAAhC,EAAwC;AACpC7R,QAAAA,UAAU,EAAE,iBADwB;AAEpCC,QAAAA,SAAS,EAAE,iBAFyB;AAGpCC,QAAAA,QAAQ,EAAE,aAH0B;AAIpCR,QAAAA,SAAS,EAAE;AAJyB,OAAxC;AAMH;;AACD,UAAOmQ,OAAD,IAAa,KAAKiC,MAAL,CAAYjC,OAAZ,CAAnB,EAAyClB,OAAzC;AACA,SAAKoD,UAAL,GAAkBJ,SAAlB;AACA,SAAKK,SAAL,GAAiBJ,QAAjB;AACH;AACD;;;;;;;;;;;;AAUAE,EAAAA,MAAM,CAAC;AAAEzQ,IAAAA,GAAF;AAAO+F,IAAAA;AAAP,GAAD,EAAmB;AACrB,QAAIA,OAAO,IAAIA,OAAO,CAACM,IAAR,KAAiB,UAAhC,EAA4C;AACxC,aAAO,KAAP;AACH;;AACD,UAAMuK,iBAAiB,GAAG5Q,GAAG,CAACoE,QAAJ,GAAepE,GAAG,CAAC6Q,MAA7C;;AACA,SAAK,MAAMjD,MAAX,IAAqB,KAAK+C,SAA1B,EAAqC;AACjC,UAAI/C,MAAM,CAAC7I,IAAP,CAAY6L,iBAAZ,CAAJ,EAAoC;AAChC,YAAI,kBAAyB,YAA7B,EAA2C;AACvCvM,yBAAOK,GAAP,CAAY,wBAAuBkM,iBAAkB,UAA1C,GACN,2DADM,GAEN,GAAEhD,MAAO,EAFd;AAGH;;AACD,eAAO,KAAP;AACH;AACJ;;AACD,QAAI,KAAK8C,UAAL,CAAgB/C,IAAhB,CAAsBC,MAAD,IAAYA,MAAM,CAAC7I,IAAP,CAAY6L,iBAAZ,CAAjC,CAAJ,EAAsE;AAClE,UAAI,kBAAyB,YAA7B,EAA2C;AACvCvM,uBAAOI,KAAP,CAAc,wBAAuBmM,iBAAkB,GAA1C,GACR,gBADL;AAEH;;AACD,aAAO,IAAP;AACH;;AACD,QAAI,kBAAyB,YAA7B,EAA2C;AACvCvM,qBAAOK,GAAP,CAAY,wBAAuBkM,iBAAkB,UAA1C,GACN,uDADM,GAEN,sBAFL;AAGH;;AACD,WAAO,KAAP;AACH;;AA7E+B;;;;;;;;;;;ACnBpC;;AACA;;AACA;;AACA;;AAVA;;;;;;;;AAWA;;;;;;;;;;;;;AAaA,MAAME,WAAN,SAA0BV,YAA1B,CAAgC;AAC5B;;;;;;;;;;;;;AAaAvP,EAAAA,WAAW,CAAC+M,MAAD,EAASN,OAAT,EAAkB5N,MAAlB,EAA0B;AACjC,QAAI,kBAAyB,YAA7B,EAA2C;AACvC0H,qBAAO7F,UAAP,CAAkBqM,MAAlB,EAA0B4C,MAA1B,EAAkC;AAC9B7R,QAAAA,UAAU,EAAE,iBADkB;AAE9BC,QAAAA,SAAS,EAAE,aAFmB;AAG9BC,QAAAA,QAAQ,EAAE,aAHoB;AAI9BR,QAAAA,SAAS,EAAE;AAJmB,OAAlC;AAMH;;AACD,UAAM6I,KAAK,GAAG,CAAC;AAAElH,MAAAA;AAAF,KAAD,KAAa;AACvB,YAAM+Q,MAAM,GAAGnD,MAAM,CAACoD,IAAP,CAAYhR,GAAG,CAACkE,IAAhB,CAAf,CADuB,CAEvB;;AACA,UAAI,CAAC6M,MAAL,EAAa;AACT;AACH,OALsB,CAMvB;AACA;AACA;AACA;;;AACA,UAAK/Q,GAAG,CAACmE,MAAJ,KAAeF,QAAQ,CAACE,MAAzB,IAAqC4M,MAAM,CAACE,KAAP,KAAiB,CAA1D,EAA8D;AAC1D,YAAI,kBAAyB,YAA7B,EAA2C;AACvC5M,yBAAOI,KAAP,CAAc,2BAA0BmJ,MAAO,2BAAlC,GACR,iCAAgC5N,GAAI,6BAD5B,GAER,4DAFL;AAGH;;AACD;AACH,OAjBsB,CAkBvB;AACA;AACA;AACA;;;AACA,aAAO+Q,MAAM,CAACG,KAAP,CAAa,CAAb,CAAP;AACH,KAvBD;;AAwBA,UAAMhK,KAAN,EAAaoG,OAAb,EAAsB5N,MAAtB;AACH;;AAhD2B;;;;;;;;;;;ACjBhC;;AACA;;AACA;;AACA;;AACA;;AACA;;AAZA;;;;;;;;AAaA;;;;;;;;;;;;;;;;;AAiBA,MAAMyR,MAAN,CAAa;AACT;;;AAGAtQ,EAAAA,WAAW,GAAG;AACV,SAAKuQ,OAAL,GAAe,IAAItG,GAAJ,EAAf;AACH;AACD;;;;;;;AAKA,MAAIuG,MAAJ,GAAa;AACT,WAAO,KAAKD,OAAZ;AACH;AACD;;;;;;AAIAxC,EAAAA,gBAAgB,GAAG;AACf;AACA5N,IAAAA,IAAI,CAAC6N,gBAAL,CAAsB,OAAtB,EAAiC5I,KAAD,IAAW;AACvC,YAAM;AAAEF,QAAAA;AAAF,UAAcE,KAApB;AACA,YAAM8I,eAAe,GAAG,KAAKuC,aAAL,CAAmB;AAAEvL,QAAAA,OAAF;AAAWE,QAAAA;AAAX,OAAnB,CAAxB;;AACA,UAAI8I,eAAJ,EAAqB;AACjB9I,QAAAA,KAAK,CAACgJ,WAAN,CAAkBF,eAAlB;AACH;AACJ,KAND;AAOH;AACD;;;;;;;;;;;;;;;;;;;;;;;;AAsBAwC,EAAAA,gBAAgB,GAAG;AACf;AACAvQ,IAAAA,IAAI,CAAC6N,gBAAL,CAAsB,SAAtB,EAAmC5I,KAAD,IAAW;AACzC,UAAIA,KAAK,CAACuL,IAAN,IAAcvL,KAAK,CAACuL,IAAN,CAAWnQ,IAAX,KAAoB,YAAtC,EAAoD;AAChD,cAAM;AAAEoQ,UAAAA;AAAF,YAAcxL,KAAK,CAACuL,IAA1B;;AACA,YAAI,kBAAyB,YAA7B,EAA2C;AACvCnN,yBAAOI,KAAP,CAAc,8BAAd,EAA6CgN,OAAO,CAACC,WAArD;AACH;;AACD,cAAMC,eAAe,GAAG3F,OAAO,CAACC,GAAR,CAAYwF,OAAO,CAACC,WAAR,CAAoB7F,GAApB,CAAyB1M,KAAD,IAAW;AACnE,cAAI,OAAOA,KAAP,KAAiB,QAArB,EAA+B;AAC3BA,YAAAA,KAAK,GAAG,CAACA,KAAD,CAAR;AACH;;AACD,gBAAM4G,OAAO,GAAG,IAAI0B,OAAJ,CAAY,GAAGtI,KAAf,CAAhB;AACA,iBAAO,KAAKmS,aAAL,CAAmB;AAAEvL,YAAAA;AAAF,WAAnB,CAAP,CALmE,CAMnE;AACA;AACA;AACH,SATmC,CAAZ,CAAxB,CALgD,CAc3C;;AACLE,QAAAA,KAAK,CAACyJ,SAAN,CAAgBiC,eAAhB,EAfgD,CAgBhD;;AACA,YAAI1L,KAAK,CAAC2L,KAAN,IAAe3L,KAAK,CAAC2L,KAAN,CAAY,CAAZ,CAAnB,EAAmC;AAC/BD,UAAAA,eAAe,CAAC3C,IAAhB,CAAqB,MAAM/I,KAAK,CAAC2L,KAAN,CAAY,CAAZ,EAAeC,WAAf,CAA2B,IAA3B,CAA3B;AACH;AACJ;AACJ,KAtBD;AAuBH;AACD;;;;;;;;;;;;;;;AAaAP,EAAAA,aAAa,CAAC;AAAEvL,IAAAA,OAAF;AAAWE,IAAAA;AAAX,GAAD,EAAqB;AAC9B,QAAI,kBAAyB,YAA7B,EAA2C;AACvCmB,qBAAO7F,UAAP,CAAkBwE,OAAlB,EAA2B0B,OAA3B,EAAoC;AAChC9I,QAAAA,UAAU,EAAE,iBADoB;AAEhCC,QAAAA,SAAS,EAAE,QAFqB;AAGhCC,QAAAA,QAAQ,EAAE,eAHsB;AAIhCR,QAAAA,SAAS,EAAE;AAJqB,OAApC;AAMH;;AACD,UAAM2B,GAAG,GAAG,IAAI+D,GAAJ,CAAQgC,OAAO,CAAC/F,GAAhB,EAAqBiE,QAAQ,CAACC,IAA9B,CAAZ;;AACA,QAAI,CAAClE,GAAG,CAAC8R,QAAJ,CAAaC,UAAb,CAAwB,MAAxB,CAAL,EAAsC;AAClC,UAAI,kBAAyB,YAA7B,EAA2C;AACvC1N,uBAAOI,KAAP,CAAc,2DAAd;AACH;;AACD;AACH;;AACD,QAAI;AAAEuN,MAAAA,MAAF;AAAUC,MAAAA;AAAV,QAAoB,KAAKC,iBAAL,CAAuB;AAAElS,MAAAA,GAAF;AAAO+F,MAAAA,OAAP;AAAgBE,MAAAA;AAAhB,KAAvB,CAAxB;AACA,QAAIqH,OAAO,GAAG2E,KAAK,IAAIA,KAAK,CAAC3E,OAA7B;AACA,QAAI6E,aAAa,GAAG,EAApB;;AACA,QAAI,kBAAyB,YAA7B,EAA2C;AACvC,UAAI7E,OAAJ,EAAa;AACT6E,QAAAA,aAAa,CAAChQ,IAAd,CAAmB,CACd,uCADc,EAC0B8P,KAD1B,CAAnB;;AAGA,YAAID,MAAJ,EAAY;AACRG,UAAAA,aAAa,CAAChQ,IAAd,CAAmB,CACd,sDADc,EACyC6P,MADzC,CAAnB;AAGH;AACJ;AACJ,KA9B6B,CA+B9B;AACA;;;AACA,QAAI,CAAC1E,OAAD,IAAY,KAAK8E,eAArB,EAAsC;AAClC,UAAI,kBAAyB,YAA7B,EAA2C;AACvCD,QAAAA,aAAa,CAAChQ,IAAd,CAAoB,2CAAD,GACd,8BADL;AAEH;;AACDmL,MAAAA,OAAO,GAAG,KAAK8E,eAAf;AACH;;AACD,QAAI,CAAC9E,OAAL,EAAc;AACV,UAAI,kBAAyB,YAA7B,EAA2C;AACvC;AACA;AACAjJ,uBAAOI,KAAP,CAAc,uBAAsB,oCAAezE,GAAf,CAAoB,EAAxD;AACH;;AACD;AACH;;AACD,QAAI,kBAAyB,YAA7B,EAA2C;AACvC;AACA;AACAqE,qBAAOO,cAAP,CAAuB,4BAA2B,oCAAe5E,GAAf,CAAoB,EAAtE;;AACAmS,MAAAA,aAAa,CAACE,OAAd,CAAuB9R,GAAD,IAAS;AAC3B,YAAIW,KAAK,CAACD,OAAN,CAAcV,GAAd,CAAJ,EAAwB;AACpB8D,yBAAOK,GAAP,CAAW,GAAGnE,GAAd;AACH,SAFD,MAGK;AACD8D,yBAAOK,GAAP,CAAWnE,GAAX;AACH;AACJ,OAPD;;AAQA8D,qBAAOQ,QAAP;AACH,KA7D6B,CA8D9B;AACA;;;AACA,QAAIkK,eAAJ;;AACA,QAAI;AACAA,MAAAA,eAAe,GAAGzB,OAAO,CAAC6C,MAAR,CAAe;AAAEnQ,QAAAA,GAAF;AAAO+F,QAAAA,OAAP;AAAgBE,QAAAA,KAAhB;AAAuB+L,QAAAA;AAAvB,OAAf,CAAlB;AACH,KAFD,CAGA,OAAO5J,GAAP,EAAY;AACR2G,MAAAA,eAAe,GAAG/C,OAAO,CAACsG,MAAR,CAAelK,GAAf,CAAlB;AACH;;AACD,QAAI2G,eAAe,YAAY/C,OAA3B,IAAsC,KAAKuG,aAA/C,EAA8D;AAC1DxD,MAAAA,eAAe,GAAGA,eAAe,CAACc,KAAhB,CAAuBzH,GAAD,IAAS;AAC7C,YAAI,kBAAyB,YAA7B,EAA2C;AACvC;AACA;AACA/D,yBAAOO,cAAP,CAAuB,mCAAD,GACjB,IAAG,oCAAe5E,GAAf,CAAoB,kCAD5B;;AAEAqE,yBAAOpE,KAAP,CAAc,kBAAd,EAAiCgS,KAAjC;;AACA5N,yBAAOpE,KAAP,CAAamI,GAAb;;AACA/D,yBAAOQ,QAAP;AACH;;AACD,eAAO,KAAK0N,aAAL,CAAmBpC,MAAnB,CAA0B;AAAEnQ,UAAAA,GAAF;AAAO+F,UAAAA,OAAP;AAAgBE,UAAAA;AAAhB,SAA1B,CAAP;AACH,OAXiB,CAAlB;AAYH;;AACD,WAAO8I,eAAP;AACH;AACD;;;;;;;;;;;;;;;AAaAmD,EAAAA,iBAAiB,CAAC;AAAElS,IAAAA,GAAF;AAAO+F,IAAAA,OAAP;AAAgBE,IAAAA;AAAhB,GAAD,EAA0B;AACvC,QAAI,kBAAyB,YAA7B,EAA2C;AACvCmB,qBAAO7F,UAAP,CAAkBvB,GAAlB,EAAuB+D,GAAvB,EAA4B;AACxBpF,QAAAA,UAAU,EAAE,iBADY;AAExBC,QAAAA,SAAS,EAAE,QAFa;AAGxBC,QAAAA,QAAQ,EAAE,mBAHc;AAIxBR,QAAAA,SAAS,EAAE;AAJa,OAA5B;;AAMA+I,qBAAO7F,UAAP,CAAkBwE,OAAlB,EAA2B0B,OAA3B,EAAoC;AAChC9I,QAAAA,UAAU,EAAE,iBADoB;AAEhCC,QAAAA,SAAS,EAAE,QAFqB;AAGhCC,QAAAA,QAAQ,EAAE,mBAHsB;AAIhCR,QAAAA,SAAS,EAAE;AAJqB,OAApC;AAMH;;AACD,UAAMgT,MAAM,GAAG,KAAKD,OAAL,CAAapP,GAAb,CAAiB+D,OAAO,CAACrG,MAAzB,KAAoC,EAAnD;;AACA,SAAK,MAAMuS,KAAX,IAAoBZ,MAApB,EAA4B;AACxB,UAAIW,MAAJ;AACA,UAAIQ,WAAW,GAAGP,KAAK,CAAC/K,KAAN,CAAY;AAAElH,QAAAA,GAAF;AAAO+F,QAAAA,OAAP;AAAgBE,QAAAA;AAAhB,OAAZ,CAAlB;;AACA,UAAIuM,WAAJ,EAAiB;AACb;AACAR,QAAAA,MAAM,GAAGQ,WAAT;;AACA,YAAItR,KAAK,CAACD,OAAN,CAAcuR,WAAd,KAA8BA,WAAW,CAAChS,MAAZ,KAAuB,CAAzD,EAA4D;AACxD;AACAwR,UAAAA,MAAM,GAAGzK,SAAT;AACH,SAHD,MAIK,IAAKiL,WAAW,CAAC3R,WAAZ,KAA4BsC,MAA5B,IACNA,MAAM,CAACC,IAAP,CAAYoP,WAAZ,EAAyBhS,MAAzB,KAAoC,CADnC,EACuC;AACxC;AACAwR,UAAAA,MAAM,GAAGzK,SAAT;AACH,SAJI,MAKA,IAAI,OAAOiL,WAAP,KAAuB,SAA3B,EAAsC;AACvC;AACA;AACA;AACAR,UAAAA,MAAM,GAAGzK,SAAT;AACH,SAjBY,CAkBb;;;AACA,eAAO;AAAE0K,UAAAA,KAAF;AAASD,UAAAA;AAAT,SAAP;AACH;AACJ,KAxCsC,CAyCvC;;;AACA,WAAO,EAAP;AACH;AACD;;;;;;;;;;;;AAUAS,EAAAA,iBAAiB,CAACnF,OAAD,EAAU;AACvB,SAAK8E,eAAL,GAAuB,wCAAiB9E,OAAjB,CAAvB;AACH;AACD;;;;;;;;;AAOAoF,EAAAA,eAAe,CAACpF,OAAD,EAAU;AACrB,SAAKiF,aAAL,GAAqB,wCAAiBjF,OAAjB,CAArB;AACH;AACD;;;;;;;AAKAqF,EAAAA,aAAa,CAACV,KAAD,EAAQ;AACjB,QAAI,kBAAyB,YAA7B,EAA2C;AACvC7K,qBAAO9F,MAAP,CAAc2Q,KAAd,EAAqB,QAArB,EAA+B;AAC3BtT,QAAAA,UAAU,EAAE,iBADe;AAE3BC,QAAAA,SAAS,EAAE,QAFgB;AAG3BC,QAAAA,QAAQ,EAAE,eAHiB;AAI3BR,QAAAA,SAAS,EAAE;AAJgB,OAA/B;;AAMA+I,qBAAOjG,SAAP,CAAiB8Q,KAAjB,EAAwB,OAAxB,EAAiC;AAC7BtT,QAAAA,UAAU,EAAE,iBADiB;AAE7BC,QAAAA,SAAS,EAAE,QAFkB;AAG7BC,QAAAA,QAAQ,EAAE,eAHmB;AAI7BR,QAAAA,SAAS,EAAE;AAJkB,OAAjC;;AAMA+I,qBAAO9F,MAAP,CAAc2Q,KAAK,CAAC3E,OAApB,EAA6B,QAA7B,EAAuC;AACnC3O,QAAAA,UAAU,EAAE,iBADuB;AAEnCC,QAAAA,SAAS,EAAE,QAFwB;AAGnCC,QAAAA,QAAQ,EAAE,eAHyB;AAInCR,QAAAA,SAAS,EAAE;AAJwB,OAAvC;;AAMA+I,qBAAOjG,SAAP,CAAiB8Q,KAAK,CAAC3E,OAAvB,EAAgC,QAAhC,EAA0C;AACtC3O,QAAAA,UAAU,EAAE,iBAD0B;AAEtCC,QAAAA,SAAS,EAAE,QAF2B;AAGtCC,QAAAA,QAAQ,EAAE,eAH4B;AAItCR,QAAAA,SAAS,EAAE;AAJ2B,OAA1C;;AAMA+I,qBAAO9F,MAAP,CAAc2Q,KAAK,CAACvS,MAApB,EAA4B,QAA5B,EAAsC;AAClCf,QAAAA,UAAU,EAAE,iBADsB;AAElCC,QAAAA,SAAS,EAAE,QAFuB;AAGlCC,QAAAA,QAAQ,EAAE,eAHwB;AAIlCR,QAAAA,SAAS,EAAE;AAJuB,OAAtC;AAMH;;AACD,QAAI,CAAC,KAAK+S,OAAL,CAAa/F,GAAb,CAAiB4G,KAAK,CAACvS,MAAvB,CAAL,EAAqC;AACjC,WAAK0R,OAAL,CAAatH,GAAb,CAAiBmI,KAAK,CAACvS,MAAvB,EAA+B,EAA/B;AACH,KAnCgB,CAoCjB;AACA;;;AACA,SAAK0R,OAAL,CAAapP,GAAb,CAAiBiQ,KAAK,CAACvS,MAAvB,EAA+ByC,IAA/B,CAAoC8P,KAApC;AACH;AACD;;;;;;;AAKAW,EAAAA,eAAe,CAACX,KAAD,EAAQ;AACnB,QAAI,CAAC,KAAKb,OAAL,CAAa/F,GAAb,CAAiB4G,KAAK,CAACvS,MAAvB,CAAL,EAAqC;AACjC,YAAM,IAAIkB,0BAAJ,CAAiB,4CAAjB,EAA+D;AACjElB,QAAAA,MAAM,EAAEuS,KAAK,CAACvS;AADmD,OAA/D,CAAN;AAGH;;AACD,UAAMmT,UAAU,GAAG,KAAKzB,OAAL,CAAapP,GAAb,CAAiBiQ,KAAK,CAACvS,MAAvB,EAA+BoT,OAA/B,CAAuCb,KAAvC,CAAnB;;AACA,QAAIY,UAAU,GAAG,CAAC,CAAlB,EAAqB;AACjB,WAAKzB,OAAL,CAAapP,GAAb,CAAiBiQ,KAAK,CAACvS,MAAvB,EAA+BqT,MAA/B,CAAsCF,UAAtC,EAAkD,CAAlD;AACH,KAFD,MAGK;AACD,YAAM,IAAIjS,0BAAJ,CAAiB,uCAAjB,CAAN;AACH;AACJ;;AAhUQ;;;;;;;;;;;ACvBb;;AACA;;AARA;;;;;;;AASA,IAAIoS,aAAJ;AACA;;;;;;;;AAOO,MAAMC,wBAAwB,GAAG,MAAM;AAC1C,MAAI,CAACD,aAAL,EAAoB;AAChBA,IAAAA,aAAa,GAAG,IAAI7B,cAAJ,EAAhB,CADgB,CAEhB;;AACA6B,IAAAA,aAAa,CAACpE,gBAAd;AACAoE,IAAAA,aAAa,CAACzB,gBAAd;AACH;;AACD,SAAOyB,aAAP;AACH,CARM;;;;;;;;;;;ACVP;;AACA;;AACA;;AACA;;AACA;;AACA;;AAZA;;;;;;;;AAaA;;;;;;;;;;;;;;;;;;;AAmBA,SAASL,aAAT,CAAuBO,OAAvB,EAAgC5F,OAAhC,EAAyC5N,MAAzC,EAAiD;AAC7C,MAAIuS,KAAJ;;AACA,MAAI,OAAOiB,OAAP,KAAmB,QAAvB,EAAiC;AAC7B,UAAMC,UAAU,GAAG,IAAIpP,GAAJ,CAAQmP,OAAR,EAAiBjP,QAAQ,CAACC,IAA1B,CAAnB;;AACA,QAAI,kBAAyB,YAA7B,EAA2C;AACvC,UAAI,EAAEgP,OAAO,CAACnB,UAAR,CAAmB,GAAnB,KAA2BmB,OAAO,CAACnB,UAAR,CAAmB,MAAnB,CAA7B,CAAJ,EAA8D;AAC1D,cAAM,IAAInR,0BAAJ,CAAiB,gBAAjB,EAAmC;AACrCjC,UAAAA,UAAU,EAAE,iBADyB;AAErCE,UAAAA,QAAQ,EAAE,eAF2B;AAGrCR,UAAAA,SAAS,EAAE;AAH0B,SAAnC,CAAN;AAKH,OAPsC,CAQvC;AACA;;;AACA,YAAM+U,YAAY,GAAGF,OAAO,CAACnB,UAAR,CAAmB,MAAnB,IACjBoB,UAAU,CAAC/O,QADM,GACK8O,OAD1B,CAVuC,CAYvC;;AACA,YAAMG,SAAS,GAAG,QAAlB;;AACA,UAAID,YAAY,CAAClM,KAAb,CAAmB,IAAIsJ,MAAJ,CAAY,GAAE6C,SAAU,EAAxB,CAAnB,CAAJ,EAAoD;AAChDhP,uBAAOI,KAAP,CAAc,8DAAD,GACR,cAAa4O,SAAU,2CADf,GAER,8DAFL;AAGH;AACJ;;AACD,UAAMC,aAAa,GAAG,CAAC;AAAEtT,MAAAA;AAAF,KAAD,KAAa;AAC/B,UAAI,kBAAyB,YAA7B,EAA2C;AACvC,YAAKA,GAAG,CAACoE,QAAJ,KAAiB+O,UAAU,CAAC/O,QAA7B,IACCpE,GAAG,CAACmE,MAAJ,KAAegP,UAAU,CAAChP,MAD/B,EACwC;AACpCE,yBAAOI,KAAP,CAAc,GAAEyO,OAAQ,+CAAX,GACR,GAAElT,GAAI,sDADE,GAER,+BAFL;AAGH;AACJ;;AACD,aAAOA,GAAG,CAACkE,IAAJ,KAAaiP,UAAU,CAACjP,IAA/B;AACH,KAVD,CAtB6B,CAiC7B;;;AACA+N,IAAAA,KAAK,GAAG,IAAI7B,YAAJ,CAAUkD,aAAV,EAAyBhG,OAAzB,EAAkC5N,MAAlC,CAAR;AACH,GAnCD,MAoCK,IAAIwT,OAAO,YAAY1C,MAAvB,EAA+B;AAChC;AACAyB,IAAAA,KAAK,GAAG,IAAInB,wBAAJ,CAAgBoC,OAAhB,EAAyB5F,OAAzB,EAAkC5N,MAAlC,CAAR;AACH,GAHI,MAIA,IAAI,OAAOwT,OAAP,KAAmB,UAAvB,EAAmC;AACpC;AACAjB,IAAAA,KAAK,GAAG,IAAI7B,YAAJ,CAAU8C,OAAV,EAAmB5F,OAAnB,EAA4B5N,MAA5B,CAAR;AACH,GAHI,MAIA,IAAIwT,OAAO,YAAY9C,YAAvB,EAA8B;AAC/B6B,IAAAA,KAAK,GAAGiB,OAAR;AACH,GAFI,MAGA;AACD,UAAM,IAAItS,0BAAJ,CAAiB,wBAAjB,EAA2C;AAC7CjC,MAAAA,UAAU,EAAE,iBADiC;AAE7CE,MAAAA,QAAQ,EAAE,eAFmC;AAG7CR,MAAAA,SAAS,EAAE;AAHkC,KAA3C,CAAN;AAKH;;AACD,QAAM2U,aAAa,GAAG,yDAAtB;AACAA,EAAAA,aAAa,CAACL,aAAd,CAA4BV,KAA5B;AACA,SAAOA,KAAP;AACH;;AACD;;;;;;;;;ACrFA;;AACA;;AARA;;;;;;;;AASA;;;;;;;;;AASA,SAASS,eAAT,CAAyBpF,OAAzB,EAAkC;AAC9B,QAAM0F,aAAa,GAAG,yDAAtB;AACAA,EAAAA,aAAa,CAACN,eAAd,CAA8BpF,OAA9B;AACH;;AACD;;;;;;;;;ACfA;;AACA;;AARA;;;;;;;;AASA;;;;;;;;;;;;AAYA,SAASmF,iBAAT,CAA2BnF,OAA3B,EAAoC;AAChC,QAAM0F,aAAa,GAAG,yDAAtB;AACAA,EAAAA,aAAa,CAACP,iBAAd,CAAgCnF,OAAhC;AACH;;AACD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AClBA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;;;;;ACdA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACCA;;AACA;;AACA;;AATA;;;;;;;AAUO,MAAMlP,QAAQ,GAAG;AACpBmV,EAAAA,aAAa,EAAE,CAACC,YAAD,EAAezN,OAAf,KAA4B,SAAQyN,YAAa,mBAAkB,oCAAezN,OAAO,CAAC/F,GAAvB,CAA4B,GAD1F;AAEpByT,EAAAA,kBAAkB,EAAGzN,QAAD,IAAc;AAC9B,QAAIA,QAAJ,EAAc;AACV3B,qBAAOO,cAAP,CAAuB,+BAAvB;;AACAP,qBAAOK,GAAP,CAAWsB,QAAQ,IAAI,wBAAvB;;AACA3B,qBAAOQ,QAAP;AACH;AACJ;AARmB,CAAjB;;;;;;;;;;ACHP;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AAfA;;;;;;;;AAgBA;;;;;;;;;;;;;AAaA,MAAM6O,UAAN,CAAiB;AACb;;;;;;;;;;;;AAYA7S,EAAAA,WAAW,CAAC2N,OAAO,GAAG,EAAX,EAAe;AACtB,SAAK5D,UAAL,GAAkBvH,uBAAWM,cAAX,CAA0B6K,OAAO,CAACrO,SAAlC,CAAlB;AACA,SAAKwT,QAAL,GAAgBnF,OAAO,CAAC1M,OAAR,IAAmB,EAAnC;AACA,SAAK8R,aAAL,GAAqBpF,OAAO,CAAC5G,YAA7B;AACA,SAAKiM,aAAL,GAAqBrF,OAAO,CAACtI,YAA7B;AACH;AACD;;;;;;;;;;;;AAUA,QAAMiK,MAAN,CAAa;AAAElK,IAAAA,KAAF;AAASF,IAAAA;AAAT,GAAb,EAAiC;AAC7B,UAAM+N,IAAI,GAAG,EAAb;;AACA,QAAI,OAAO/N,OAAP,KAAmB,QAAvB,EAAiC;AAC7BA,MAAAA,OAAO,GAAG,IAAI0B,OAAJ,CAAY1B,OAAZ,CAAV;AACH;;AACD,QAAI,kBAAyB,YAA7B,EAA2C;AACvCqB,qBAAO7F,UAAP,CAAkBwE,OAAlB,EAA2B0B,OAA3B,EAAoC;AAChC9I,QAAAA,UAAU,EAAE,oBADoB;AAEhCC,QAAAA,SAAS,EAAE,YAFqB;AAGhCC,QAAAA,QAAQ,EAAE,aAHsB;AAIhCR,QAAAA,SAAS,EAAE;AAJqB,OAApC;AAMH;;AACD,QAAI2H,QAAQ,GAAG,MAAM0B,2BAAaR,KAAb,CAAmB;AACpC/G,MAAAA,SAAS,EAAE,KAAKyK,UADoB;AAEpC7E,MAAAA,OAFoC;AAGpCE,MAAAA,KAHoC;AAIpCC,MAAAA,YAAY,EAAE,KAAK2N,aAJiB;AAKpC/R,MAAAA,OAAO,EAAE,KAAK6R;AALsB,KAAnB,CAArB;AAOA,QAAI1T,KAAJ;;AACA,QAAI,CAAC+F,QAAL,EAAe;AACX,UAAI,kBAAyB,YAA7B,EAA2C;AACvC8N,QAAAA,IAAI,CAAC3R,IAAL,CAAW,6BAA4B,KAAKyI,UAAW,WAA7C,GACL,sCADL;AAEH;;AACD,UAAI;AACA5E,QAAAA,QAAQ,GAAG,MAAM,KAAK+N,eAAL,CAAqBhO,OAArB,EAA8BE,KAA9B,CAAjB;AACH,OAFD,CAGA,OAAOmC,GAAP,EAAY;AACRnI,QAAAA,KAAK,GAAGmI,GAAR;AACH;;AACD,UAAI,kBAAyB,YAA7B,EAA2C;AACvC,YAAIpC,QAAJ,EAAc;AACV8N,UAAAA,IAAI,CAAC3R,IAAL,CAAW,4BAAX;AACH,SAFD,MAGK;AACD2R,UAAAA,IAAI,CAAC3R,IAAL,CAAW,4CAAX;AACH;AACJ;AACJ,KAnBD,MAoBK;AACD,UAAI,kBAAyB,YAA7B,EAA2C;AACvC2R,QAAAA,IAAI,CAAC3R,IAAL,CAAW,mCAAkC,KAAKyI,UAAW,UAA7D;AACH;AACJ;;AACD,QAAI,kBAAyB,YAA7B,EAA2C;AACvCvG,qBAAOO,cAAP,CAAsBxG,mBAASmV,aAAT,CAAuB,YAAvB,EAAqCxN,OAArC,CAAtB;;AACA,WAAK,IAAIrB,GAAT,IAAgBoP,IAAhB,EAAsB;AAClBzP,uBAAOK,GAAP,CAAWA,GAAX;AACH;;AACDtG,yBAASqV,kBAAT,CAA4BzN,QAA5B;;AACA3B,qBAAOQ,QAAP;AACH;;AACD,QAAI,CAACmB,QAAL,EAAe;AACX,YAAM,IAAIpF,0BAAJ,CAAiB,aAAjB,EAAgC;AAAEZ,QAAAA,GAAG,EAAE+F,OAAO,CAAC/F,GAAf;AAAoBC,QAAAA;AAApB,OAAhC,CAAN;AACH;;AACD,WAAO+F,QAAP;AACH;AACD;;;;;;;;;;;AASA,QAAM+N,eAAN,CAAsBhO,OAAtB,EAA+BE,KAA/B,EAAsC;AAClC,UAAMD,QAAQ,GAAG,MAAMwC,2BAAaD,KAAb,CAAmB;AACtCxC,MAAAA,OADsC;AAEtCE,MAAAA,KAFsC;AAGtC2B,MAAAA,YAAY,EAAE,KAAKgM,aAHmB;AAItC9R,MAAAA,OAAO,EAAE,KAAK6R;AAJwB,KAAnB,CAAvB,CADkC,CAOlC;;AACA,UAAMK,aAAa,GAAGhO,QAAQ,CAACkC,KAAT,EAAtB;;AACA,UAAM+L,eAAe,GAAGvM,2BAAaZ,GAAb,CAAiB;AACrC3G,MAAAA,SAAS,EAAE,KAAKyK,UADqB;AAErC7E,MAAAA,OAFqC;AAGrCC,MAAAA,QAAQ,EAAEgO,aAH2B;AAIrC/N,MAAAA,KAJqC;AAKrCnE,MAAAA,OAAO,EAAE,KAAK6R;AALuB,KAAjB,CAAxB;;AAOA,QAAI1N,KAAJ,EAAW;AACP,UAAI;AACAA,QAAAA,KAAK,CAACyJ,SAAN,CAAgBuE,eAAhB;AACH,OAFD,CAGA,OAAOhU,KAAP,EAAc;AACV,YAAI,kBAAyB,YAA7B,EAA2C;AACvCoE,yBAAOM,IAAP,CAAa,mDAAD,GACP,uBAAsB,oCAAeoB,OAAO,CAAC/F,GAAvB,CAA4B,IADvD;AAEH;AACJ;AACJ;;AACD,WAAOgG,QAAP;AACH;;AA7HY;;;;;;;;;;;ACtBjB;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AAbA;;;;;;;;AAcA;;;;;;;;;;;;AAYA,MAAMkO,SAAN,CAAgB;AACZ;;;;;;;;;AASArT,EAAAA,WAAW,CAAC2N,OAAO,GAAG,EAAX,EAAe;AACtB,SAAK5D,UAAL,GAAkBvH,uBAAWM,cAAX,CAA0B6K,OAAO,CAACrO,SAAlC,CAAlB;AACA,SAAKwT,QAAL,GAAgBnF,OAAO,CAAC1M,OAAR,IAAmB,EAAnC;AACA,SAAK+R,aAAL,GAAqBrF,OAAO,CAACtI,YAA7B;AACH;AACD;;;;;;;;;;;;AAUA,QAAMiK,MAAN,CAAa;AAAElK,IAAAA,KAAF;AAASF,IAAAA;AAAT,GAAb,EAAiC;AAC7B,QAAI,OAAOA,OAAP,KAAmB,QAAvB,EAAiC;AAC7BA,MAAAA,OAAO,GAAG,IAAI0B,OAAJ,CAAY1B,OAAZ,CAAV;AACH;;AACD,QAAI,kBAAyB,YAA7B,EAA2C;AACvCqB,qBAAO7F,UAAP,CAAkBwE,OAAlB,EAA2B0B,OAA3B,EAAoC;AAChC9I,QAAAA,UAAU,EAAE,oBADoB;AAEhCC,QAAAA,SAAS,EAAE,WAFqB;AAGhCC,QAAAA,QAAQ,EAAE,aAHsB;AAIhCR,QAAAA,SAAS,EAAE;AAJqB,OAApC;AAMH;;AACD,UAAM2H,QAAQ,GAAG,MAAM0B,2BAAaR,KAAb,CAAmB;AACtC/G,MAAAA,SAAS,EAAE,KAAKyK,UADsB;AAEtC7E,MAAAA,OAFsC;AAGtCE,MAAAA,KAHsC;AAItCC,MAAAA,YAAY,EAAE,KAAK2N,aAJmB;AAKtC/R,MAAAA,OAAO,EAAE,KAAK6R;AALwB,KAAnB,CAAvB;;AAOA,QAAI,kBAAyB,YAA7B,EAA2C;AACvCtP,qBAAOO,cAAP,CAAsBxG,mBAASmV,aAAT,CAAuB,WAAvB,EAAoCxN,OAApC,CAAtB;;AACA,UAAIC,QAAJ,EAAc;AACV3B,uBAAOK,GAAP,CAAY,mCAAkC,KAAKkG,UAAW,GAAnD,GACN,SADL;;AAEAxM,2BAASqV,kBAAT,CAA4BzN,QAA5B;AACH,OAJD,MAKK;AACD3B,uBAAOK,GAAP,CAAY,6BAA4B,KAAKkG,UAAW,UAAxD;AACH;;AACDvG,qBAAOQ,QAAP;AACH;;AACD,QAAI,CAACmB,QAAL,EAAe;AACX,YAAM,IAAIpF,0BAAJ,CAAiB,aAAjB,EAAgC;AAAEZ,QAAAA,GAAG,EAAE+F,OAAO,CAAC/F;AAAf,OAAhC,CAAN;AACH;;AACD,WAAOgG,QAAP;AACH;;AA5DW;;;;;;;;;;;ACnBhB;;AAPA;;;;;;;AAQO,MAAMmO,sBAAsB,GAAG;AAClC;;;;;;;;;;AAUAvH,EAAAA,eAAe,EAAE,OAAO;AAAE5G,IAAAA;AAAF,GAAP,KAAwB;AACrC,QAAIA,QAAQ,CAAC9F,MAAT,KAAoB,GAApB,IAA2B8F,QAAQ,CAAC9F,MAAT,KAAoB,CAAnD,EAAsD;AAClD,aAAO8F,QAAP;AACH;;AACD,WAAO,IAAP;AACH;AAhBiC,CAA/B;;;;;;;;;;ACDP;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AAhBA;;;;;;;;AAiBA;;;;;;;;;;;;;;;AAeA,MAAMoO,YAAN,CAAmB;AACf;;;;;;;;;;;;;;;;;;AAkBAvT,EAAAA,WAAW,CAAC2N,OAAO,GAAG,EAAX,EAAe;AACtB,SAAK5D,UAAL,GAAkBvH,uBAAWM,cAAX,CAA0B6K,OAAO,CAACrO,SAAlC,CAAlB;;AACA,QAAIqO,OAAO,CAAC1M,OAAZ,EAAqB;AACjB,UAAIuS,sBAAsB,GAAG7F,OAAO,CAAC1M,OAAR,CAAgB6L,IAAhB,CAAsB9H,MAAD,IAAY,CAAC,CAACA,MAAM,CAAC+G,eAA1C,CAA7B;AACA,WAAK+G,QAAL,GAAgBU,sBAAsB,GAClC7F,OAAO,CAAC1M,OAD0B,GAChB,CAACqS,8CAAD,EAAyB,GAAG3F,OAAO,CAAC1M,OAApC,CADtB;AAEH,KAJD,MAKK;AACD;AACA,WAAK6R,QAAL,GAAgB,CAACQ,8CAAD,CAAhB;AACH;;AACD,SAAKG,sBAAL,GAA8B9F,OAAO,CAAC+F,qBAAR,IAAiC,CAA/D;;AACA,QAAI,kBAAyB,YAA7B,EAA2C;AACvC,UAAI,KAAKD,sBAAT,EAAiC;AAC7BlN,uBAAO9F,MAAP,CAAc,KAAKgT,sBAAnB,EAA2C,QAA3C,EAAqD;AACjD3V,UAAAA,UAAU,EAAE,oBADqC;AAEjDC,UAAAA,SAAS,EAAE,cAFsC;AAGjDC,UAAAA,QAAQ,EAAE,aAHuC;AAIjDR,UAAAA,SAAS,EAAE;AAJsC,SAArD;AAMH;AACJ;;AACD,SAAKuV,aAAL,GAAqBpF,OAAO,CAAC5G,YAA7B;AACA,SAAKiM,aAAL,GAAqBrF,OAAO,CAACtI,YAA7B;AACH;AACD;;;;;;;;;;;;AAUA,QAAMiK,MAAN,CAAa;AAAElK,IAAAA,KAAF;AAASF,IAAAA;AAAT,GAAb,EAAiC;AAC7B,UAAM+N,IAAI,GAAG,EAAb;;AACA,QAAI,OAAO/N,OAAP,KAAmB,QAAvB,EAAiC;AAC7BA,MAAAA,OAAO,GAAG,IAAI0B,OAAJ,CAAY1B,OAAZ,CAAV;AACH;;AACD,QAAI,kBAAyB,YAA7B,EAA2C;AACvCqB,qBAAO7F,UAAP,CAAkBwE,OAAlB,EAA2B0B,OAA3B,EAAoC;AAChC9I,QAAAA,UAAU,EAAE,oBADoB;AAEhCC,QAAAA,SAAS,EAAE,cAFqB;AAGhCC,QAAAA,QAAQ,EAAE,QAHsB;AAIhCR,QAAAA,SAAS,EAAE;AAJqB,OAApC;AAMH;;AACD,UAAMmW,QAAQ,GAAG,EAAjB;AACA,QAAIC,SAAJ;;AACA,QAAI,KAAKH,sBAAT,EAAiC;AAC7B,YAAM;AAAEI,QAAAA,EAAF;AAAMC,QAAAA;AAAN,UAAkB,KAAKC,kBAAL,CAAwB;AAAE7O,QAAAA,OAAF;AAAWE,QAAAA,KAAX;AAAkB6N,QAAAA;AAAlB,OAAxB,CAAxB;;AACAW,MAAAA,SAAS,GAAGC,EAAZ;AACAF,MAAAA,QAAQ,CAACrS,IAAT,CAAcwS,OAAd;AACH;;AACD,UAAME,cAAc,GAAG,KAAKC,kBAAL,CAAwB;AAAEL,MAAAA,SAAF;AAAa1O,MAAAA,OAAb;AAAsBE,MAAAA,KAAtB;AAA6B6N,MAAAA;AAA7B,KAAxB,CAAvB;;AACAU,IAAAA,QAAQ,CAACrS,IAAT,CAAc0S,cAAd,EArB6B,CAsB7B;;AACA,QAAI7O,QAAQ,GAAG,MAAMgG,OAAO,CAAC+I,IAAR,CAAaP,QAAb,CAArB,CAvB6B,CAwB7B;AACA;AACA;AACA;AACA;;AACA,QAAI,CAACxO,QAAL,EAAe;AACXA,MAAAA,QAAQ,GAAG,MAAM6O,cAAjB;AACH;;AACD,QAAI,kBAAyB,YAA7B,EAA2C;AACvCxQ,qBAAOO,cAAP,CAAsBxG,mBAASmV,aAAT,CAAuB,cAAvB,EAAuCxN,OAAvC,CAAtB;;AACA,WAAK,IAAIrB,GAAT,IAAgBoP,IAAhB,EAAsB;AAClBzP,uBAAOK,GAAP,CAAWA,GAAX;AACH;;AACDtG,yBAASqV,kBAAT,CAA4BzN,QAA5B;;AACA3B,qBAAOQ,QAAP;AACH;;AACD,QAAI,CAACmB,QAAL,EAAe;AACX,YAAM,IAAIpF,0BAAJ,CAAiB,aAAjB,EAAgC;AAAEZ,QAAAA,GAAG,EAAE+F,OAAO,CAAC/F;AAAf,OAAhC,CAAN;AACH;;AACD,WAAOgG,QAAP;AACH;AACD;;;;;;;;;;;AASA4O,EAAAA,kBAAkB,CAAC;AAAE7O,IAAAA,OAAF;AAAW+N,IAAAA,IAAX;AAAiB7N,IAAAA;AAAjB,GAAD,EAA2B;AACzC,QAAIwO,SAAJ;AACA,UAAMO,cAAc,GAAG,IAAIhJ,OAAJ,CAAaiJ,OAAD,IAAa;AAC5C,YAAMC,gBAAgB,GAAG,YAAY;AACjC,YAAI,kBAAyB,YAA7B,EAA2C;AACvCpB,UAAAA,IAAI,CAAC3R,IAAL,CAAW,qCAAD,GACL,GAAE,KAAKmS,sBAAuB,WADnC;AAEH;;AACDW,QAAAA,OAAO,EAAC,MAAM,KAAKE,iBAAL,CAAuB;AAAEpP,UAAAA,OAAF;AAAWE,UAAAA;AAAX,SAAvB,CAAP,EAAP;AACH,OAND;;AAOAwO,MAAAA,SAAS,GAAGW,UAAU,CAACF,gBAAD,EAAmB,KAAKZ,sBAAL,GAA8B,IAAjD,CAAtB;AACH,KATsB,CAAvB;AAUA,WAAO;AACHK,MAAAA,OAAO,EAAEK,cADN;AAEHN,MAAAA,EAAE,EAAED;AAFD,KAAP;AAIH;AACD;;;;;;;;;;;;AAUA,QAAMK,kBAAN,CAAyB;AAAEL,IAAAA,SAAF;AAAa1O,IAAAA,OAAb;AAAsB+N,IAAAA,IAAtB;AAA4B7N,IAAAA;AAA5B,GAAzB,EAA8D;AAC1D,QAAIhG,KAAJ;AACA,QAAI+F,QAAJ;;AACA,QAAI;AACAA,MAAAA,QAAQ,GAAG,MAAMwC,2BAAaD,KAAb,CAAmB;AAChCxC,QAAAA,OADgC;AAEhCE,QAAAA,KAFgC;AAGhC2B,QAAAA,YAAY,EAAE,KAAKgM,aAHa;AAIhC9R,QAAAA,OAAO,EAAE,KAAK6R;AAJkB,OAAnB,CAAjB;AAMH,KAPD,CAQA,OAAOvL,GAAP,EAAY;AACRnI,MAAAA,KAAK,GAAGmI,GAAR;AACH;;AACD,QAAIqM,SAAJ,EAAe;AACXY,MAAAA,YAAY,CAACZ,SAAD,CAAZ;AACH;;AACD,QAAI,kBAAyB,YAA7B,EAA2C;AACvC,UAAIzO,QAAJ,EAAc;AACV8N,QAAAA,IAAI,CAAC3R,IAAL,CAAW,4BAAX;AACH,OAFD,MAGK;AACD2R,QAAAA,IAAI,CAAC3R,IAAL,CAAW,0DAAD,GACL,yBADL;AAEH;AACJ;;AACD,QAAIlC,KAAK,IAAI,CAAC+F,QAAd,EAAwB;AACpBA,MAAAA,QAAQ,GAAG,MAAM,KAAKmP,iBAAL,CAAuB;AAAEpP,QAAAA,OAAF;AAAWE,QAAAA;AAAX,OAAvB,CAAjB;;AACA,UAAI,kBAAyB,YAA7B,EAA2C;AACvC,YAAID,QAAJ,EAAc;AACV8N,UAAAA,IAAI,CAAC3R,IAAL,CAAW,mCAAkC,KAAKyI,UAAW,GAAnD,GACL,SADL;AAEH,SAHD,MAIK;AACDkJ,UAAAA,IAAI,CAAC3R,IAAL,CAAW,6BAA4B,KAAKyI,UAAW,UAAvD;AACH;AACJ;AACJ,KAXD,MAYK;AACD;AACA,YAAMoJ,aAAa,GAAGhO,QAAQ,CAACkC,KAAT,EAAtB;;AACA,YAAMoN,QAAQ,GAAG5N,2BAAaZ,GAAb,CAAiB;AAC9B3G,QAAAA,SAAS,EAAE,KAAKyK,UADc;AAE9B7E,QAAAA,OAF8B;AAG9BC,QAAAA,QAAQ,EAAEgO,aAHoB;AAI9B/N,QAAAA,KAJ8B;AAK9BnE,QAAAA,OAAO,EAAE,KAAK6R;AALgB,OAAjB,CAAjB;;AAOA,UAAI1N,KAAJ,EAAW;AACP,YAAI;AACA;AACA;AACAA,UAAAA,KAAK,CAACyJ,SAAN,CAAgB4F,QAAhB;AACH,SAJD,CAKA,OAAOlN,GAAP,EAAY;AACR,cAAI,kBAAyB,YAA7B,EAA2C;AACvC/D,2BAAOM,IAAP,CAAa,mDAAD,GACP,uBAAsB,oCAAeoB,OAAO,CAAC/F,GAAvB,CAA4B,IADvD;AAEH;AACJ;AACJ;AACJ;;AACD,WAAOgG,QAAP;AACH;AACD;;;;;;;;;;;;AAUAmP,EAAAA,iBAAiB,CAAC;AAAElP,IAAAA,KAAF;AAASF,IAAAA;AAAT,GAAD,EAAqB;AAClC,WAAO2B,2BAAaR,KAAb,CAAmB;AACtB/G,MAAAA,SAAS,EAAE,KAAKyK,UADM;AAEtB7E,MAAAA,OAFsB;AAGtBE,MAAAA,KAHsB;AAItBC,MAAAA,YAAY,EAAE,KAAK2N,aAJG;AAKtB/R,MAAAA,OAAO,EAAE,KAAK6R;AALQ,KAAnB,CAAP;AAOH;;AAzNc;;;;;;;;;;;ACzBnB;;AACA;;AACA;;AACA;;AACA;;AACA;;AAZA;;;;;;;;AAaA;;;;;;;;;;;;AAYA,MAAM4B,WAAN,CAAkB;AACd;;;;;;;;;;;AAWA1U,EAAAA,WAAW,CAAC2N,OAAO,GAAG,EAAX,EAAe;AACtB,SAAKmF,QAAL,GAAgBnF,OAAO,CAAC1M,OAAR,IAAmB,EAAnC;AACA,SAAK8R,aAAL,GAAqBpF,OAAO,CAAC5G,YAA7B;AACH;AACD;;;;;;;;;;;;AAUA,QAAMuI,MAAN,CAAa;AAAElK,IAAAA,KAAF;AAASF,IAAAA;AAAT,GAAb,EAAiC;AAC7B,QAAI,OAAOA,OAAP,KAAmB,QAAvB,EAAiC;AAC7BA,MAAAA,OAAO,GAAG,IAAI0B,OAAJ,CAAY1B,OAAZ,CAAV;AACH;;AACD,QAAI,kBAAyB,YAA7B,EAA2C;AACvCqB,qBAAO7F,UAAP,CAAkBwE,OAAlB,EAA2B0B,OAA3B,EAAoC;AAChC9I,QAAAA,UAAU,EAAE,oBADoB;AAEhCC,QAAAA,SAAS,EAAE,aAFqB;AAGhCC,QAAAA,QAAQ,EAAE,QAHsB;AAIhCR,QAAAA,SAAS,EAAE;AAJqB,OAApC;AAMH;;AACD,QAAI4B,KAAJ;AACA,QAAI+F,QAAJ;;AACA,QAAI;AACAA,MAAAA,QAAQ,GAAG,MAAMwC,2BAAaD,KAAb,CAAmB;AAChCxC,QAAAA,OADgC;AAEhCE,QAAAA,KAFgC;AAGhC2B,QAAAA,YAAY,EAAE,KAAKgM,aAHa;AAIhC9R,QAAAA,OAAO,EAAE,KAAK6R;AAJkB,OAAnB,CAAjB;AAMH,KAPD,CAQA,OAAOvL,GAAP,EAAY;AACRnI,MAAAA,KAAK,GAAGmI,GAAR;AACH;;AACD,QAAI,kBAAyB,YAA7B,EAA2C;AACvC/D,qBAAOO,cAAP,CAAsBxG,mBAASmV,aAAT,CAAuB,aAAvB,EAAsCxN,OAAtC,CAAtB;;AACA,UAAIC,QAAJ,EAAc;AACV3B,uBAAOK,GAAP,CAAY,4BAAZ;AACH,OAFD,MAGK;AACDL,uBAAOK,GAAP,CAAY,4CAAZ;AACH;;AACDtG,yBAASqV,kBAAT,CAA4BzN,QAA5B;;AACA3B,qBAAOQ,QAAP;AACH;;AACD,QAAI,CAACmB,QAAL,EAAe;AACX,YAAM,IAAIpF,0BAAJ,CAAiB,aAAjB,EAAgC;AAAEZ,QAAAA,GAAG,EAAE+F,OAAO,CAAC/F,GAAf;AAAoBC,QAAAA;AAApB,OAAhC,CAAN;AACH;;AACD,WAAO+F,QAAP;AACH;;AAlEa;;;;;;;;;;;AClBlB;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AAhBA;;;;;;;;AAiBA;;;;;;;;;;;;;;;;;;;;AAoBA,MAAMwP,oBAAN,CAA2B;AACvB;;;;;;;;;;;;AAYA3U,EAAAA,WAAW,CAAC2N,OAAO,GAAG,EAAX,EAAe;AACtB,SAAK5D,UAAL,GAAkBvH,uBAAWM,cAAX,CAA0B6K,OAAO,CAACrO,SAAlC,CAAlB;AACA,SAAKwT,QAAL,GAAgBnF,OAAO,CAAC1M,OAAR,IAAmB,EAAnC;;AACA,QAAI0M,OAAO,CAAC1M,OAAZ,EAAqB;AACjB,UAAIuS,sBAAsB,GAAG7F,OAAO,CAAC1M,OAAR,CAAgB6L,IAAhB,CAAsB9H,MAAD,IAAY,CAAC,CAACA,MAAM,CAAC+G,eAA1C,CAA7B;AACA,WAAK+G,QAAL,GAAgBU,sBAAsB,GAClC7F,OAAO,CAAC1M,OAD0B,GAChB,CAACqS,8CAAD,EAAyB,GAAG3F,OAAO,CAAC1M,OAApC,CADtB;AAEH,KAJD,MAKK;AACD;AACA,WAAK6R,QAAL,GAAgB,CAACQ,8CAAD,CAAhB;AACH;;AACD,SAAKP,aAAL,GAAqBpF,OAAO,CAAC5G,YAA7B;AACA,SAAKiM,aAAL,GAAqBrF,OAAO,CAACtI,YAA7B;AACH;AACD;;;;;;;;;;;;AAUA,QAAMiK,MAAN,CAAa;AAAElK,IAAAA,KAAF;AAASF,IAAAA;AAAT,GAAb,EAAiC;AAC7B,UAAM+N,IAAI,GAAG,EAAb;;AACA,QAAI,OAAO/N,OAAP,KAAmB,QAAvB,EAAiC;AAC7BA,MAAAA,OAAO,GAAG,IAAI0B,OAAJ,CAAY1B,OAAZ,CAAV;AACH;;AACD,QAAI,kBAAyB,YAA7B,EAA2C;AACvCqB,qBAAO7F,UAAP,CAAkBwE,OAAlB,EAA2B0B,OAA3B,EAAoC;AAChC9I,QAAAA,UAAU,EAAE,oBADoB;AAEhCC,QAAAA,SAAS,EAAE,sBAFqB;AAGhCC,QAAAA,QAAQ,EAAE,QAHsB;AAIhCR,QAAAA,SAAS,EAAE;AAJqB,OAApC;AAMH;;AACD,UAAMoX,oBAAoB,GAAG,KAAK1B,eAAL,CAAqB;AAAEhO,MAAAA,OAAF;AAAWE,MAAAA;AAAX,KAArB,CAA7B;;AACA,QAAID,QAAQ,GAAG,MAAM0B,2BAAaR,KAAb,CAAmB;AACpC/G,MAAAA,SAAS,EAAE,KAAKyK,UADoB;AAEpC7E,MAAAA,OAFoC;AAGpCE,MAAAA,KAHoC;AAIpCC,MAAAA,YAAY,EAAE,KAAK2N,aAJiB;AAKpC/R,MAAAA,OAAO,EAAE,KAAK6R;AALsB,KAAnB,CAArB;AAOA,QAAI1T,KAAJ;;AACA,QAAI+F,QAAJ,EAAc;AACV,UAAI,kBAAyB,YAA7B,EAA2C;AACvC8N,QAAAA,IAAI,CAAC3R,IAAL,CAAW,mCAAkC,KAAKyI,UAAW,GAAnD,GACL,kEADL;AAEH;;AACD,UAAI3E,KAAJ,EAAW;AACP,YAAI;AACAA,UAAAA,KAAK,CAACyJ,SAAN,CAAgB+F,oBAAhB;AACH,SAFD,CAGA,OAAOxV,KAAP,EAAc;AACV,cAAI,kBAAyB,YAA7B,EAA2C;AACvCoE,2BAAOM,IAAP,CAAa,mDAAD,GACP,uBAAsB,oCAAeoB,OAAO,CAAC/F,GAAvB,CAA4B,IADvD;AAEH;AACJ;AACJ;AACJ,KAhBD,MAiBK;AACD,UAAI,kBAAyB,YAA7B,EAA2C;AACvC8T,QAAAA,IAAI,CAAC3R,IAAL,CAAW,6BAA4B,KAAKyI,UAAW,WAA7C,GACL,qCADL;AAEH;;AACD,UAAI;AACA5E,QAAAA,QAAQ,GAAG,MAAMyP,oBAAjB;AACH,OAFD,CAGA,OAAOrN,GAAP,EAAY;AACRnI,QAAAA,KAAK,GAAGmI,GAAR;AACH;AACJ;;AACD,QAAI,kBAAyB,YAA7B,EAA2C;AACvC/D,qBAAOO,cAAP,CAAsBxG,mBAASmV,aAAT,CAAuB,sBAAvB,EAA+CxN,OAA/C,CAAtB;;AACA,WAAK,IAAIrB,GAAT,IAAgBoP,IAAhB,EAAsB;AAClBzP,uBAAOK,GAAP,CAAWA,GAAX;AACH;;AACDtG,yBAASqV,kBAAT,CAA4BzN,QAA5B;;AACA3B,qBAAOQ,QAAP;AACH;;AACD,QAAI,CAACmB,QAAL,EAAe;AACX,YAAM,IAAIpF,0BAAJ,CAAiB,aAAjB,EAAgC;AAAEZ,QAAAA,GAAG,EAAE+F,OAAO,CAAC/F,GAAf;AAAoBC,QAAAA;AAApB,OAAhC,CAAN;AACH;;AACD,WAAO+F,QAAP;AACH;AACD;;;;;;;;;;AAQA,QAAM+N,eAAN,CAAsB;AAAEhO,IAAAA,OAAF;AAAWE,IAAAA;AAAX,GAAtB,EAA0C;AACtC,UAAMD,QAAQ,GAAG,MAAMwC,2BAAaD,KAAb,CAAmB;AACtCxC,MAAAA,OADsC;AAEtCE,MAAAA,KAFsC;AAGtC2B,MAAAA,YAAY,EAAE,KAAKgM,aAHmB;AAItC9R,MAAAA,OAAO,EAAE,KAAK6R;AAJwB,KAAnB,CAAvB;;AAMA,UAAMM,eAAe,GAAGvM,2BAAaZ,GAAb,CAAiB;AACrC3G,MAAAA,SAAS,EAAE,KAAKyK,UADqB;AAErC7E,MAAAA,OAFqC;AAGrCC,MAAAA,QAAQ,EAAEA,QAAQ,CAACkC,KAAT,EAH2B;AAIrCjC,MAAAA,KAJqC;AAKrCnE,MAAAA,OAAO,EAAE,KAAK6R;AALuB,KAAjB,CAAxB;;AAOA,QAAI1N,KAAJ,EAAW;AACP,UAAI;AACAA,QAAAA,KAAK,CAACyJ,SAAN,CAAgBuE,eAAhB;AACH,OAFD,CAGA,OAAOhU,KAAP,EAAc;AACV,YAAI,kBAAyB,YAA7B,EAA2C;AACvCoE,yBAAOM,IAAP,CAAa,mDAAD,GACP,uBAAsB,oCAAeoB,OAAO,CAAC/F,GAAvB,CAA4B,IADvD;AAEH;AACJ;AACJ;;AACD,WAAOgG,QAAP;AACH;;AAxIsB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC9B3B;;AACA;;AACA;;AACA;;AACA;;AACA;;;;;;;;ACZA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;ACAA;;AACA;;AACA;;AAGA,yCAAiBhF,IAAI,CAAC0U,aAAtB;;;ACLA,IAAIC,UAAU,GAAG,4BAAjB;AAEA,IAAIC,SAAS,GAAGC,MAAM,CAACC,MAAP,CAAcC,MAA9B;;AAEA,SAASA,MAAT,CAAgBpX,UAAhB,EAA4B;AAC1BiX,EAAAA,SAAS,CAAC7O,IAAV,CAAe,IAAf,EAAqBpI,UAArB;AACA,OAAKqX,GAAL,GAAW;AACTxE,IAAAA,IAAI,EAAEqE,MAAM,CAACC,MAAP,CAAcG,OADX;AAETC,IAAAA,gBAAgB,EAAE,EAFT;AAGTC,IAAAA,iBAAiB,EAAE,EAHV;AAITC,IAAAA,MAAM,EAAE,UAAUnT,EAAV,EAAc;AACpB,WAAKiT,gBAAL,CAAsB/T,IAAtB,CAA2Bc,EAAE,IAAI,YAAY,CAAE,CAA/C;AACD,KANQ;AAOToT,IAAAA,OAAO,EAAE,UAAUpT,EAAV,EAAc;AACrB,WAAKkT,iBAAL,CAAuBhU,IAAvB,CAA4Bc,EAA5B;AACD;AATQ,GAAX;AAYA4S,EAAAA,MAAM,CAACC,MAAP,CAAcG,OAAd,GAAwB,IAAxB;AACD;;AAEDJ,MAAM,CAACC,MAAP,CAAcC,MAAd,GAAuBA,MAAvB;AACA,IAAIO,aAAJ,EAAmBC,cAAnB;AAEA,IAAIC,MAAM,GAAGX,MAAM,CAACC,MAAP,CAAcU,MAA3B;;AACA,IAAI,CAAC,CAACA,MAAD,IAAW,CAACA,MAAM,CAACC,eAApB,KAAwC,OAAOC,SAAP,KAAqB,WAAjE,EAA8E;AAC5E,MAAIC,QAAQ,GAAG,MAA4B1S,QAAQ,CAAC0S,QAApD;AACA,MAAI7E,QAAQ,GAAG7N,QAAQ,CAAC6N,QAAT,KAAsB,QAAtB,GAAiC,KAAjC,GAAyC,IAAxD;AACA,MAAI8E,EAAE,GAAG,IAAIF,SAAJ,CAAc5E,QAAQ,GAAG,KAAX,GAAmB6E,QAAnB,GAA8B,GAA9B,aAA2D,GAAzE,CAAT;;AACAC,EAAAA,EAAE,CAACC,SAAH,GAAe,UAAS5Q,KAAT,EAAgB;AAC7BqQ,IAAAA,aAAa,GAAG,EAAhB;AACAC,IAAAA,cAAc,GAAG,EAAjB;AAEA,QAAI/E,IAAI,GAAG/S,IAAI,CAACqY,KAAL,CAAW7Q,KAAK,CAACuL,IAAjB,CAAX;;AAEA,QAAIA,IAAI,CAACnQ,IAAL,KAAc,QAAlB,EAA4B;AAC1B,UAAI0V,OAAO,GAAG,KAAd;AACAvF,MAAAA,IAAI,CAACwF,MAAL,CAAY3E,OAAZ,CAAoB,UAAS4E,KAAT,EAAgB;AAClC,YAAI,CAACA,KAAK,CAACC,KAAX,EAAkB;AAChB,cAAIC,SAAS,GAAGC,cAAc,CAACC,MAAM,CAACC,aAAR,EAAuBL,KAAK,CAACvC,EAA7B,CAA9B;;AACA,cAAIyC,SAAJ,EAAe;AACbJ,YAAAA,OAAO,GAAG,IAAV;AACD;AACF;AACF,OAPD,EAF0B,CAW1B;;AACAA,MAAAA,OAAO,GAAGA,OAAO,IAAIvF,IAAI,CAACwF,MAAL,CAAYO,KAAZ,CAAkB,UAASN,KAAT,EAAgB;AACrD,eAAOA,KAAK,CAAC5V,IAAN,KAAe,KAAf,IAAwB4V,KAAK,CAACO,SAAN,CAAgBC,EAA/C;AACD,OAFoB,CAArB;;AAIA,UAAIV,OAAJ,EAAa;AACX7R,QAAAA,OAAO,CAACwS,KAAR;AAEAlG,QAAAA,IAAI,CAACwF,MAAL,CAAY3E,OAAZ,CAAoB,UAAU4E,KAAV,EAAiB;AACnCU,UAAAA,QAAQ,CAACN,MAAM,CAACC,aAAR,EAAuBL,KAAvB,CAAR;AACD,SAFD;AAIAV,QAAAA,cAAc,CAAClE,OAAf,CAAuB,UAAUuF,CAAV,EAAa;AAClCC,UAAAA,YAAY,CAACD,CAAC,CAAC,CAAD,CAAF,EAAOA,CAAC,CAAC,CAAD,CAAR,CAAZ;AACD,SAFD;AAGD,OAVD,MAUO,IAAI3T,QAAQ,CAAC6T,MAAb,EAAqB;AAAE;AAC5B7T,QAAAA,QAAQ,CAAC6T,MAAT;AACD;AACF;;AAED,QAAItG,IAAI,CAACnQ,IAAL,KAAc,QAAlB,EAA4B;AAC1BuV,MAAAA,EAAE,CAACmB,KAAH;;AACAnB,MAAAA,EAAE,CAACoB,OAAH,GAAa,YAAY;AACvB/T,QAAAA,QAAQ,CAAC6T,MAAT;AACD,OAFD;AAGD;;AAED,QAAItG,IAAI,CAACnQ,IAAL,KAAc,gBAAlB,EAAoC;AAClC6D,MAAAA,OAAO,CAACR,GAAR,CAAY,2BAAZ;AAEAuT,MAAAA,kBAAkB;AACnB;;AAED,QAAIzG,IAAI,CAACnQ,IAAL,KAAc,OAAlB,EAA2B;AACzB6D,MAAAA,OAAO,CAACjF,KAAR,CAAc,kBAAkBuR,IAAI,CAACvR,KAAL,CAAWT,OAA7B,GAAuC,IAAvC,GAA8CgS,IAAI,CAACvR,KAAL,CAAWiY,KAAvE;AAEAD,MAAAA,kBAAkB;AAElB,UAAIE,OAAO,GAAGC,kBAAkB,CAAC5G,IAAD,CAAhC;AACA6G,MAAAA,QAAQ,CAACzP,IAAT,CAAc0P,WAAd,CAA0BH,OAA1B;AACD;AACF,GA1DD;AA2DD;;AAED,SAASF,kBAAT,GAA8B;AAC5B,MAAIE,OAAO,GAAGE,QAAQ,CAACE,cAAT,CAAwB5C,UAAxB,CAAd;;AACA,MAAIwC,OAAJ,EAAa;AACXA,IAAAA,OAAO,CAACK,MAAR;AACD;AACF;;AAED,SAASJ,kBAAT,CAA4B5G,IAA5B,EAAkC;AAChC,MAAI2G,OAAO,GAAGE,QAAQ,CAACI,aAAT,CAAuB,KAAvB,CAAd;AACAN,EAAAA,OAAO,CAACzD,EAAR,GAAaiB,UAAb,CAFgC,CAIhC;;AACA,MAAInW,OAAO,GAAG6Y,QAAQ,CAACI,aAAT,CAAuB,KAAvB,CAAd;AACA,MAAIC,UAAU,GAAGL,QAAQ,CAACI,aAAT,CAAuB,KAAvB,CAAjB;AACAjZ,EAAAA,OAAO,CAACmZ,SAAR,GAAoBnH,IAAI,CAACvR,KAAL,CAAWT,OAA/B;AACAkZ,EAAAA,UAAU,CAACC,SAAX,GAAuBnH,IAAI,CAACvR,KAAL,CAAWiY,KAAlC;AAEAC,EAAAA,OAAO,CAACS,SAAR,GACE,2NACE,mFADF,GAEE,yEAFF,GAGE,qEAHF,GAG0EpZ,OAAO,CAACoZ,SAHlF,GAG8F,QAH9F,GAIE,OAJF,GAIYF,UAAU,CAACE,SAJvB,GAImC,QAJnC,GAKA,QANF;AASA,SAAOT,OAAP;AAED;;AAED,SAASU,UAAT,CAAoB/C,MAApB,EAA4BpB,EAA5B,EAAgC;AAC9B,MAAIoE,OAAO,GAAGhD,MAAM,CAACgD,OAArB;;AACA,MAAI,CAACA,OAAL,EAAc;AACZ,WAAO,EAAP;AACD;;AAED,MAAIC,OAAO,GAAG,EAAd;AACA,MAAIC,CAAJ,EAAOC,CAAP,EAAUC,GAAV;;AAEA,OAAKF,CAAL,IAAUF,OAAV,EAAmB;AACjB,SAAKG,CAAL,IAAUH,OAAO,CAACE,CAAD,CAAP,CAAW,CAAX,CAAV,EAAyB;AACvBE,MAAAA,GAAG,GAAGJ,OAAO,CAACE,CAAD,CAAP,CAAW,CAAX,EAAcC,CAAd,CAAN;;AACA,UAAIC,GAAG,KAAKxE,EAAR,IAAexT,KAAK,CAACD,OAAN,CAAciY,GAAd,KAAsBA,GAAG,CAACA,GAAG,CAAC1Y,MAAJ,GAAa,CAAd,CAAH,KAAwBkU,EAAjE,EAAsE;AACpEqE,QAAAA,OAAO,CAAC5W,IAAR,CAAa6W,CAAb;AACD;AACF;AACF;;AAED,MAAIlD,MAAM,CAACU,MAAX,EAAmB;AACjBuC,IAAAA,OAAO,GAAGA,OAAO,CAACI,MAAR,CAAeN,UAAU,CAAC/C,MAAM,CAACU,MAAR,EAAgB9B,EAAhB,CAAzB,CAAV;AACD;;AAED,SAAOqE,OAAP;AACD;;AAED,SAASpB,QAAT,CAAkB7B,MAAlB,EAA0BmB,KAA1B,EAAiC;AAC/B,MAAI6B,OAAO,GAAGhD,MAAM,CAACgD,OAArB;;AACA,MAAI,CAACA,OAAL,EAAc;AACZ;AACD;;AAED,MAAIA,OAAO,CAAC7B,KAAK,CAACvC,EAAP,CAAP,IAAqB,CAACoB,MAAM,CAACU,MAAjC,EAAyC;AACvC,QAAIvT,EAAE,GAAG,IAAImW,QAAJ,CAAa,SAAb,EAAwB,QAAxB,EAAkC,SAAlC,EAA6CnC,KAAK,CAACO,SAAN,CAAgBC,EAA7D,CAAT;AACAR,IAAAA,KAAK,CAACC,KAAN,GAAc,CAAC4B,OAAO,CAAC7B,KAAK,CAACvC,EAAP,CAAtB;AACAoE,IAAAA,OAAO,CAAC7B,KAAK,CAACvC,EAAP,CAAP,GAAoB,CAACzR,EAAD,EAAKgU,KAAK,CAACoC,IAAX,CAApB;AACD,GAJD,MAIO,IAAIvD,MAAM,CAACU,MAAX,EAAmB;AACxBmB,IAAAA,QAAQ,CAAC7B,MAAM,CAACU,MAAR,EAAgBS,KAAhB,CAAR;AACD;AACF;;AAED,SAASG,cAAT,CAAwBtB,MAAxB,EAAgCpB,EAAhC,EAAoC;AAClC,MAAIoE,OAAO,GAAGhD,MAAM,CAACgD,OAArB;;AACA,MAAI,CAACA,OAAL,EAAc;AACZ;AACD;;AAED,MAAI,CAACA,OAAO,CAACpE,EAAD,CAAR,IAAgBoB,MAAM,CAACU,MAA3B,EAAmC;AACjC,WAAOY,cAAc,CAACtB,MAAM,CAACU,MAAR,EAAgB9B,EAAhB,CAArB;AACD;;AAED,MAAI4B,aAAa,CAAC5B,EAAD,CAAjB,EAAuB;AACrB;AACD;;AACD4B,EAAAA,aAAa,CAAC5B,EAAD,CAAb,GAAoB,IAApB;AAEA,MAAI4E,MAAM,GAAGxD,MAAM,CAACtP,KAAP,CAAakO,EAAb,CAAb;AAEA6B,EAAAA,cAAc,CAACpU,IAAf,CAAoB,CAAC2T,MAAD,EAASpB,EAAT,CAApB;;AAEA,MAAI4E,MAAM,IAAIA,MAAM,CAACtD,GAAjB,IAAwBsD,MAAM,CAACtD,GAAP,CAAWE,gBAAX,CAA4B1V,MAAxD,EAAgE;AAC9D,WAAO,IAAP;AACD;;AAED,SAAOqY,UAAU,CAACxB,MAAM,CAACC,aAAR,EAAuB5C,EAAvB,CAAV,CAAqC/G,IAArC,CAA0C,UAAU+G,EAAV,EAAc;AAC7D,WAAO0C,cAAc,CAACC,MAAM,CAACC,aAAR,EAAuB5C,EAAvB,CAArB;AACD,GAFM,CAAP;AAGD;;AAED,SAASmD,YAAT,CAAsB/B,MAAtB,EAA8BpB,EAA9B,EAAkC;AAChC,MAAI4E,MAAM,GAAGxD,MAAM,CAACtP,KAAP,CAAakO,EAAb,CAAb;AACAoB,EAAAA,MAAM,CAACG,OAAP,GAAiB,EAAjB;;AACA,MAAIqD,MAAJ,EAAY;AACVA,IAAAA,MAAM,CAACtD,GAAP,CAAWxE,IAAX,GAAkBsE,MAAM,CAACG,OAAzB;AACD;;AAED,MAAIqD,MAAM,IAAIA,MAAM,CAACtD,GAAjB,IAAwBsD,MAAM,CAACtD,GAAP,CAAWG,iBAAX,CAA6B3V,MAAzD,EAAiE;AAC/D8Y,IAAAA,MAAM,CAACtD,GAAP,CAAWG,iBAAX,CAA6B9D,OAA7B,CAAqC,UAAUkH,EAAV,EAAc;AACjDA,MAAAA,EAAE,CAACzD,MAAM,CAACG,OAAR,CAAF;AACD,KAFD;AAGD;;AAED,SAAOH,MAAM,CAACtP,KAAP,CAAakO,EAAb,CAAP;AACAoB,EAAAA,MAAM,CAACpB,EAAD,CAAN;AAEA4E,EAAAA,MAAM,GAAGxD,MAAM,CAACtP,KAAP,CAAakO,EAAb,CAAT;;AACA,MAAI4E,MAAM,IAAIA,MAAM,CAACtD,GAAjB,IAAwBsD,MAAM,CAACtD,GAAP,CAAWE,gBAAX,CAA4B1V,MAAxD,EAAgE;AAC9D8Y,IAAAA,MAAM,CAACtD,GAAP,CAAWE,gBAAX,CAA4B7D,OAA5B,CAAoC,UAAUkH,EAAV,EAAc;AAChDA,MAAAA,EAAE;AACH,KAFD;;AAGA,WAAO,IAAP;AACD;AACF","file":"sw-src.js","sourceRoot":"..","sourcesContent":["\"use strict\";\n// @ts-ignore\ntry {\n    self['workbox:core:5.0.0'] && _();\n}\ncatch (e) { }\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../../_version.js';\nexport const messages = {\n    'invalid-value': ({ paramName, validValueDescription, value }) => {\n        if (!paramName || !validValueDescription) {\n            throw new Error(`Unexpected input to 'invalid-value' error.`);\n        }\n        return `The '${paramName}' parameter was given a value with an ` +\n            `unexpected value. ${validValueDescription} Received a value of ` +\n            `${JSON.stringify(value)}.`;\n    },\n    'not-in-sw': ({ moduleName }) => {\n        if (!moduleName) {\n            throw new Error(`Unexpected input to 'not-in-sw' error.`);\n        }\n        return `The '${moduleName}' must be used in a service worker.`;\n    },\n    'not-an-array': ({ moduleName, className, funcName, paramName }) => {\n        if (!moduleName || !className || !funcName || !paramName) {\n            throw new Error(`Unexpected input to 'not-an-array' error.`);\n        }\n        return `The parameter '${paramName}' passed into ` +\n            `'${moduleName}.${className}.${funcName}()' must be an array.`;\n    },\n    'incorrect-type': ({ expectedType, paramName, moduleName, className, funcName }) => {\n        if (!expectedType || !paramName || !moduleName || !funcName) {\n            throw new Error(`Unexpected input to 'incorrect-type' error.`);\n        }\n        return `The parameter '${paramName}' passed into ` +\n            `'${moduleName}.${className ? (className + '.') : ''}` +\n            `${funcName}()' must be of type ${expectedType}.`;\n    },\n    'incorrect-class': ({ expectedClass, paramName, moduleName, className, funcName, isReturnValueProblem }) => {\n        if (!expectedClass || !moduleName || !funcName) {\n            throw new Error(`Unexpected input to 'incorrect-class' error.`);\n        }\n        if (isReturnValueProblem) {\n            return `The return value from ` +\n                `'${moduleName}.${className ? (className + '.') : ''}${funcName}()' ` +\n                `must be an instance of class ${expectedClass.name}.`;\n        }\n        return `The parameter '${paramName}' passed into ` +\n            `'${moduleName}.${className ? (className + '.') : ''}${funcName}()' ` +\n            `must be an instance of class ${expectedClass.name}.`;\n    },\n    'missing-a-method': ({ expectedMethod, paramName, moduleName, className, funcName }) => {\n        if (!expectedMethod || !paramName || !moduleName || !className\n            || !funcName) {\n            throw new Error(`Unexpected input to 'missing-a-method' error.`);\n        }\n        return `${moduleName}.${className}.${funcName}() expected the ` +\n            `'${paramName}' parameter to expose a '${expectedMethod}' method.`;\n    },\n    'add-to-cache-list-unexpected-type': ({ entry }) => {\n        return `An unexpected entry was passed to ` +\n            `'workbox-precaching.PrecacheController.addToCacheList()' The entry ` +\n            `'${JSON.stringify(entry)}' isn't supported. You must supply an array of ` +\n            `strings with one or more characters, objects with a url property or ` +\n            `Request objects.`;\n    },\n    'add-to-cache-list-conflicting-entries': ({ firstEntry, secondEntry }) => {\n        if (!firstEntry || !secondEntry) {\n            throw new Error(`Unexpected input to ` +\n                `'add-to-cache-list-duplicate-entries' error.`);\n        }\n        return `Two of the entries passed to ` +\n            `'workbox-precaching.PrecacheController.addToCacheList()' had the URL ` +\n            `${firstEntry._entryId} but different revision details. Workbox is ` +\n            `is unable to cache and version the asset correctly. Please remove one ` +\n            `of the entries.`;\n    },\n    'plugin-error-request-will-fetch': ({ thrownError }) => {\n        if (!thrownError) {\n            throw new Error(`Unexpected input to ` +\n                `'plugin-error-request-will-fetch', error.`);\n        }\n        return `An error was thrown by a plugins 'requestWillFetch()' method. ` +\n            `The thrown error message was: '${thrownError.message}'.`;\n    },\n    'invalid-cache-name': ({ cacheNameId, value }) => {\n        if (!cacheNameId) {\n            throw new Error(`Expected a 'cacheNameId' for error 'invalid-cache-name'`);\n        }\n        return `You must provide a name containing at least one character for ` +\n            `setCacheDetails({${cacheNameId}: '...'}). Received a value of ` +\n            `'${JSON.stringify(value)}'`;\n    },\n    'unregister-route-but-not-found-with-method': ({ method }) => {\n        if (!method) {\n            throw new Error(`Unexpected input to ` +\n                `'unregister-route-but-not-found-with-method' error.`);\n        }\n        return `The route you're trying to unregister was not  previously ` +\n            `registered for the method type '${method}'.`;\n    },\n    'unregister-route-route-not-registered': () => {\n        return `The route you're trying to unregister was not previously ` +\n            `registered.`;\n    },\n    'queue-replay-failed': ({ name }) => {\n        return `Replaying the background sync queue '${name}' failed.`;\n    },\n    'duplicate-queue-name': ({ name }) => {\n        return `The Queue name '${name}' is already being used. ` +\n            `All instances of backgroundSync.Queue must be given unique names.`;\n    },\n    'expired-test-without-max-age': ({ methodName, paramName }) => {\n        return `The '${methodName}()' method can only be used when the ` +\n            `'${paramName}' is used in the constructor.`;\n    },\n    'unsupported-route-type': ({ moduleName, className, funcName, paramName }) => {\n        return `The supplied '${paramName}' parameter was an unsupported type. ` +\n            `Please check the docs for ${moduleName}.${className}.${funcName} for ` +\n            `valid input types.`;\n    },\n    'not-array-of-class': ({ value, expectedClass, moduleName, className, funcName, paramName }) => {\n        return `The supplied '${paramName}' parameter must be an array of ` +\n            `'${expectedClass}' objects. Received '${JSON.stringify(value)},'. ` +\n            `Please check the call to ${moduleName}.${className}.${funcName}() ` +\n            `to fix the issue.`;\n    },\n    'max-entries-or-age-required': ({ moduleName, className, funcName }) => {\n        return `You must define either config.maxEntries or config.maxAgeSeconds` +\n            `in ${moduleName}.${className}.${funcName}`;\n    },\n    'statuses-or-headers-required': ({ moduleName, className, funcName }) => {\n        return `You must define either config.statuses or config.headers` +\n            `in ${moduleName}.${className}.${funcName}`;\n    },\n    'invalid-string': ({ moduleName, funcName, paramName }) => {\n        if (!paramName || !moduleName || !funcName) {\n            throw new Error(`Unexpected input to 'invalid-string' error.`);\n        }\n        return `When using strings, the '${paramName}' parameter must start with ` +\n            `'http' (for cross-origin matches) or '/' (for same-origin matches). ` +\n            `Please see the docs for ${moduleName}.${funcName}() for ` +\n            `more info.`;\n    },\n    'channel-name-required': () => {\n        return `You must provide a channelName to construct a ` +\n            `BroadcastCacheUpdate instance.`;\n    },\n    'invalid-responses-are-same-args': () => {\n        return `The arguments passed into responsesAreSame() appear to be ` +\n            `invalid. Please ensure valid Responses are used.`;\n    },\n    'expire-custom-caches-only': () => {\n        return `You must provide a 'cacheName' property when using the ` +\n            `expiration plugin with a runtime caching strategy.`;\n    },\n    'unit-must-be-bytes': ({ normalizedRangeHeader }) => {\n        if (!normalizedRangeHeader) {\n            throw new Error(`Unexpected input to 'unit-must-be-bytes' error.`);\n        }\n        return `The 'unit' portion of the Range header must be set to 'bytes'. ` +\n            `The Range header provided was \"${normalizedRangeHeader}\"`;\n    },\n    'single-range-only': ({ normalizedRangeHeader }) => {\n        if (!normalizedRangeHeader) {\n            throw new Error(`Unexpected input to 'single-range-only' error.`);\n        }\n        return `Multiple ranges are not supported. Please use a  single start ` +\n            `value, and optional end value. The Range header provided was ` +\n            `\"${normalizedRangeHeader}\"`;\n    },\n    'invalid-range-values': ({ normalizedRangeHeader }) => {\n        if (!normalizedRangeHeader) {\n            throw new Error(`Unexpected input to 'invalid-range-values' error.`);\n        }\n        return `The Range header is missing both start and end values. At least ` +\n            `one of those values is needed. The Range header provided was ` +\n            `\"${normalizedRangeHeader}\"`;\n    },\n    'no-range-header': () => {\n        return `No Range header was found in the Request provided.`;\n    },\n    'range-not-satisfiable': ({ size, start, end }) => {\n        return `The start (${start}) and end (${end}) values in the Range are ` +\n            `not satisfiable by the cached response, which is ${size} bytes.`;\n    },\n    'attempt-to-cache-non-get-request': ({ url, method }) => {\n        return `Unable to cache '${url}' because it is a '${method}' request and ` +\n            `only 'GET' requests can be cached.`;\n    },\n    'cache-put-with-no-response': ({ url }) => {\n        return `There was an attempt to cache '${url}' but the response was not ` +\n            `defined.`;\n    },\n    'no-response': ({ url, error }) => {\n        let message = `The strategy could not generate a response for '${url}'.`;\n        if (error) {\n            message += ` The underlying error is ${error}.`;\n        }\n        return message;\n    },\n    'bad-precaching-response': ({ url, status }) => {\n        return `The precaching request for '${url}' failed with an HTTP ` +\n            `status of ${status}.`;\n    },\n    'non-precached-url': ({ url }) => {\n        return `createHandlerBoundToURL('${url}') was called, but that URL is ` +\n            `not precached. Please pass in a URL that is precached instead.`;\n    },\n    'add-to-cache-list-conflicting-integrities': ({ url }) => {\n        return `Two of the entries passed to ` +\n            `'workbox-precaching.PrecacheController.addToCacheList()' had the URL ` +\n            `${url} with different integrity values. Please remove one of them.`;\n    },\n    'missing-precache-entry': ({ cacheName, url }) => {\n        return `Unable to find a precached response in ${cacheName} for ${url}.`;\n    },\n};\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { messages } from './messages.js';\nimport '../../_version.js';\nconst fallback = (code, ...args) => {\n    let msg = code;\n    if (args.length > 0) {\n        msg += ` :: ${JSON.stringify(args)}`;\n    }\n    return msg;\n};\nconst generatorFunction = (code, details = {}) => {\n    const message = messages[code];\n    if (!message) {\n        throw new Error(`Unable to find message for code '${code}'.`);\n    }\n    return message(details);\n};\nexport const messageGenerator = (process.env.NODE_ENV === 'production') ?\n    fallback : generatorFunction;\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { messageGenerator } from '../models/messages/messageGenerator.js';\nimport '../_version.js';\n/**\n * Workbox errors should be thrown with this class.\n * This allows use to ensure the type easily in tests,\n * helps developers identify errors from workbox\n * easily and allows use to optimise error\n * messages correctly.\n *\n * @private\n */\nclass WorkboxError extends Error {\n    /**\n     *\n     * @param {string} errorCode The error code that\n     * identifies this particular error.\n     * @param {Object=} details Any relevant arguments\n     * that will help developers identify issues should\n     * be added as a key on the context object.\n     */\n    constructor(errorCode, details) {\n        let message = messageGenerator(errorCode, details);\n        super(message);\n        this.name = errorCode;\n        this.details = details;\n    }\n}\nexport { WorkboxError };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { WorkboxError } from '../_private/WorkboxError.js';\nimport '../_version.js';\n/*\n * This method returns true if the current context is a service worker.\n */\nconst isSWEnv = (moduleName) => {\n    if (!('ServiceWorkerGlobalScope' in self)) {\n        throw new WorkboxError('not-in-sw', { moduleName });\n    }\n};\n/*\n * This method throws if the supplied value is not an array.\n * The destructed values are required to produce a meaningful error for users.\n * The destructed and restructured object is so it's clear what is\n * needed.\n */\nconst isArray = (value, details) => {\n    if (!Array.isArray(value)) {\n        throw new WorkboxError('not-an-array', details);\n    }\n};\nconst hasMethod = (object, expectedMethod, details) => {\n    const type = typeof object[expectedMethod];\n    if (type !== 'function') {\n        details['expectedMethod'] = expectedMethod;\n        throw new WorkboxError('missing-a-method', details);\n    }\n};\nconst isType = (object, expectedType, details) => {\n    if (typeof object !== expectedType) {\n        details['expectedType'] = expectedType;\n        throw new WorkboxError('incorrect-type', details);\n    }\n};\nconst isInstance = (object, expectedClass, details) => {\n    if (!(object instanceof expectedClass)) {\n        details['expectedClass'] = expectedClass;\n        throw new WorkboxError('incorrect-class', details);\n    }\n};\nconst isOneOf = (value, validValues, details) => {\n    if (!validValues.includes(value)) {\n        details['validValueDescription'] =\n            `Valid values are ${JSON.stringify(validValues)}.`;\n        throw new WorkboxError('invalid-value', details);\n    }\n};\nconst isArrayOfClass = (value, expectedClass, details) => {\n    const error = new WorkboxError('not-array-of-class', details);\n    if (!Array.isArray(value)) {\n        throw error;\n    }\n    for (let item of value) {\n        if (!(item instanceof expectedClass)) {\n            throw error;\n        }\n    }\n};\nconst finalAssertExports = process.env.NODE_ENV === 'production' ? null : {\n    hasMethod,\n    isArray,\n    isInstance,\n    isOneOf,\n    isSWEnv,\n    isType,\n    isArrayOfClass,\n};\nexport { finalAssertExports as assert };\n","\"use strict\";\n// @ts-ignore\ntry {\n    self['workbox:precaching:5.0.0'] && _();\n}\ncatch (e) { }\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\nconst plugins = [];\nexport const precachePlugins = {\n    /*\n     * @return {Array}\n     * @private\n     */\n    get() {\n        return plugins;\n    },\n    /*\n     * @param {Array} newPlugins\n     * @private\n     */\n    add(newPlugins) {\n        plugins.push(...newPlugins);\n    },\n};\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { precachePlugins } from './utils/precachePlugins.js';\nimport './_version.js';\n/**\n * Adds plugins to precaching.\n *\n * @param {Array<Object>} newPlugins\n *\n * @memberof module:workbox-precaching\n */\nfunction addPlugins(newPlugins) {\n    precachePlugins.add(newPlugins);\n}\n;\nexport { addPlugins };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\nconst _cacheNameDetails = {\n    googleAnalytics: 'googleAnalytics',\n    precache: 'precache-v2',\n    prefix: 'workbox',\n    runtime: 'runtime',\n    suffix: typeof registration !== 'undefined' ? registration.scope : '',\n};\nconst _createCacheName = (cacheName) => {\n    return [_cacheNameDetails.prefix, cacheName, _cacheNameDetails.suffix]\n        .filter((value) => value && value.length > 0)\n        .join('-');\n};\nconst eachCacheNameDetail = (fn) => {\n    for (const key of Object.keys(_cacheNameDetails)) {\n        fn(key);\n    }\n};\nexport const cacheNames = {\n    updateDetails: (details) => {\n        eachCacheNameDetail((key) => {\n            if (typeof details[key] === 'string') {\n                _cacheNameDetails[key] = details[key];\n            }\n        });\n    },\n    getGoogleAnalyticsName: (userCacheName) => {\n        return userCacheName || _createCacheName(_cacheNameDetails.googleAnalytics);\n    },\n    getPrecacheName: (userCacheName) => {\n        return userCacheName || _createCacheName(_cacheNameDetails.precache);\n    },\n    getPrefix: () => {\n        return _cacheNameDetails.prefix;\n    },\n    getRuntimeName: (userCacheName) => {\n        return userCacheName || _createCacheName(_cacheNameDetails.runtime);\n    },\n    getSuffix: () => {\n        return _cacheNameDetails.suffix;\n    },\n};\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\nconst getFriendlyURL = (url) => {\n    const urlObj = new URL(String(url), location.href);\n    if (urlObj.origin === location.origin) {\n        return urlObj.pathname;\n    }\n    return urlObj.href;\n};\nexport { getFriendlyURL };\n","/*\n  Copyright 2019 Google LLC\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\nconst logger = (process.env.NODE_ENV === 'production' ? null : (() => {\n    // Don't overwrite this value if it's already set.\n    // See https://github.com/GoogleChrome/workbox/pull/2284#issuecomment-560470923\n    if (!('__WB_DISABLE_DEV_LOGS' in self)) {\n        self.__WB_DISABLE_DEV_LOGS = false;\n    }\n    let inGroup = false;\n    const methodToColorMap = {\n        debug: `#7f8c8d`,\n        log: `#2ecc71`,\n        warn: `#f39c12`,\n        error: `#c0392b`,\n        groupCollapsed: `#3498db`,\n        groupEnd: null,\n    };\n    const print = function (method, args) {\n        if (self.__WB_DISABLE_DEV_LOGS) {\n            return;\n        }\n        if (method === 'groupCollapsed') {\n            // Safari doesn't print all console.groupCollapsed() arguments:\n            // https://bugs.webkit.org/show_bug.cgi?id=182754\n            if (/^((?!chrome|android).)*safari/i.test(navigator.userAgent)) {\n                console[method](...args);\n                return;\n            }\n        }\n        const styles = [\n            `background: ${methodToColorMap[method]}`,\n            `border-radius: 0.5em`,\n            `color: white`,\n            `font-weight: bold`,\n            `padding: 2px 0.5em`,\n        ];\n        // When in a group, the workbox prefix is not displayed.\n        const logPrefix = inGroup ? [] : ['%cworkbox', styles.join(';')];\n        console[method](...logPrefix, ...args);\n        if (method === 'groupCollapsed') {\n            inGroup = true;\n        }\n        if (method === 'groupEnd') {\n            inGroup = false;\n        }\n    };\n    const api = {};\n    const loggerMethods = Object.keys(methodToColorMap);\n    for (const key of loggerMethods) {\n        const method = key;\n        api[method] = (...args) => {\n            print(method, args);\n        };\n    }\n    return api;\n})());\nexport { logger };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\n// Callbacks to be executed whenever there's a quota error.\nconst quotaErrorCallbacks = new Set();\nexport { quotaErrorCallbacks };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { logger } from '../_private/logger.js';\nimport { quotaErrorCallbacks } from '../models/quotaErrorCallbacks.js';\nimport '../_version.js';\n/**\n * Runs all of the callback functions, one at a time sequentially, in the order\n * in which they were registered.\n *\n * @memberof module:workbox-core\n * @private\n */\nasync function executeQuotaErrorCallbacks() {\n    if (process.env.NODE_ENV !== 'production') {\n        logger.log(`About to run ${quotaErrorCallbacks.size} ` +\n            `callbacks to clean up caches.`);\n    }\n    for (const callback of quotaErrorCallbacks) {\n        await callback();\n        if (process.env.NODE_ENV !== 'production') {\n            logger.log(callback, 'is complete.');\n        }\n    }\n    if (process.env.NODE_ENV !== 'production') {\n        logger.log('Finished running callbacks.');\n    }\n}\nexport { executeQuotaErrorCallbacks };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\nexport const pluginUtils = {\n    filter: (plugins, callbackName) => {\n        return plugins.filter((plugin) => callbackName in plugin);\n    },\n};\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from './assert.js';\nimport { executeQuotaErrorCallbacks } from './executeQuotaErrorCallbacks.js';\nimport { getFriendlyURL } from './getFriendlyURL.js';\nimport { logger } from './logger.js';\nimport { pluginUtils } from '../utils/pluginUtils.js';\nimport { WorkboxError } from './WorkboxError.js';\nimport '../_version.js';\n/**\n * Wrapper around cache.put().\n *\n * Will call `cacheDidUpdate` on plugins if the cache was updated, using\n * `matchOptions` when determining what the old entry is.\n *\n * @param {Object} options\n * @param {string} options.cacheName\n * @param {Request} options.request\n * @param {Response} options.response\n * @param {Event} [options.event]\n * @param {Array<Object>} [options.plugins=[]]\n * @param {Object} [options.matchOptions]\n *\n * @private\n * @memberof module:workbox-core\n */\nconst putWrapper = async ({ cacheName, request, response, event, plugins = [], matchOptions, }) => {\n    if (process.env.NODE_ENV !== 'production') {\n        if (request.method && request.method !== 'GET') {\n            throw new WorkboxError('attempt-to-cache-non-get-request', {\n                url: getFriendlyURL(request.url),\n                method: request.method,\n            });\n        }\n    }\n    const effectiveRequest = await _getEffectiveRequest({\n        plugins, request, mode: 'write'\n    });\n    if (!response) {\n        if (process.env.NODE_ENV !== 'production') {\n            logger.error(`Cannot cache non-existent response for ` +\n                `'${getFriendlyURL(effectiveRequest.url)}'.`);\n        }\n        throw new WorkboxError('cache-put-with-no-response', {\n            url: getFriendlyURL(effectiveRequest.url),\n        });\n    }\n    let responseToCache = await _isResponseSafeToCache({\n        event,\n        plugins,\n        response,\n        request: effectiveRequest,\n    });\n    if (!responseToCache) {\n        if (process.env.NODE_ENV !== 'production') {\n            logger.debug(`Response '${getFriendlyURL(effectiveRequest.url)}' will ` +\n                `not be cached.`, responseToCache);\n        }\n        return;\n    }\n    const cache = await self.caches.open(cacheName);\n    const updatePlugins = pluginUtils.filter(plugins, \"cacheDidUpdate\" /* CACHE_DID_UPDATE */);\n    let oldResponse = updatePlugins.length > 0 ?\n        await matchWrapper({ cacheName, matchOptions, request: effectiveRequest }) :\n        null;\n    if (process.env.NODE_ENV !== 'production') {\n        logger.debug(`Updating the '${cacheName}' cache with a new Response for ` +\n            `${getFriendlyURL(effectiveRequest.url)}.`);\n    }\n    try {\n        await cache.put(effectiveRequest, responseToCache);\n    }\n    catch (error) {\n        // See https://developer.mozilla.org/en-US/docs/Web/API/DOMException#exception-QuotaExceededError\n        if (error.name === 'QuotaExceededError') {\n            await executeQuotaErrorCallbacks();\n        }\n        throw error;\n    }\n    for (let plugin of updatePlugins) {\n        await plugin[\"cacheDidUpdate\" /* CACHE_DID_UPDATE */].call(plugin, {\n            cacheName,\n            event,\n            oldResponse,\n            newResponse: responseToCache,\n            request: effectiveRequest,\n        });\n    }\n};\n/**\n * This is a wrapper around cache.match().\n *\n * @param {Object} options\n * @param {string} options.cacheName Name of the cache to match against.\n * @param {Request} options.request The Request that will be used to look up\n *     cache entries.\n * @param {Event} [options.event] The event that prompted the action.\n * @param {Object} [options.matchOptions] Options passed to cache.match().\n * @param {Array<Object>} [options.plugins=[]] Array of plugins.\n * @return {Response} A cached response if available.\n *\n * @private\n * @memberof module:workbox-core\n */\nconst matchWrapper = async ({ cacheName, request, event, matchOptions, plugins = [], }) => {\n    const cache = await self.caches.open(cacheName);\n    const effectiveRequest = await _getEffectiveRequest({\n        plugins, request, mode: 'read'\n    });\n    let cachedResponse = await cache.match(effectiveRequest, matchOptions);\n    if (process.env.NODE_ENV !== 'production') {\n        if (cachedResponse) {\n            logger.debug(`Found a cached response in '${cacheName}'.`);\n        }\n        else {\n            logger.debug(`No cached response found in '${cacheName}'.`);\n        }\n    }\n    for (const plugin of plugins) {\n        if (\"cachedResponseWillBeUsed\" /* CACHED_RESPONSE_WILL_BE_USED */ in plugin) {\n            const pluginMethod = plugin[\"cachedResponseWillBeUsed\" /* CACHED_RESPONSE_WILL_BE_USED */];\n            cachedResponse = await pluginMethod.call(plugin, {\n                cacheName,\n                event,\n                matchOptions,\n                cachedResponse,\n                request: effectiveRequest,\n            });\n            if (process.env.NODE_ENV !== 'production') {\n                if (cachedResponse) {\n                    assert.isInstance(cachedResponse, Response, {\n                        moduleName: 'Plugin',\n                        funcName: \"cachedResponseWillBeUsed\" /* CACHED_RESPONSE_WILL_BE_USED */,\n                        isReturnValueProblem: true,\n                    });\n                }\n            }\n        }\n    }\n    return cachedResponse;\n};\n/**\n * This method will call cacheWillUpdate on the available plugins (or use\n * status === 200) to determine if the Response is safe and valid to cache.\n *\n * @param {Object} options\n * @param {Request} options.request\n * @param {Response} options.response\n * @param {Event} [options.event]\n * @param {Array<Object>} [options.plugins=[]]\n * @return {Promise<Response>}\n *\n * @private\n * @memberof module:workbox-core\n */\nconst _isResponseSafeToCache = async ({ request, response, event, plugins = [], }) => {\n    let responseToCache = response;\n    let pluginsUsed = false;\n    for (let plugin of plugins) {\n        if (\"cacheWillUpdate\" /* CACHE_WILL_UPDATE */ in plugin) {\n            pluginsUsed = true;\n            const pluginMethod = plugin[\"cacheWillUpdate\" /* CACHE_WILL_UPDATE */];\n            responseToCache = await pluginMethod.call(plugin, {\n                request,\n                response: responseToCache,\n                event,\n            });\n            if (process.env.NODE_ENV !== 'production') {\n                if (responseToCache) {\n                    assert.isInstance(responseToCache, Response, {\n                        moduleName: 'Plugin',\n                        funcName: \"cacheWillUpdate\" /* CACHE_WILL_UPDATE */,\n                        isReturnValueProblem: true,\n                    });\n                }\n            }\n            if (!responseToCache) {\n                break;\n            }\n        }\n    }\n    if (!pluginsUsed) {\n        if (process.env.NODE_ENV !== 'production') {\n            if (responseToCache) {\n                if (responseToCache.status !== 200) {\n                    if (responseToCache.status === 0) {\n                        logger.warn(`The response for '${request.url}' is an opaque ` +\n                            `response. The caching strategy that you're using will not ` +\n                            `cache opaque responses by default.`);\n                    }\n                    else {\n                        logger.debug(`The response for '${request.url}' returned ` +\n                            `a status code of '${response.status}' and won't be cached as a ` +\n                            `result.`);\n                    }\n                }\n            }\n        }\n        responseToCache = responseToCache && responseToCache.status === 200 ?\n            responseToCache : undefined;\n    }\n    return responseToCache ? responseToCache : null;\n};\n/**\n * Checks the list of plugins for the cacheKeyWillBeUsed callback, and\n * executes any of those callbacks found in sequence. The final `Request` object\n * returned by the last plugin is treated as the cache key for cache reads\n * and/or writes.\n *\n * @param {Object} options\n * @param {Request} options.request\n * @param {string} options.mode\n * @param {Array<Object>} [options.plugins=[]]\n * @return {Promise<Request>}\n *\n * @private\n * @memberof module:workbox-core\n */\nconst _getEffectiveRequest = async ({ request, mode, plugins = [], }) => {\n    const cacheKeyWillBeUsedPlugins = pluginUtils.filter(plugins, \"cacheKeyWillBeUsed\" /* CACHE_KEY_WILL_BE_USED */);\n    let effectiveRequest = request;\n    for (const plugin of cacheKeyWillBeUsedPlugins) {\n        effectiveRequest = await plugin[\"cacheKeyWillBeUsed\" /* CACHE_KEY_WILL_BE_USED */].call(plugin, { mode, request: effectiveRequest });\n        if (typeof effectiveRequest === 'string') {\n            effectiveRequest = new Request(effectiveRequest);\n        }\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isInstance(effectiveRequest, Request, {\n                moduleName: 'Plugin',\n                funcName: \"cacheKeyWillBeUsed\" /* CACHE_KEY_WILL_BE_USED */,\n                isReturnValueProblem: true,\n            });\n        }\n    }\n    return effectiveRequest;\n};\nexport const cacheWrapper = {\n    put: putWrapper,\n    match: matchWrapper,\n};\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { WorkboxError } from './WorkboxError.js';\nimport { logger } from './logger.js';\nimport { assert } from './assert.js';\nimport { getFriendlyURL } from '../_private/getFriendlyURL.js';\nimport { pluginUtils } from '../utils/pluginUtils.js';\nimport '../_version.js';\n/**\n * Wrapper around the fetch API.\n *\n * Will call requestWillFetch on available plugins.\n *\n * @param {Object} options\n * @param {Request|string} options.request\n * @param {Object} [options.fetchOptions]\n * @param {ExtendableEvent} [options.event]\n * @param {Array<Object>} [options.plugins=[]]\n * @return {Promise<Response>}\n *\n * @private\n * @memberof module:workbox-core\n */\nconst wrappedFetch = async ({ request, fetchOptions, event, plugins = [], }) => {\n    if (typeof request === 'string') {\n        request = new Request(request);\n    }\n    // We *should* be able to call `await event.preloadResponse` even if it's\n    // undefined, but for some reason, doing so leads to errors in our Node unit\n    // tests. To work around that, explicitly check preloadResponse's value first.\n    if (event instanceof FetchEvent && event.preloadResponse) {\n        const possiblePreloadResponse = await event.preloadResponse;\n        if (possiblePreloadResponse) {\n            if (process.env.NODE_ENV !== 'production') {\n                logger.log(`Using a preloaded navigation response for ` +\n                    `'${getFriendlyURL(request.url)}'`);\n            }\n            return possiblePreloadResponse;\n        }\n    }\n    if (process.env.NODE_ENV !== 'production') {\n        assert.isInstance(request, Request, {\n            paramName: 'request',\n            expectedClass: Request,\n            moduleName: 'workbox-core',\n            className: 'fetchWrapper',\n            funcName: 'wrappedFetch',\n        });\n    }\n    const failedFetchPlugins = pluginUtils.filter(plugins, \"fetchDidFail\" /* FETCH_DID_FAIL */);\n    // If there is a fetchDidFail plugin, we need to save a clone of the\n    // original request before it's either modified by a requestWillFetch\n    // plugin or before the original request's body is consumed via fetch().\n    const originalRequest = failedFetchPlugins.length > 0 ?\n        request.clone() : null;\n    try {\n        for (let plugin of plugins) {\n            if (\"requestWillFetch\" /* REQUEST_WILL_FETCH */ in plugin) {\n                const pluginMethod = plugin[\"requestWillFetch\" /* REQUEST_WILL_FETCH */];\n                const requestClone = request.clone();\n                request = (await pluginMethod.call(plugin, {\n                    request: requestClone,\n                    event,\n                }));\n                if (process.env.NODE_ENV !== 'production') {\n                    if (request) {\n                        assert.isInstance(request, Request, {\n                            moduleName: 'Plugin',\n                            funcName: \"cachedResponseWillBeUsed\" /* CACHED_RESPONSE_WILL_BE_USED */,\n                            isReturnValueProblem: true,\n                        });\n                    }\n                }\n            }\n        }\n    }\n    catch (err) {\n        throw new WorkboxError('plugin-error-request-will-fetch', {\n            thrownError: err,\n        });\n    }\n    // The request can be altered by plugins with `requestWillFetch` making\n    // the original request (Most likely from a `fetch` event) to be different\n    // to the Request we make. Pass both to `fetchDidFail` to aid debugging.\n    let pluginFilteredRequest = request.clone();\n    try {\n        let fetchResponse;\n        // See https://github.com/GoogleChrome/workbox/issues/1796\n        if (request.mode === 'navigate') {\n            fetchResponse = await fetch(request);\n        }\n        else {\n            fetchResponse = await fetch(request, fetchOptions);\n        }\n        if (process.env.NODE_ENV !== 'production') {\n            logger.debug(`Network request for ` +\n                `'${getFriendlyURL(request.url)}' returned a response with ` +\n                `status '${fetchResponse.status}'.`);\n        }\n        for (const plugin of plugins) {\n            if (\"fetchDidSucceed\" /* FETCH_DID_SUCCEED */ in plugin) {\n                fetchResponse = await plugin[\"fetchDidSucceed\" /* FETCH_DID_SUCCEED */]\n                    .call(plugin, {\n                    event,\n                    request: pluginFilteredRequest,\n                    response: fetchResponse,\n                });\n                if (process.env.NODE_ENV !== 'production') {\n                    if (fetchResponse) {\n                        assert.isInstance(fetchResponse, Response, {\n                            moduleName: 'Plugin',\n                            funcName: \"fetchDidSucceed\" /* FETCH_DID_SUCCEED */,\n                            isReturnValueProblem: true,\n                        });\n                    }\n                }\n            }\n        }\n        return fetchResponse;\n    }\n    catch (error) {\n        if (process.env.NODE_ENV !== 'production') {\n            logger.error(`Network request for ` +\n                `'${getFriendlyURL(request.url)}' threw an error.`, error);\n        }\n        for (const plugin of failedFetchPlugins) {\n            await plugin[\"fetchDidFail\" /* FETCH_DID_FAIL */].call(plugin, {\n                error,\n                event,\n                originalRequest: originalRequest.clone(),\n                request: pluginFilteredRequest.clone(),\n            });\n        }\n        throw error;\n    }\n};\nconst fetchWrapper = {\n    fetch: wrappedFetch,\n};\nexport { fetchWrapper };\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\nlet supportStatus;\n/**\n * A utility function that determines whether the current browser supports\n * constructing a new `Response` from a `response.body` stream.\n *\n * @return {boolean} `true`, if the current browser can successfully\n *     construct a `Response` from a `response.body` stream, `false` otherwise.\n *\n * @private\n */\nfunction canConstructResponseFromBodyStream() {\n    if (supportStatus === undefined) {\n        const testResponse = new Response('');\n        if ('body' in testResponse) {\n            try {\n                new Response(testResponse.body);\n                supportStatus = true;\n            }\n            catch (error) {\n                supportStatus = false;\n            }\n        }\n        supportStatus = false;\n    }\n    return supportStatus;\n}\nexport { canConstructResponseFromBodyStream };\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { canConstructResponseFromBodyStream } from './_private/canConstructResponseFromBodyStream.js';\nimport './_version.js';\n/**\n * Allows developers to copy a response and modify its `headers`, `status`,\n * or `statusText` values (the values settable via a\n * [`ResponseInit`]{@link https://developer.mozilla.org/en-US/docs/Web/API/Response/Response#Syntax}\n * object in the constructor).\n * To modify these values, pass a function as the second argument. That\n * function will be invoked with a single object with the response properties\n * `{headers, status, statusText}`. The return value of this function will\n * be used as the `ResponseInit` for the new `Response`. To change the values\n * either modify the passed parameter(s) and return it, or return a totally\n * new object.\n *\n * @param {Response} response\n * @param {Function} modifier\n * @memberof module:workbox-core\n */\nasync function copyResponse(response, modifier) {\n    const clonedResponse = response.clone();\n    // Create a fresh `ResponseInit` object by cloning the headers.\n    const responseInit = {\n        headers: new Headers(clonedResponse.headers),\n        status: clonedResponse.status,\n        statusText: clonedResponse.statusText,\n    };\n    // Apply any user modifications.\n    const modifiedResponseInit = modifier ? modifier(responseInit) : responseInit;\n    // Create the new response from the body stream and `ResponseInit`\n    // modifications. Note: not all browsers support the Response.body stream,\n    // so fall back to reading the entire body into memory as a blob.\n    const body = canConstructResponseFromBodyStream() ?\n        clonedResponse.body : await clonedResponse.blob();\n    return new Response(body, modifiedResponseInit);\n}\n;\nexport { copyResponse };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { WorkboxError } from 'workbox-core/_private/WorkboxError.js';\nimport '../_version.js';\n// Name of the search parameter used to store revision info.\nconst REVISION_SEARCH_PARAM = '__WB_REVISION__';\n/**\n * Converts a manifest entry into a versioned URL suitable for precaching.\n *\n * @param {Object|string} entry\n * @return {string} A URL with versioning info.\n *\n * @private\n * @memberof module:workbox-precaching\n */\nexport function createCacheKey(entry) {\n    if (!entry) {\n        throw new WorkboxError('add-to-cache-list-unexpected-type', { entry });\n    }\n    // If a precache manifest entry is a string, it's assumed to be a versioned\n    // URL, like '/app.abcd1234.js'. Return as-is.\n    if (typeof entry === 'string') {\n        const urlObject = new URL(entry, location.href);\n        return {\n            cacheKey: urlObject.href,\n            url: urlObject.href,\n        };\n    }\n    const { revision, url } = entry;\n    if (!url) {\n        throw new WorkboxError('add-to-cache-list-unexpected-type', { entry });\n    }\n    // If there's just a URL and no revision, then it's also assumed to be a\n    // versioned URL.\n    if (!revision) {\n        const urlObject = new URL(url, location.href);\n        return {\n            cacheKey: urlObject.href,\n            url: urlObject.href,\n        };\n    }\n    // Otherwise, construct a properly versioned URL using the custom Workbox\n    // search parameter along with the revision info.\n    const cacheKeyURL = new URL(url, location.href);\n    const originalURL = new URL(url, location.href);\n    cacheKeyURL.searchParams.set(REVISION_SEARCH_PARAM, revision);\n    return {\n        cacheKey: cacheKeyURL.href,\n        url: originalURL.href,\n    };\n}\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { logger } from 'workbox-core/_private/logger.js';\nimport '../_version.js';\n/**\n * @param {string} groupTitle\n * @param {Array<string>} deletedURLs\n *\n * @private\n */\nconst logGroup = (groupTitle, deletedURLs) => {\n    logger.groupCollapsed(groupTitle);\n    for (const url of deletedURLs) {\n        logger.log(url);\n    }\n    logger.groupEnd();\n};\n/**\n * @param {Array<string>} deletedURLs\n *\n * @private\n * @memberof module:workbox-precaching\n */\nexport function printCleanupDetails(deletedURLs) {\n    const deletionCount = deletedURLs.length;\n    if (deletionCount > 0) {\n        logger.groupCollapsed(`During precaching cleanup, ` +\n            `${deletionCount} cached ` +\n            `request${deletionCount === 1 ? ' was' : 's were'} deleted.`);\n        logGroup('Deleted Cache Requests', deletedURLs);\n        logger.groupEnd();\n    }\n}\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { logger } from 'workbox-core/_private/logger.js';\nimport '../_version.js';\n/**\n * @param {string} groupTitle\n * @param {Array<string>} urls\n *\n * @private\n */\nfunction _nestedGroup(groupTitle, urls) {\n    if (urls.length === 0) {\n        return;\n    }\n    logger.groupCollapsed(groupTitle);\n    for (const url of urls) {\n        logger.log(url);\n    }\n    logger.groupEnd();\n}\n/**\n * @param {Array<string>} urlsToPrecache\n * @param {Array<string>} urlsAlreadyPrecached\n *\n * @private\n * @memberof module:workbox-precaching\n */\nexport function printInstallDetails(urlsToPrecache, urlsAlreadyPrecached) {\n    const precachedCount = urlsToPrecache.length;\n    const alreadyPrecachedCount = urlsAlreadyPrecached.length;\n    if (precachedCount || alreadyPrecachedCount) {\n        let message = `Precaching ${precachedCount} file${precachedCount === 1 ? '' : 's'}.`;\n        if (alreadyPrecachedCount > 0) {\n            message += ` ${alreadyPrecachedCount} ` +\n                `file${alreadyPrecachedCount === 1 ? ' is' : 's are'} already cached.`;\n        }\n        logger.groupCollapsed(message);\n        _nestedGroup(`View newly precached URLs.`, urlsToPrecache);\n        _nestedGroup(`View previously precached URLs.`, urlsAlreadyPrecached);\n        logger.groupEnd();\n    }\n}\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from 'workbox-core/_private/assert.js';\nimport { cacheNames } from 'workbox-core/_private/cacheNames.js';\nimport { cacheWrapper } from 'workbox-core/_private/cacheWrapper.js';\nimport { fetchWrapper } from 'workbox-core/_private/fetchWrapper.js';\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { WorkboxError } from 'workbox-core/_private/WorkboxError.js';\nimport { copyResponse } from 'workbox-core/copyResponse.js';\nimport { createCacheKey } from './utils/createCacheKey.js';\nimport { printCleanupDetails } from './utils/printCleanupDetails.js';\nimport { printInstallDetails } from './utils/printInstallDetails.js';\nimport './_version.js';\n/**\n * Performs efficient precaching of assets.\n *\n * @memberof module:workbox-precaching\n */\nclass PrecacheController {\n    /**\n     * Create a new PrecacheController.\n     *\n     * @param {string} [cacheName] An optional name for the cache, to override\n     * the default precache name.\n     */\n    constructor(cacheName) {\n        this._cacheName = cacheNames.getPrecacheName(cacheName);\n        this._urlsToCacheKeys = new Map();\n        this._urlsToCacheModes = new Map();\n        this._cacheKeysToIntegrities = new Map();\n    }\n    /**\n     * This method will add items to the precache list, removing duplicates\n     * and ensuring the information is valid.\n     *\n     * @param {\n     * Array<module:workbox-precaching.PrecacheController.PrecacheEntry|string>\n     * } entries Array of entries to precache.\n     */\n    addToCacheList(entries) {\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isArray(entries, {\n                moduleName: 'workbox-precaching',\n                className: 'PrecacheController',\n                funcName: 'addToCacheList',\n                paramName: 'entries',\n            });\n        }\n        const urlsToWarnAbout = [];\n        for (const entry of entries) {\n            // See https://github.com/GoogleChrome/workbox/issues/2259\n            if (typeof entry === 'string') {\n                urlsToWarnAbout.push(entry);\n            }\n            else if (entry && entry.revision === undefined) {\n                urlsToWarnAbout.push(entry.url);\n            }\n            const { cacheKey, url } = createCacheKey(entry);\n            const cacheMode = (typeof entry !== 'string' && entry.revision) ?\n                'reload' : 'default';\n            if (this._urlsToCacheKeys.has(url) &&\n                this._urlsToCacheKeys.get(url) !== cacheKey) {\n                throw new WorkboxError('add-to-cache-list-conflicting-entries', {\n                    firstEntry: this._urlsToCacheKeys.get(url),\n                    secondEntry: cacheKey,\n                });\n            }\n            if (typeof entry !== 'string' && entry.integrity) {\n                if (this._cacheKeysToIntegrities.has(cacheKey) &&\n                    this._cacheKeysToIntegrities.get(cacheKey) !== entry.integrity) {\n                    throw new WorkboxError('add-to-cache-list-conflicting-integrities', {\n                        url,\n                    });\n                }\n                this._cacheKeysToIntegrities.set(cacheKey, entry.integrity);\n            }\n            this._urlsToCacheKeys.set(url, cacheKey);\n            this._urlsToCacheModes.set(url, cacheMode);\n            if (urlsToWarnAbout.length > 0) {\n                const warningMessage = `Workbox is precaching URLs without revision ` +\n                    `info: ${urlsToWarnAbout.join(', ')}\\nThis is generally NOT safe. ` +\n                    `Learn more at https://bit.ly/wb-precache`;\n                if (process.env.NODE_ENV === 'production') {\n                    // Use console directly to display this warning without bloating\n                    // bundle sizes by pulling in all of the logger codebase in prod.\n                    console.warn(warningMessage);\n                }\n                else {\n                    logger.warn(warningMessage);\n                }\n            }\n        }\n    }\n    /**\n     * Precaches new and updated assets. Call this method from the service worker\n     * install event.\n     *\n     * @param {Object} options\n     * @param {Event} [options.event] The install event (if needed).\n     * @param {Array<Object>} [options.plugins] Plugins to be used for fetching\n     * and caching during install.\n     * @return {Promise<module:workbox-precaching.InstallResult>}\n     */\n    async install({ event, plugins } = {}) {\n        if (process.env.NODE_ENV !== 'production') {\n            if (plugins) {\n                assert.isArray(plugins, {\n                    moduleName: 'workbox-precaching',\n                    className: 'PrecacheController',\n                    funcName: 'install',\n                    paramName: 'plugins',\n                });\n            }\n        }\n        const toBePrecached = [];\n        const alreadyPrecached = [];\n        const cache = await self.caches.open(this._cacheName);\n        const alreadyCachedRequests = await cache.keys();\n        const existingCacheKeys = new Set(alreadyCachedRequests.map((request) => request.url));\n        for (const [url, cacheKey] of this._urlsToCacheKeys) {\n            if (existingCacheKeys.has(cacheKey)) {\n                alreadyPrecached.push(url);\n            }\n            else {\n                toBePrecached.push({ cacheKey, url });\n            }\n        }\n        const precacheRequests = toBePrecached.map(({ cacheKey, url }) => {\n            const integrity = this._cacheKeysToIntegrities.get(cacheKey);\n            const cacheMode = this._urlsToCacheModes.get(url);\n            return this._addURLToCache({\n                cacheKey,\n                cacheMode,\n                event,\n                integrity,\n                plugins,\n                url,\n            });\n        });\n        await Promise.all(precacheRequests);\n        const updatedURLs = toBePrecached.map((item) => item.url);\n        if (process.env.NODE_ENV !== 'production') {\n            printInstallDetails(updatedURLs, alreadyPrecached);\n        }\n        return {\n            updatedURLs,\n            notUpdatedURLs: alreadyPrecached,\n        };\n    }\n    /**\n     * Deletes assets that are no longer present in the current precache manifest.\n     * Call this method from the service worker activate event.\n     *\n     * @return {Promise<module:workbox-precaching.CleanupResult>}\n     */\n    async activate() {\n        const cache = await self.caches.open(this._cacheName);\n        const currentlyCachedRequests = await cache.keys();\n        const expectedCacheKeys = new Set(this._urlsToCacheKeys.values());\n        const deletedURLs = [];\n        for (const request of currentlyCachedRequests) {\n            if (!expectedCacheKeys.has(request.url)) {\n                await cache.delete(request);\n                deletedURLs.push(request.url);\n            }\n        }\n        if (process.env.NODE_ENV !== 'production') {\n            printCleanupDetails(deletedURLs);\n        }\n        return { deletedURLs };\n    }\n    /**\n     * Requests the entry and saves it to the cache if the response is valid.\n     * By default, any response with a status code of less than 400 (including\n     * opaque responses) is considered valid.\n     *\n     * If you need to use custom criteria to determine what's valid and what\n     * isn't, then pass in an item in `options.plugins` that implements the\n     * `cacheWillUpdate()` lifecycle event.\n     *\n     * @private\n     * @param {Object} options\n     * @param {string} options.cacheKey The string to use a cache key.\n     * @param {string} options.url The URL to fetch and cache.\n     * @param {string} [options.cacheMode] The cache mode for the network request.\n     * @param {Event} [options.event] The install event (if passed).\n     * @param {Array<Object>} [options.plugins] An array of plugins to apply to\n     * fetch and caching.\n     * @param {string} [options.integrity] The value to use for the `integrity`\n     * field when making the request.\n     */\n    async _addURLToCache({ cacheKey, url, cacheMode, event, plugins, integrity }) {\n        const request = new Request(url, {\n            integrity,\n            cache: cacheMode,\n            credentials: 'same-origin',\n        });\n        let response = await fetchWrapper.fetch({\n            event,\n            plugins,\n            request,\n        });\n        // Allow developers to override the default logic about what is and isn't\n        // valid by passing in a plugin implementing cacheWillUpdate(), e.g.\n        // a `CacheableResponsePlugin` instance.\n        let cacheWillUpdatePlugin;\n        for (const plugin of (plugins || [])) {\n            if ('cacheWillUpdate' in plugin) {\n                cacheWillUpdatePlugin = plugin;\n            }\n        }\n        const isValidResponse = cacheWillUpdatePlugin ?\n            // Use a callback if provided. It returns a truthy value if valid.\n            // NOTE: invoke the method on the plugin instance so the `this` context\n            // is correct.\n            await cacheWillUpdatePlugin.cacheWillUpdate({ event, request, response }) :\n            // Otherwise, default to considering any response status under 400 valid.\n            // This includes, by default, considering opaque responses valid.\n            response.status < 400;\n        // Consider this a failure, leading to the `install` handler failing, if\n        // we get back an invalid response.\n        if (!isValidResponse) {\n            throw new WorkboxError('bad-precaching-response', {\n                url,\n                status: response.status,\n            });\n        }\n        // Redirected responses cannot be used to satisfy a navigation request, so\n        // any redirected response must be \"copied\" rather than cloned, so the new\n        // response doesn't contain the `redirected` flag. See:\n        // https://bugs.chromium.org/p/chromium/issues/detail?id=669363&desc=2#c1\n        if (response.redirected) {\n            response = await copyResponse(response);\n        }\n        await cacheWrapper.put({\n            event,\n            plugins,\n            response,\n            // `request` already uses `url`. We may be able to reuse it.\n            request: cacheKey === url ? request : new Request(cacheKey),\n            cacheName: this._cacheName,\n            matchOptions: {\n                ignoreSearch: true,\n            },\n        });\n    }\n    /**\n     * Returns a mapping of a precached URL to the corresponding cache key, taking\n     * into account the revision information for the URL.\n     *\n     * @return {Map<string, string>} A URL to cache key mapping.\n     */\n    getURLsToCacheKeys() {\n        return this._urlsToCacheKeys;\n    }\n    /**\n     * Returns a list of all the URLs that have been precached by the current\n     * service worker.\n     *\n     * @return {Array<string>} The precached URLs.\n     */\n    getCachedURLs() {\n        return [...this._urlsToCacheKeys.keys()];\n    }\n    /**\n     * Returns the cache key used for storing a given URL. If that URL is\n     * unversioned, like `/index.html', then the cache key will be the original\n     * URL with a search parameter appended to it.\n     *\n     * @param {string} url A URL whose cache key you want to look up.\n     * @return {string} The versioned URL that corresponds to a cache key\n     * for the original URL, or undefined if that URL isn't precached.\n     */\n    getCacheKeyForURL(url) {\n        const urlObject = new URL(url, location.href);\n        return this._urlsToCacheKeys.get(urlObject.href);\n    }\n    /**\n     * This acts as a drop-in replacement for [`cache.match()`](https://developer.mozilla.org/en-US/docs/Web/API/Cache/match)\n     * with the following differences:\n     *\n     * - It knows what the name of the precache is, and only checks in that cache.\n     * - It allows you to pass in an \"original\" URL without versioning parameters,\n     * and it will automatically look up the correct cache key for the currently\n     * active revision of that URL.\n     *\n     * E.g., `matchPrecache('index.html')` will find the correct precached\n     * response for the currently active service worker, even if the actual cache\n     * key is `'/index.html?__WB_REVISION__=1234abcd'`.\n     *\n     * @param {string|Request} request The key (without revisioning parameters)\n     * to look up in the precache.\n     * @return {Promise<Response|undefined>}\n     */\n    async matchPrecache(request) {\n        const url = request instanceof Request ? request.url : request;\n        const cacheKey = this.getCacheKeyForURL(url);\n        if (cacheKey) {\n            const cache = await self.caches.open(this._cacheName);\n            return cache.match(cacheKey);\n        }\n        return undefined;\n    }\n    /**\n     * Returns a function that can be used within a\n     * {@link module:workbox-routing.Route} that will find a response for the\n     * incoming request against the precache.\n     *\n     * If for an unexpected reason there is a cache miss for the request,\n     * this will fall back to retrieving the `Response` via `fetch()` when\n     * `fallbackToNetwork` is `true`.\n     *\n     * @param {boolean} [fallbackToNetwork=true] Whether to attempt to get the\n     * response from the network if there's a precache miss.\n     * @return {module:workbox-routing~handlerCallback}\n     */\n    createHandler(fallbackToNetwork = true) {\n        return async ({ request }) => {\n            try {\n                const response = await this.matchPrecache(request);\n                if (response) {\n                    return response;\n                }\n                // This shouldn't normally happen, but there are edge cases:\n                // https://github.com/GoogleChrome/workbox/issues/1441\n                throw new WorkboxError('missing-precache-entry', {\n                    cacheName: this._cacheName,\n                    url: request instanceof Request ? request.url : request,\n                });\n            }\n            catch (error) {\n                if (fallbackToNetwork) {\n                    if (process.env.NODE_ENV !== 'production') {\n                        logger.debug(`Unable to respond with precached response. ` +\n                            `Falling back to network.`, error);\n                    }\n                    return fetch(request);\n                }\n                throw error;\n            }\n        };\n    }\n    /**\n     * Returns a function that looks up `url` in the precache (taking into\n     * account revision information), and returns the corresponding `Response`.\n     *\n     * If for an unexpected reason there is a cache miss when looking up `url`,\n     * this will fall back to retrieving the `Response` via `fetch()` when\n     * `fallbackToNetwork` is `true`.\n     *\n     * @param {string} url The precached URL which will be used to lookup the\n     * `Response`.\n     * @param {boolean} [fallbackToNetwork=true] Whether to attempt to get the\n     * response from the network if there's a precache miss.\n     * @return {module:workbox-routing~handlerCallback}\n     */\n    createHandlerBoundToURL(url, fallbackToNetwork = true) {\n        const cacheKey = this.getCacheKeyForURL(url);\n        if (!cacheKey) {\n            throw new WorkboxError('non-precached-url', { url });\n        }\n        const handler = this.createHandler(fallbackToNetwork);\n        const request = new Request(url);\n        return () => handler({ request });\n    }\n}\nexport { PrecacheController };\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { PrecacheController } from '../PrecacheController.js';\nimport '../_version.js';\nlet precacheController;\n/**\n * @return {PrecacheController}\n * @private\n */\nexport const getOrCreatePrecacheController = () => {\n    if (!precacheController) {\n        precacheController = new PrecacheController();\n    }\n    return precacheController;\n};\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\n/**\n * Removes any URL search parameters that should be ignored.\n *\n * @param {URL} urlObject The original URL.\n * @param {Array<RegExp>} ignoreURLParametersMatching RegExps to test against\n * each search parameter name. Matches mean that the search parameter should be\n * ignored.\n * @return {URL} The URL with any ignored search parameters removed.\n *\n * @private\n * @memberof module:workbox-precaching\n */\nexport function removeIgnoredSearchParams(urlObject, ignoreURLParametersMatching = []) {\n    // Convert the iterable into an array at the start of the loop to make sure\n    // deletion doesn't mess up iteration.\n    for (const paramName of [...urlObject.searchParams.keys()]) {\n        if (ignoreURLParametersMatching.some((regExp) => regExp.test(paramName))) {\n            urlObject.searchParams.delete(paramName);\n        }\n    }\n    return urlObject;\n}\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { removeIgnoredSearchParams } from './removeIgnoredSearchParams.js';\nimport '../_version.js';\n/**\n * Generator function that yields possible variations on the original URL to\n * check, one at a time.\n *\n * @param {string} url\n * @param {Object} options\n *\n * @private\n * @memberof module:workbox-precaching\n */\nexport function* generateURLVariations(url, { ignoreURLParametersMatching, directoryIndex, cleanURLs, urlManipulation, } = {}) {\n    const urlObject = new URL(url, location.href);\n    urlObject.hash = '';\n    yield urlObject.href;\n    const urlWithoutIgnoredParams = removeIgnoredSearchParams(urlObject, ignoreURLParametersMatching);\n    yield urlWithoutIgnoredParams.href;\n    if (directoryIndex && urlWithoutIgnoredParams.pathname.endsWith('/')) {\n        const directoryURL = new URL(urlWithoutIgnoredParams.href);\n        directoryURL.pathname += directoryIndex;\n        yield directoryURL.href;\n    }\n    if (cleanURLs) {\n        const cleanURL = new URL(urlWithoutIgnoredParams.href);\n        cleanURL.pathname += '.html';\n        yield cleanURL.href;\n    }\n    if (urlManipulation) {\n        const additionalURLs = urlManipulation({ url: urlObject });\n        for (const urlToAttempt of additionalURLs) {\n            yield urlToAttempt.href;\n        }\n    }\n}\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { getOrCreatePrecacheController } from './getOrCreatePrecacheController.js';\nimport { generateURLVariations } from './generateURLVariations.js';\nimport '../_version.js';\n/**\n * This function will take the request URL and manipulate it based on the\n * configuration options.\n *\n * @param {string} url\n * @param {Object} options\n * @return {string} Returns the URL in the cache that matches the request,\n * if possible.\n *\n * @private\n */\nexport const getCacheKeyForURL = (url, options) => {\n    const precacheController = getOrCreatePrecacheController();\n    const urlsToCacheKeys = precacheController.getURLsToCacheKeys();\n    for (const possibleURL of generateURLVariations(url, options)) {\n        const possibleCacheKey = urlsToCacheKeys.get(possibleURL);\n        if (possibleCacheKey) {\n            return possibleCacheKey;\n        }\n    }\n};\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { cacheNames } from 'workbox-core/_private/cacheNames.js';\nimport { getFriendlyURL } from 'workbox-core/_private/getFriendlyURL.js';\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { getCacheKeyForURL } from './getCacheKeyForURL.js';\nimport '../_version.js';\n/**\n * Adds a `fetch` listener to the service worker that will\n * respond to\n * [network requests]{@link https://developer.mozilla.org/en-US/docs/Web/API/Service_Worker_API/Using_Service_Workers#Custom_responses_to_requests}\n * with precached assets.\n *\n * Requests for assets that aren't precached, the `FetchEvent` will not be\n * responded to, allowing the event to fall through to other `fetch` event\n * listeners.\n *\n * NOTE: when called more than once this method will replace the previously set\n * configuration options. Calling it more than once is not recommended outside\n * of tests.\n *\n * @private\n * @param {Object} [options]\n * @param {string} [options.directoryIndex=index.html] The `directoryIndex` will\n * check cache entries for a URLs ending with '/' to see if there is a hit when\n * appending the `directoryIndex` value.\n * @param {Array<RegExp>} [options.ignoreURLParametersMatching=[/^utm_/]] An\n * array of regex's to remove search params when looking for a cache match.\n * @param {boolean} [options.cleanURLs=true] The `cleanURLs` option will\n * check the cache for the URL with a `.html` added to the end of the end.\n * @param {workbox.precaching~urlManipulation} [options.urlManipulation]\n * This is a function that should take a URL and return an array of\n * alternative URLs that should be checked for precache matches.\n */\nexport const addFetchListener = ({ ignoreURLParametersMatching = [/^utm_/], directoryIndex = 'index.html', cleanURLs = true, urlManipulation, } = {}) => {\n    const cacheName = cacheNames.getPrecacheName();\n    // See https://github.com/Microsoft/TypeScript/issues/28357#issuecomment-436484705\n    self.addEventListener('fetch', ((event) => {\n        const precachedURL = getCacheKeyForURL(event.request.url, {\n            cleanURLs,\n            directoryIndex,\n            ignoreURLParametersMatching,\n            urlManipulation,\n        });\n        if (!precachedURL) {\n            if (process.env.NODE_ENV !== 'production') {\n                logger.debug(`Precaching did not find a match for ` +\n                    getFriendlyURL(event.request.url));\n            }\n            return;\n        }\n        let responsePromise = self.caches.open(cacheName).then((cache) => {\n            return cache.match(precachedURL);\n        }).then((cachedResponse) => {\n            if (cachedResponse) {\n                return cachedResponse;\n            }\n            // Fall back to the network if we don't have a cached response\n            // (perhaps due to manual cache cleanup).\n            if (process.env.NODE_ENV !== 'production') {\n                logger.warn(`The precached response for ` +\n                    `${getFriendlyURL(precachedURL)} in ${cacheName} was not found. ` +\n                    `Falling back to the network instead.`);\n            }\n            return fetch(precachedURL);\n        });\n        if (process.env.NODE_ENV !== 'production') {\n            responsePromise = responsePromise.then((response) => {\n                // Workbox is going to handle the route.\n                // print the routing details to the console.\n                logger.groupCollapsed(`Precaching is responding to: ` +\n                    getFriendlyURL(event.request.url));\n                logger.log(`Serving the precached url: ${precachedURL}`);\n                logger.groupCollapsed(`View request details here.`);\n                logger.log(event.request);\n                logger.groupEnd();\n                logger.groupCollapsed(`View response details here.`);\n                logger.log(response);\n                logger.groupEnd();\n                logger.groupEnd();\n                return response;\n            });\n        }\n        event.respondWith(responsePromise);\n    }));\n};\n","/*\n  Copyright 2019 Google LLC\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { addFetchListener } from './utils/addFetchListener.js';\nimport './_version.js';\nlet listenerAdded = false;\n/**\n * Add a `fetch` listener to the service worker that will\n * respond to\n * [network requests]{@link https://developer.mozilla.org/en-US/docs/Web/API/Service_Worker_API/Using_Service_Workers#Custom_responses_to_requests}\n * with precached assets.\n *\n * Requests for assets that aren't precached, the `FetchEvent` will not be\n * responded to, allowing the event to fall through to other `fetch` event\n * listeners.\n *\n * @param {Object} [options]\n * @param {string} [options.directoryIndex=index.html] The `directoryIndex` will\n * check cache entries for a URLs ending with '/' to see if there is a hit when\n * appending the `directoryIndex` value.\n * @param {Array<RegExp>} [options.ignoreURLParametersMatching=[/^utm_/]] An\n * array of regex's to remove search params when looking for a cache match.\n * @param {boolean} [options.cleanURLs=true] The `cleanURLs` option will\n * check the cache for the URL with a `.html` added to the end of the end.\n * @param {module:workbox-precaching~urlManipulation} [options.urlManipulation]\n * This is a function that should take a URL and return an array of\n * alternative URLs that should be checked for precache matches.\n *\n * @memberof module:workbox-precaching\n */\nfunction addRoute(options) {\n    if (!listenerAdded) {\n        addFetchListener(options);\n        listenerAdded = true;\n    }\n}\n;\nexport { addRoute };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\nconst SUBSTRING_TO_FIND = '-precache-';\n/**\n * Cleans up incompatible precaches that were created by older versions of\n * Workbox, by a service worker registered under the current scope.\n *\n * This is meant to be called as part of the `activate` event.\n *\n * This should be safe to use as long as you don't include `substringToFind`\n * (defaulting to `-precache-`) in your non-precache cache names.\n *\n * @param {string} currentPrecacheName The cache name currently in use for\n * precaching. This cache won't be deleted.\n * @param {string} [substringToFind='-precache-'] Cache names which include this\n * substring will be deleted (excluding `currentPrecacheName`).\n * @return {Array<string>} A list of all the cache names that were deleted.\n *\n * @private\n * @memberof module:workbox-precaching\n */\nconst deleteOutdatedCaches = async (currentPrecacheName, substringToFind = SUBSTRING_TO_FIND) => {\n    const cacheNames = await self.caches.keys();\n    const cacheNamesToDelete = cacheNames.filter((cacheName) => {\n        return cacheName.includes(substringToFind) &&\n            cacheName.includes(self.registration.scope) &&\n            cacheName !== currentPrecacheName;\n    });\n    await Promise.all(cacheNamesToDelete.map((cacheName) => self.caches.delete(cacheName)));\n    return cacheNamesToDelete;\n};\nexport { deleteOutdatedCaches };\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { cacheNames } from 'workbox-core/_private/cacheNames.js';\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { deleteOutdatedCaches } from './utils/deleteOutdatedCaches.js';\nimport './_version.js';\n/**\n * Adds an `activate` event listener which will clean up incompatible\n * precaches that were created by older versions of Workbox.\n *\n * @memberof module:workbox-precaching\n */\nfunction cleanupOutdatedCaches() {\n    // See https://github.com/Microsoft/TypeScript/issues/28357#issuecomment-436484705\n    self.addEventListener('activate', ((event) => {\n        const cacheName = cacheNames.getPrecacheName();\n        event.waitUntil(deleteOutdatedCaches(cacheName).then((cachesDeleted) => {\n            if (process.env.NODE_ENV !== 'production') {\n                if (cachesDeleted.length > 0) {\n                    logger.log(`The following out-of-date precaches were cleaned up ` +\n                        `automatically:`, cachesDeleted);\n                }\n            }\n        }));\n    }));\n}\n;\nexport { cleanupOutdatedCaches };\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { getOrCreatePrecacheController } from './utils/getOrCreatePrecacheController.js';\nimport './_version.js';\n/**\n * Helper function that calls\n * {@link PrecacheController#createHandler} on the default\n * {@link PrecacheController} instance.\n *\n * If you are creating your own {@link PrecacheController}, then call the\n * {@link PrecacheController#createHandler} on that instance,\n * instead of using this function.\n *\n * @param {boolean} [fallbackToNetwork=true] Whether to attempt to get the\n * response from the network if there's a precache miss.\n * @return {module:workbox-routing~handlerCallback}\n *\n * @memberof module:workbox-precaching\n */\nfunction createHandler(fallbackToNetwork = true) {\n    const precacheController = getOrCreatePrecacheController();\n    return precacheController.createHandler(fallbackToNetwork);\n}\n;\nexport { createHandler };\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { getOrCreatePrecacheController } from './utils/getOrCreatePrecacheController.js';\nimport './_version.js';\n/**\n * Helper function that calls\n * {@link PrecacheController#createHandlerBoundToURL} on the default\n * {@link PrecacheController} instance.\n *\n * If you are creating your own {@link PrecacheController}, then call the\n * {@link PrecacheController#createHandlerBoundToURL} on that instance,\n * instead of using this function.\n *\n * @param {string} url The precached URL which will be used to lookup the\n * `Response`.\n * @param {boolean} [fallbackToNetwork=true] Whether to attempt to get the\n * response from the network if there's a precache miss.\n * @return {module:workbox-routing~handlerCallback}\n *\n * @memberof module:workbox-precaching\n */\nfunction createHandlerBoundToURL(url) {\n    const precacheController = getOrCreatePrecacheController();\n    return precacheController.createHandlerBoundToURL(url);\n}\n;\nexport { createHandlerBoundToURL };\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { getOrCreatePrecacheController } from './utils/getOrCreatePrecacheController.js';\nimport './_version.js';\n/**\n * Takes in a URL, and returns the corresponding URL that could be used to\n * lookup the entry in the precache.\n *\n * If a relative URL is provided, the location of the service worker file will\n * be used as the base.\n *\n * For precached entries without revision information, the cache key will be the\n * same as the original URL.\n *\n * For precached entries with revision information, the cache key will be the\n * original URL with the addition of a query parameter used for keeping track of\n * the revision info.\n *\n * @param {string} url The URL whose cache key to look up.\n * @return {string} The cache key that corresponds to that URL.\n *\n * @memberof module:workbox-precaching\n */\nfunction getCacheKeyForURL(url) {\n    const precacheController = getOrCreatePrecacheController();\n    return precacheController.getCacheKeyForURL(url);\n}\n;\nexport { getCacheKeyForURL };\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { getOrCreatePrecacheController } from './utils/getOrCreatePrecacheController.js';\nimport './_version.js';\n/**\n * Helper function that calls\n * {@link PrecacheController#matchPrecache} on the default\n * {@link PrecacheController} instance.\n *\n * If you are creating your own {@link PrecacheController}, then call\n * {@link PrecacheController#matchPrecache} on that instance,\n * instead of using this function.\n *\n * @param {string|Request} request The key (without revisioning parameters)\n * to look up in the precache.\n * @return {Promise<Response|undefined>}\n *\n * @memberof module:workbox-precaching\n */\nfunction matchPrecache(request) {\n    const precacheController = getOrCreatePrecacheController();\n    return precacheController.matchPrecache(request);\n}\n;\nexport { matchPrecache };\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { getOrCreatePrecacheController } from './utils/getOrCreatePrecacheController.js';\nimport { precachePlugins } from './utils/precachePlugins.js';\nimport './_version.js';\nconst installListener = (event) => {\n    const precacheController = getOrCreatePrecacheController();\n    const plugins = precachePlugins.get();\n    event.waitUntil(precacheController.install({ event, plugins })\n        .catch((error) => {\n        if (process.env.NODE_ENV !== 'production') {\n            logger.error(`Service worker installation failed. It will ` +\n                `be retried automatically during the next navigation.`);\n        }\n        // Re-throw the error to ensure installation fails.\n        throw error;\n    }));\n};\nconst activateListener = (event) => {\n    const precacheController = getOrCreatePrecacheController();\n    event.waitUntil(precacheController.activate());\n};\n/**\n * Adds items to the precache list, removing any duplicates and\n * stores the files in the\n * [\"precache cache\"]{@link module:workbox-core.cacheNames} when the service\n * worker installs.\n *\n * This method can be called multiple times.\n *\n * Please note: This method **will not** serve any of the cached files for you.\n * It only precaches files. To respond to a network request you call\n * [addRoute()]{@link module:workbox-precaching.addRoute}.\n *\n * If you have a single array of files to precache, you can just call\n * [precacheAndRoute()]{@link module:workbox-precaching.precacheAndRoute}.\n *\n * @param {Array<Object|string>} [entries=[]] Array of entries to precache.\n *\n * @memberof module:workbox-precaching\n */\nfunction precache(entries) {\n    const precacheController = getOrCreatePrecacheController();\n    precacheController.addToCacheList(entries);\n    if (entries.length > 0) {\n        // NOTE: these listeners will only be added once (even if the `precache()`\n        // method is called multiple times) because event listeners are implemented\n        // as a set, where each listener must be unique.\n        // See https://github.com/Microsoft/TypeScript/issues/28357#issuecomment-436484705\n        self.addEventListener('install', installListener);\n        self.addEventListener('activate', activateListener);\n    }\n}\n;\nexport { precache };\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { addRoute } from './addRoute.js';\nimport { precache } from './precache.js';\nimport './_version.js';\n/**\n * This method will add entries to the precache list and add a route to\n * respond to fetch events.\n *\n * This is a convenience method that will call\n * [precache()]{@link module:workbox-precaching.precache} and\n * [addRoute()]{@link module:workbox-precaching.addRoute} in a single call.\n *\n * @param {Array<Object|string>} entries Array of entries to precache.\n * @param {Object} [options] See\n * [addRoute() options]{@link module:workbox-precaching.addRoute}.\n *\n * @memberof module:workbox-precaching\n */\nfunction precacheAndRoute(entries, options) {\n    precache(entries);\n    addRoute(options);\n}\n;\nexport { precacheAndRoute };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from 'workbox-core/_private/assert.js';\nimport { addPlugins } from './addPlugins.js';\nimport { addRoute } from './addRoute.js';\nimport { cleanupOutdatedCaches } from './cleanupOutdatedCaches.js';\nimport { createHandler } from './createHandler.js';\nimport { createHandlerBoundToURL } from './createHandlerBoundToURL.js';\nimport { getCacheKeyForURL } from './getCacheKeyForURL.js';\nimport { matchPrecache } from './matchPrecache.js';\nimport { precache } from './precache.js';\nimport { precacheAndRoute } from './precacheAndRoute.js';\nimport { PrecacheController } from './PrecacheController.js';\nimport './_version.js';\nif (process.env.NODE_ENV !== 'production') {\n    assert.isSWEnv('workbox-precaching');\n}\n/**\n * Most consumers of this module will want to use the\n * [precacheAndRoute()]{@link module:workbox-precaching.precacheAndRoute}\n * method to add assets to the Cache and respond to network requests with these\n * cached assets.\n *\n * If you require finer grained control, you can use the\n * [PrecacheController]{@link module:workbox-precaching.PrecacheController}\n * to determine when performed.\n *\n * @module workbox-precaching\n */\nexport { addPlugins, addRoute, cleanupOutdatedCaches, createHandler, createHandlerBoundToURL, getCacheKeyForURL, matchPrecache, precache, precacheAndRoute, PrecacheController, };\n","export * from './index.js';","\"use strict\";\n// @ts-ignore\ntry {\n    self['workbox:routing:5.0.0'] && _();\n}\ncatch (e) { }\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\n/**\n * The default HTTP method, 'GET', used when there's no specific method\n * configured for a route.\n *\n * @type {string}\n *\n * @private\n */\nexport const defaultMethod = 'GET';\n/**\n * The list of valid HTTP methods associated with requests that could be routed.\n *\n * @type {Array<string>}\n *\n * @private\n */\nexport const validMethods = [\n    'DELETE',\n    'GET',\n    'HEAD',\n    'PATCH',\n    'POST',\n    'PUT',\n];\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from 'workbox-core/_private/assert.js';\nimport '../_version.js';\n/**\n * @param {function()|Object} handler Either a function, or an object with a\n * 'handle' method.\n * @return {Object} An object with a handle method.\n *\n * @private\n */\nexport const normalizeHandler = (handler) => {\n    if (handler && typeof handler === 'object') {\n        if (process.env.NODE_ENV !== 'production') {\n            assert.hasMethod(handler, 'handle', {\n                moduleName: 'workbox-routing',\n                className: 'Route',\n                funcName: 'constructor',\n                paramName: 'handler',\n            });\n        }\n        return handler;\n    }\n    else {\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isType(handler, 'function', {\n                moduleName: 'workbox-routing',\n                className: 'Route',\n                funcName: 'constructor',\n                paramName: 'handler',\n            });\n        }\n        return { handle: handler };\n    }\n};\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from 'workbox-core/_private/assert.js';\nimport { defaultMethod, validMethods } from './utils/constants.js';\nimport { normalizeHandler } from './utils/normalizeHandler.js';\nimport './_version.js';\n/**\n * A `Route` consists of a pair of callback functions, \"match\" and \"handler\".\n * The \"match\" callback determine if a route should be used to \"handle\" a\n * request by returning a non-falsy value if it can. The \"handler\" callback\n * is called when there is a match and should return a Promise that resolves\n * to a `Response`.\n *\n * @memberof module:workbox-routing\n */\nclass Route {\n    /**\n     * Constructor for Route class.\n     *\n     * @param {module:workbox-routing~matchCallback} match\n     * A callback function that determines whether the route matches a given\n     * `fetch` event by returning a non-falsy value.\n     * @param {module:workbox-routing~handlerCallback} handler A callback\n     * function that returns a Promise resolving to a Response.\n     * @param {string} [method='GET'] The HTTP method to match the Route\n     * against.\n     */\n    constructor(match, handler, method = defaultMethod) {\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isType(match, 'function', {\n                moduleName: 'workbox-routing',\n                className: 'Route',\n                funcName: 'constructor',\n                paramName: 'match',\n            });\n            if (method) {\n                assert.isOneOf(method, validMethods, { paramName: 'method' });\n            }\n        }\n        // These values are referenced directly by Router so cannot be\n        // altered by minificaton.\n        this.handler = normalizeHandler(handler);\n        this.match = match;\n        this.method = method;\n    }\n}\nexport { Route };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from 'workbox-core/_private/assert.js';\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { Route } from './Route.js';\nimport './_version.js';\n/**\n * NavigationRoute makes it easy to create a\n * [Route]{@link module:workbox-routing.Route} that matches for browser\n * [navigation requests]{@link https://developers.google.com/web/fundamentals/primers/service-workers/high-performance-loading#first_what_are_navigation_requests}.\n *\n * It will only match incoming Requests whose\n * [`mode`]{@link https://fetch.spec.whatwg.org/#concept-request-mode}\n * is set to `navigate`.\n *\n * You can optionally only apply this route to a subset of navigation requests\n * by using one or both of the `denylist` and `allowlist` parameters.\n *\n * @memberof module:workbox-routing\n * @extends module:workbox-routing.Route\n */\nclass NavigationRoute extends Route {\n    /**\n     * If both `denylist` and `allowlist` are provided, the `denylist` will\n     * take precedence and the request will not match this route.\n     *\n     * The regular expressions in `allowlist` and `denylist`\n     * are matched against the concatenated\n     * [`pathname`]{@link https://developer.mozilla.org/en-US/docs/Web/API/HTMLHyperlinkElementUtils/pathname}\n     * and [`search`]{@link https://developer.mozilla.org/en-US/docs/Web/API/HTMLHyperlinkElementUtils/search}\n     * portions of the requested URL.\n     *\n     * @param {module:workbox-routing~handlerCallback} handler A callback\n     * function that returns a Promise resulting in a Response.\n     * @param {Object} options\n     * @param {Array<RegExp>} [options.denylist] If any of these patterns match,\n     * the route will not handle the request (even if a allowlist RegExp matches).\n     * @param {Array<RegExp>} [options.allowlist=[/./]] If any of these patterns\n     * match the URL's pathname and search parameter, the route will handle the\n     * request (assuming the denylist doesn't match).\n     */\n    constructor(handler, { allowlist = [/./], denylist = [] } = {}) {\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isArrayOfClass(allowlist, RegExp, {\n                moduleName: 'workbox-routing',\n                className: 'NavigationRoute',\n                funcName: 'constructor',\n                paramName: 'options.allowlist',\n            });\n            assert.isArrayOfClass(denylist, RegExp, {\n                moduleName: 'workbox-routing',\n                className: 'NavigationRoute',\n                funcName: 'constructor',\n                paramName: 'options.denylist',\n            });\n        }\n        super((options) => this._match(options), handler);\n        this._allowlist = allowlist;\n        this._denylist = denylist;\n    }\n    /**\n     * Routes match handler.\n     *\n     * @param {Object} options\n     * @param {URL} options.url\n     * @param {Request} options.request\n     * @return {boolean}\n     *\n     * @private\n     */\n    _match({ url, request }) {\n        if (request && request.mode !== 'navigate') {\n            return false;\n        }\n        const pathnameAndSearch = url.pathname + url.search;\n        for (const regExp of this._denylist) {\n            if (regExp.test(pathnameAndSearch)) {\n                if (process.env.NODE_ENV !== 'production') {\n                    logger.log(`The navigation route ${pathnameAndSearch} is not ` +\n                        `being used, since the URL matches this denylist pattern: ` +\n                        `${regExp}`);\n                }\n                return false;\n            }\n        }\n        if (this._allowlist.some((regExp) => regExp.test(pathnameAndSearch))) {\n            if (process.env.NODE_ENV !== 'production') {\n                logger.debug(`The navigation route ${pathnameAndSearch} ` +\n                    `is being used.`);\n            }\n            return true;\n        }\n        if (process.env.NODE_ENV !== 'production') {\n            logger.log(`The navigation route ${pathnameAndSearch} is not ` +\n                `being used, since the URL being navigated to doesn't ` +\n                `match the allowlist.`);\n        }\n        return false;\n    }\n}\nexport { NavigationRoute };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from 'workbox-core/_private/assert.js';\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { Route } from './Route.js';\nimport './_version.js';\n/**\n * RegExpRoute makes it easy to create a regular expression based\n * [Route]{@link module:workbox-routing.Route}.\n *\n * For same-origin requests the RegExp only needs to match part of the URL. For\n * requests against third-party servers, you must define a RegExp that matches\n * the start of the URL.\n *\n * [See the module docs for info.]{@link https://developers.google.com/web/tools/workbox/modules/workbox-routing}\n *\n * @memberof module:workbox-routing\n * @extends module:workbox-routing.Route\n */\nclass RegExpRoute extends Route {\n    /**\n     * If the regular expression contains\n     * [capture groups]{@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp#grouping-back-references},\n     * the captured values will be passed to the\n     * [handler's]{@link module:workbox-routing~handlerCallback} `params`\n     * argument.\n     *\n     * @param {RegExp} regExp The regular expression to match against URLs.\n     * @param {module:workbox-routing~handlerCallback} handler A callback\n     * function that returns a Promise resulting in a Response.\n     * @param {string} [method='GET'] The HTTP method to match the Route\n     * against.\n     */\n    constructor(regExp, handler, method) {\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isInstance(regExp, RegExp, {\n                moduleName: 'workbox-routing',\n                className: 'RegExpRoute',\n                funcName: 'constructor',\n                paramName: 'pattern',\n            });\n        }\n        const match = ({ url }) => {\n            const result = regExp.exec(url.href);\n            // Return immediately if there's no match.\n            if (!result) {\n                return;\n            }\n            // Require that the match start at the first character in the URL string\n            // if it's a cross-origin request.\n            // See https://github.com/GoogleChrome/workbox/issues/281 for the context\n            // behind this behavior.\n            if ((url.origin !== location.origin) && (result.index !== 0)) {\n                if (process.env.NODE_ENV !== 'production') {\n                    logger.debug(`The regular expression '${regExp}' only partially matched ` +\n                        `against the cross-origin URL '${url}'. RegExpRoute's will only ` +\n                        `handle cross-origin requests if they match the entire URL.`);\n                }\n                return;\n            }\n            // If the route matches, but there aren't any capture groups defined, then\n            // this will return [], which is truthy and therefore sufficient to\n            // indicate a match.\n            // If there are capture groups, then it will return their values.\n            return result.slice(1);\n        };\n        super(match, handler, method);\n    }\n}\nexport { RegExpRoute };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from 'workbox-core/_private/assert.js';\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { WorkboxError } from 'workbox-core/_private/WorkboxError.js';\nimport { getFriendlyURL } from 'workbox-core/_private/getFriendlyURL.js';\nimport { normalizeHandler } from './utils/normalizeHandler.js';\nimport './_version.js';\n/**\n * The Router can be used to process a FetchEvent through one or more\n * [Routes]{@link module:workbox-routing.Route} responding  with a Request if\n * a matching route exists.\n *\n * If no route matches a given a request, the Router will use a \"default\"\n * handler if one is defined.\n *\n * Should the matching Route throw an error, the Router will use a \"catch\"\n * handler if one is defined to gracefully deal with issues and respond with a\n * Request.\n *\n * If a request matches multiple routes, the **earliest** registered route will\n * be used to respond to the request.\n *\n * @memberof module:workbox-routing\n */\nclass Router {\n    /**\n     * Initializes a new Router.\n     */\n    constructor() {\n        this._routes = new Map();\n    }\n    /**\n     * @return {Map<string, Array<module:workbox-routing.Route>>} routes A `Map` of HTTP\n     * method name ('GET', etc.) to an array of all the corresponding `Route`\n     * instances that are registered.\n     */\n    get routes() {\n        return this._routes;\n    }\n    /**\n     * Adds a fetch event listener to respond to events when a route matches\n     * the event's request.\n     */\n    addFetchListener() {\n        // See https://github.com/Microsoft/TypeScript/issues/28357#issuecomment-436484705\n        self.addEventListener('fetch', ((event) => {\n            const { request } = event;\n            const responsePromise = this.handleRequest({ request, event });\n            if (responsePromise) {\n                event.respondWith(responsePromise);\n            }\n        }));\n    }\n    /**\n     * Adds a message event listener for URLs to cache from the window.\n     * This is useful to cache resources loaded on the page prior to when the\n     * service worker started controlling it.\n     *\n     * The format of the message data sent from the window should be as follows.\n     * Where the `urlsToCache` array may consist of URL strings or an array of\n     * URL string + `requestInit` object (the same as you'd pass to `fetch()`).\n     *\n     * ```\n     * {\n     *   type: 'CACHE_URLS',\n     *   payload: {\n     *     urlsToCache: [\n     *       './script1.js',\n     *       './script2.js',\n     *       ['./script3.js', {mode: 'no-cors'}],\n     *     ],\n     *   },\n     * }\n     * ```\n     */\n    addCacheListener() {\n        // See https://github.com/Microsoft/TypeScript/issues/28357#issuecomment-436484705\n        self.addEventListener('message', ((event) => {\n            if (event.data && event.data.type === 'CACHE_URLS') {\n                const { payload } = event.data;\n                if (process.env.NODE_ENV !== 'production') {\n                    logger.debug(`Caching URLs from the window`, payload.urlsToCache);\n                }\n                const requestPromises = Promise.all(payload.urlsToCache.map((entry) => {\n                    if (typeof entry === 'string') {\n                        entry = [entry];\n                    }\n                    const request = new Request(...entry);\n                    return this.handleRequest({ request });\n                    // TODO(philipwalton): TypeScript errors without this typecast for\n                    // some reason (probably a bug). The real type here should work but\n                    // doesn't: `Array<Promise<Response> | undefined>`.\n                })); // TypeScript\n                event.waitUntil(requestPromises);\n                // If a MessageChannel was used, reply to the message on success.\n                if (event.ports && event.ports[0]) {\n                    requestPromises.then(() => event.ports[0].postMessage(true));\n                }\n            }\n        }));\n    }\n    /**\n     * Apply the routing rules to a FetchEvent object to get a Response from an\n     * appropriate Route's handler.\n     *\n     * @param {Object} options\n     * @param {Request} options.request The request to handle (this is usually\n     *     from a fetch event, but it does not have to be).\n     * @param {FetchEvent} [options.event] The event that triggered the request,\n     *     if applicable.\n     * @return {Promise<Response>|undefined} A promise is returned if a\n     *     registered route can handle the request. If there is no matching\n     *     route and there's no `defaultHandler`, `undefined` is returned.\n     */\n    handleRequest({ request, event }) {\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isInstance(request, Request, {\n                moduleName: 'workbox-routing',\n                className: 'Router',\n                funcName: 'handleRequest',\n                paramName: 'options.request',\n            });\n        }\n        const url = new URL(request.url, location.href);\n        if (!url.protocol.startsWith('http')) {\n            if (process.env.NODE_ENV !== 'production') {\n                logger.debug(`Workbox Router only supports URLs that start with 'http'.`);\n            }\n            return;\n        }\n        let { params, route } = this.findMatchingRoute({ url, request, event });\n        let handler = route && route.handler;\n        let debugMessages = [];\n        if (process.env.NODE_ENV !== 'production') {\n            if (handler) {\n                debugMessages.push([\n                    `Found a route to handle this request:`, route,\n                ]);\n                if (params) {\n                    debugMessages.push([\n                        `Passing the following params to the route's handler:`, params,\n                    ]);\n                }\n            }\n        }\n        // If we don't have a handler because there was no matching route, then\n        // fall back to defaultHandler if that's defined.\n        if (!handler && this._defaultHandler) {\n            if (process.env.NODE_ENV !== 'production') {\n                debugMessages.push(`Failed to find a matching route. Falling ` +\n                    `back to the default handler.`);\n            }\n            handler = this._defaultHandler;\n        }\n        if (!handler) {\n            if (process.env.NODE_ENV !== 'production') {\n                // No handler so Workbox will do nothing. If logs is set of debug\n                // i.e. verbose, we should print out this information.\n                logger.debug(`No route found for: ${getFriendlyURL(url)}`);\n            }\n            return;\n        }\n        if (process.env.NODE_ENV !== 'production') {\n            // We have a handler, meaning Workbox is going to handle the route.\n            // print the routing details to the console.\n            logger.groupCollapsed(`Router is responding to: ${getFriendlyURL(url)}`);\n            debugMessages.forEach((msg) => {\n                if (Array.isArray(msg)) {\n                    logger.log(...msg);\n                }\n                else {\n                    logger.log(msg);\n                }\n            });\n            logger.groupEnd();\n        }\n        // Wrap in try and catch in case the handle method throws a synchronous\n        // error. It should still callback to the catch handler.\n        let responsePromise;\n        try {\n            responsePromise = handler.handle({ url, request, event, params });\n        }\n        catch (err) {\n            responsePromise = Promise.reject(err);\n        }\n        if (responsePromise instanceof Promise && this._catchHandler) {\n            responsePromise = responsePromise.catch((err) => {\n                if (process.env.NODE_ENV !== 'production') {\n                    // Still include URL here as it will be async from the console group\n                    // and may not make sense without the URL\n                    logger.groupCollapsed(`Error thrown when responding to: ` +\n                        ` ${getFriendlyURL(url)}. Falling back to Catch Handler.`);\n                    logger.error(`Error thrown by:`, route);\n                    logger.error(err);\n                    logger.groupEnd();\n                }\n                return this._catchHandler.handle({ url, request, event });\n            });\n        }\n        return responsePromise;\n    }\n    /**\n     * Checks a request and URL (and optionally an event) against the list of\n     * registered routes, and if there's a match, returns the corresponding\n     * route along with any params generated by the match.\n     *\n     * @param {Object} options\n     * @param {URL} options.url\n     * @param {Request} options.request The request to match.\n     * @param {Event} [options.event] The corresponding event (unless N/A).\n     * @return {Object} An object with `route` and `params` properties.\n     *     They are populated if a matching route was found or `undefined`\n     *     otherwise.\n     */\n    findMatchingRoute({ url, request, event }) {\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isInstance(url, URL, {\n                moduleName: 'workbox-routing',\n                className: 'Router',\n                funcName: 'findMatchingRoute',\n                paramName: 'options.url',\n            });\n            assert.isInstance(request, Request, {\n                moduleName: 'workbox-routing',\n                className: 'Router',\n                funcName: 'findMatchingRoute',\n                paramName: 'options.request',\n            });\n        }\n        const routes = this._routes.get(request.method) || [];\n        for (const route of routes) {\n            let params;\n            let matchResult = route.match({ url, request, event });\n            if (matchResult) {\n                // See https://github.com/GoogleChrome/workbox/issues/2079\n                params = matchResult;\n                if (Array.isArray(matchResult) && matchResult.length === 0) {\n                    // Instead of passing an empty array in as params, use undefined.\n                    params = undefined;\n                }\n                else if ((matchResult.constructor === Object &&\n                    Object.keys(matchResult).length === 0)) {\n                    // Instead of passing an empty object in as params, use undefined.\n                    params = undefined;\n                }\n                else if (typeof matchResult === 'boolean') {\n                    // For the boolean value true (rather than just something truth-y),\n                    // don't set params.\n                    // See https://github.com/GoogleChrome/workbox/pull/2134#issuecomment-513924353\n                    params = undefined;\n                }\n                // Return early if have a match.\n                return { route, params };\n            }\n        }\n        // If no match was found above, return and empty object.\n        return {};\n    }\n    /**\n     * Define a default `handler` that's called when no routes explicitly\n     * match the incoming request.\n     *\n     * Without a default handler, unmatched requests will go against the\n     * network as if there were no service worker present.\n     *\n     * @param {module:workbox-routing~handlerCallback} handler A callback\n     * function that returns a Promise resulting in a Response.\n     */\n    setDefaultHandler(handler) {\n        this._defaultHandler = normalizeHandler(handler);\n    }\n    /**\n     * If a Route throws an error while handling a request, this `handler`\n     * will be called and given a chance to provide a response.\n     *\n     * @param {module:workbox-routing~handlerCallback} handler A callback\n     * function that returns a Promise resulting in a Response.\n     */\n    setCatchHandler(handler) {\n        this._catchHandler = normalizeHandler(handler);\n    }\n    /**\n     * Registers a route with the router.\n     *\n     * @param {module:workbox-routing.Route} route The route to register.\n     */\n    registerRoute(route) {\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isType(route, 'object', {\n                moduleName: 'workbox-routing',\n                className: 'Router',\n                funcName: 'registerRoute',\n                paramName: 'route',\n            });\n            assert.hasMethod(route, 'match', {\n                moduleName: 'workbox-routing',\n                className: 'Router',\n                funcName: 'registerRoute',\n                paramName: 'route',\n            });\n            assert.isType(route.handler, 'object', {\n                moduleName: 'workbox-routing',\n                className: 'Router',\n                funcName: 'registerRoute',\n                paramName: 'route',\n            });\n            assert.hasMethod(route.handler, 'handle', {\n                moduleName: 'workbox-routing',\n                className: 'Router',\n                funcName: 'registerRoute',\n                paramName: 'route.handler',\n            });\n            assert.isType(route.method, 'string', {\n                moduleName: 'workbox-routing',\n                className: 'Router',\n                funcName: 'registerRoute',\n                paramName: 'route.method',\n            });\n        }\n        if (!this._routes.has(route.method)) {\n            this._routes.set(route.method, []);\n        }\n        // Give precedence to all of the earlier routes by adding this additional\n        // route to the end of the array.\n        this._routes.get(route.method).push(route);\n    }\n    /**\n     * Unregisters a route with the router.\n     *\n     * @param {module:workbox-routing.Route} route The route to unregister.\n     */\n    unregisterRoute(route) {\n        if (!this._routes.has(route.method)) {\n            throw new WorkboxError('unregister-route-but-not-found-with-method', {\n                method: route.method,\n            });\n        }\n        const routeIndex = this._routes.get(route.method).indexOf(route);\n        if (routeIndex > -1) {\n            this._routes.get(route.method).splice(routeIndex, 1);\n        }\n        else {\n            throw new WorkboxError('unregister-route-route-not-registered');\n        }\n    }\n}\nexport { Router };\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { Router } from '../Router.js';\nimport '../_version.js';\nlet defaultRouter;\n/**\n * Creates a new, singleton Router instance if one does not exist. If one\n * does already exist, that instance is returned.\n *\n * @private\n * @return {Router}\n */\nexport const getOrCreateDefaultRouter = () => {\n    if (!defaultRouter) {\n        defaultRouter = new Router();\n        // The helpers that use the default Router assume these listeners exist.\n        defaultRouter.addFetchListener();\n        defaultRouter.addCacheListener();\n    }\n    return defaultRouter;\n};\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { WorkboxError } from 'workbox-core/_private/WorkboxError.js';\nimport { Route } from './Route.js';\nimport { RegExpRoute } from './RegExpRoute.js';\nimport { getOrCreateDefaultRouter } from './utils/getOrCreateDefaultRouter.js';\nimport './_version.js';\n/**\n * Easily register a RegExp, string, or function with a caching\n * strategy to a singleton Router instance.\n *\n * This method will generate a Route for you if needed and\n * call [registerRoute()]{@link module:workbox-routing.Router#registerRoute}.\n *\n * @param {RegExp|string|module:workbox-routing.Route~matchCallback|module:workbox-routing.Route} capture\n * If the capture param is a `Route`, all other arguments will be ignored.\n * @param {module:workbox-routing~handlerCallback} [handler] A callback\n * function that returns a Promise resulting in a Response. This parameter\n * is required if `capture` is not a `Route` object.\n * @param {string} [method='GET'] The HTTP method to match the Route\n * against.\n * @return {module:workbox-routing.Route} The generated `Route`(Useful for\n * unregistering).\n *\n * @memberof module:workbox-routing\n */\nfunction registerRoute(capture, handler, method) {\n    let route;\n    if (typeof capture === 'string') {\n        const captureUrl = new URL(capture, location.href);\n        if (process.env.NODE_ENV !== 'production') {\n            if (!(capture.startsWith('/') || capture.startsWith('http'))) {\n                throw new WorkboxError('invalid-string', {\n                    moduleName: 'workbox-routing',\n                    funcName: 'registerRoute',\n                    paramName: 'capture',\n                });\n            }\n            // We want to check if Express-style wildcards are in the pathname only.\n            // TODO: Remove this log message in v4.\n            const valueToCheck = capture.startsWith('http') ?\n                captureUrl.pathname : capture;\n            // See https://github.com/pillarjs/path-to-regexp#parameters\n            const wildcards = '[*:?+]';\n            if (valueToCheck.match(new RegExp(`${wildcards}`))) {\n                logger.debug(`The '$capture' parameter contains an Express-style wildcard ` +\n                    `character (${wildcards}). Strings are now always interpreted as ` +\n                    `exact matches; use a RegExp for partial or wildcard matches.`);\n            }\n        }\n        const matchCallback = ({ url }) => {\n            if (process.env.NODE_ENV !== 'production') {\n                if ((url.pathname === captureUrl.pathname) &&\n                    (url.origin !== captureUrl.origin)) {\n                    logger.debug(`${capture} only partially matches the cross-origin URL ` +\n                        `${url}. This route will only handle cross-origin requests ` +\n                        `if they match the entire URL.`);\n                }\n            }\n            return url.href === captureUrl.href;\n        };\n        // If `capture` is a string then `handler` and `method` must be present.\n        route = new Route(matchCallback, handler, method);\n    }\n    else if (capture instanceof RegExp) {\n        // If `capture` is a `RegExp` then `handler` and `method` must be present.\n        route = new RegExpRoute(capture, handler, method);\n    }\n    else if (typeof capture === 'function') {\n        // If `capture` is a function then `handler` and `method` must be present.\n        route = new Route(capture, handler, method);\n    }\n    else if (capture instanceof Route) {\n        route = capture;\n    }\n    else {\n        throw new WorkboxError('unsupported-route-type', {\n            moduleName: 'workbox-routing',\n            funcName: 'registerRoute',\n            paramName: 'capture',\n        });\n    }\n    const defaultRouter = getOrCreateDefaultRouter();\n    defaultRouter.registerRoute(route);\n    return route;\n}\n;\nexport { registerRoute };\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { getOrCreateDefaultRouter } from './utils/getOrCreateDefaultRouter.js';\nimport './_version.js';\n/**\n * If a Route throws an error while handling a request, this `handler`\n * will be called and given a chance to provide a response.\n *\n * @param {module:workbox-routing~handlerCallback} handler A callback\n * function that returns a Promise resulting in a Response.\n *\n * @memberof module:workbox-routing\n */\nfunction setCatchHandler(handler) {\n    const defaultRouter = getOrCreateDefaultRouter();\n    defaultRouter.setCatchHandler(handler);\n}\n;\nexport { setCatchHandler };\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { getOrCreateDefaultRouter } from './utils/getOrCreateDefaultRouter.js';\nimport './_version.js';\n/**\n * Define a default `handler` that's called when no routes explicitly\n * match the incoming request.\n *\n * Without a default handler, unmatched requests will go against the\n * network as if there were no service worker present.\n *\n * @param {module:workbox-routing~handlerCallback} handler A callback\n * function that returns a Promise resulting in a Response.\n *\n * @memberof module:workbox-routing\n */\nfunction setDefaultHandler(handler) {\n    const defaultRouter = getOrCreateDefaultRouter();\n    defaultRouter.setDefaultHandler(handler);\n}\n;\nexport { setDefaultHandler };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { NavigationRoute } from './NavigationRoute.js';\nimport { RegExpRoute } from './RegExpRoute.js';\nimport { registerRoute } from './registerRoute.js';\nimport { Route } from './Route.js';\nimport { Router } from './Router.js';\nimport { setCatchHandler } from './setCatchHandler.js';\nimport { setDefaultHandler } from './setDefaultHandler.js';\nimport './_version.js';\n/**\n * @module workbox-routing\n */\nexport { NavigationRoute, RegExpRoute, registerRoute, Route, Router, setCatchHandler, setDefaultHandler, };\n","export * from './index.js';","\"use strict\";\n// @ts-ignore\ntry {\n    self['workbox:strategies:5.0.0'] && _();\n}\ncatch (e) { }\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { getFriendlyURL } from 'workbox-core/_private/getFriendlyURL.js';\nimport '../_version.js';\nexport const messages = {\n    strategyStart: (strategyName, request) => `Using ${strategyName} to respond to '${getFriendlyURL(request.url)}'`,\n    printFinalResponse: (response) => {\n        if (response) {\n            logger.groupCollapsed(`View the final response here.`);\n            logger.log(response || '[No response returned]');\n            logger.groupEnd();\n        }\n    },\n};\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from 'workbox-core/_private/assert.js';\nimport { cacheNames } from 'workbox-core/_private/cacheNames.js';\nimport { cacheWrapper } from 'workbox-core/_private/cacheWrapper.js';\nimport { fetchWrapper } from 'workbox-core/_private/fetchWrapper.js';\nimport { getFriendlyURL } from 'workbox-core/_private/getFriendlyURL.js';\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { WorkboxError } from 'workbox-core/_private/WorkboxError.js';\nimport { messages } from './utils/messages.js';\nimport './_version.js';\n/**\n * An implementation of a [cache-first]{@link https://developers.google.com/web/fundamentals/instant-and-offline/offline-cookbook/#cache-falling-back-to-network}\n * request strategy.\n *\n * A cache first strategy is useful for assets that have been revisioned,\n * such as URLs like `/styles/example.a8f5f1.css`, since they\n * can be cached for long periods of time.\n *\n * If the network request fails, and there is no cache match, this will throw\n * a `WorkboxError` exception.\n *\n * @memberof module:workbox-strategies\n */\nclass CacheFirst {\n    /**\n     * @param {Object} options\n     * @param {string} options.cacheName Cache name to store and retrieve\n     * requests. Defaults to cache names provided by\n     * [workbox-core]{@link module:workbox-core.cacheNames}.\n     * @param {Array<Object>} options.plugins [Plugins]{@link https://developers.google.com/web/tools/workbox/guides/using-plugins}\n     * to use in conjunction with this caching strategy.\n     * @param {Object} options.fetchOptions Values passed along to the\n     * [`init`](https://developer.mozilla.org/en-US/docs/Web/API/WindowOrWorkerGlobalScope/fetch#Parameters)\n     * of all fetch() requests made by this strategy.\n     * @param {Object} options.matchOptions [`CacheQueryOptions`](https://w3c.github.io/ServiceWorker/#dictdef-cachequeryoptions)\n     */\n    constructor(options = {}) {\n        this._cacheName = cacheNames.getRuntimeName(options.cacheName);\n        this._plugins = options.plugins || [];\n        this._fetchOptions = options.fetchOptions;\n        this._matchOptions = options.matchOptions;\n    }\n    /**\n     * This method will perform a request strategy and follows an API that\n     * will work with the\n     * [Workbox Router]{@link module:workbox-routing.Router}.\n     *\n     * @param {Object} options\n     * @param {Request|string} options.request A request to run this strategy for.\n     * @param {Event} [options.event] The event that triggered the request.\n     * @return {Promise<Response>}\n     */\n    async handle({ event, request }) {\n        const logs = [];\n        if (typeof request === 'string') {\n            request = new Request(request);\n        }\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isInstance(request, Request, {\n                moduleName: 'workbox-strategies',\n                className: 'CacheFirst',\n                funcName: 'makeRequest',\n                paramName: 'request',\n            });\n        }\n        let response = await cacheWrapper.match({\n            cacheName: this._cacheName,\n            request,\n            event,\n            matchOptions: this._matchOptions,\n            plugins: this._plugins,\n        });\n        let error;\n        if (!response) {\n            if (process.env.NODE_ENV !== 'production') {\n                logs.push(`No response found in the '${this._cacheName}' cache. ` +\n                    `Will respond with a network request.`);\n            }\n            try {\n                response = await this._getFromNetwork(request, event);\n            }\n            catch (err) {\n                error = err;\n            }\n            if (process.env.NODE_ENV !== 'production') {\n                if (response) {\n                    logs.push(`Got response from network.`);\n                }\n                else {\n                    logs.push(`Unable to get a response from the network.`);\n                }\n            }\n        }\n        else {\n            if (process.env.NODE_ENV !== 'production') {\n                logs.push(`Found a cached response in the '${this._cacheName}' cache.`);\n            }\n        }\n        if (process.env.NODE_ENV !== 'production') {\n            logger.groupCollapsed(messages.strategyStart('CacheFirst', request));\n            for (let log of logs) {\n                logger.log(log);\n            }\n            messages.printFinalResponse(response);\n            logger.groupEnd();\n        }\n        if (!response) {\n            throw new WorkboxError('no-response', { url: request.url, error });\n        }\n        return response;\n    }\n    /**\n     * Handles the network and cache part of CacheFirst.\n     *\n     * @param {Request} request\n     * @param {Event} [event]\n     * @return {Promise<Response>}\n     *\n     * @private\n     */\n    async _getFromNetwork(request, event) {\n        const response = await fetchWrapper.fetch({\n            request,\n            event,\n            fetchOptions: this._fetchOptions,\n            plugins: this._plugins,\n        });\n        // Keep the service worker while we put the request to the cache\n        const responseClone = response.clone();\n        const cachePutPromise = cacheWrapper.put({\n            cacheName: this._cacheName,\n            request,\n            response: responseClone,\n            event,\n            plugins: this._plugins,\n        });\n        if (event) {\n            try {\n                event.waitUntil(cachePutPromise);\n            }\n            catch (error) {\n                if (process.env.NODE_ENV !== 'production') {\n                    logger.warn(`Unable to ensure service worker stays alive when ` +\n                        `updating cache for '${getFriendlyURL(request.url)}'.`);\n                }\n            }\n        }\n        return response;\n    }\n}\nexport { CacheFirst };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from 'workbox-core/_private/assert.js';\nimport { cacheNames } from 'workbox-core/_private/cacheNames.js';\nimport { cacheWrapper } from 'workbox-core/_private/cacheWrapper.js';\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { WorkboxError } from 'workbox-core/_private/WorkboxError.js';\nimport { messages } from './utils/messages.js';\nimport './_version.js';\n/**\n * An implementation of a\n * [cache-only]{@link https://developers.google.com/web/fundamentals/instant-and-offline/offline-cookbook/#cache-only}\n * request strategy.\n *\n * This class is useful if you want to take advantage of any\n * [Workbox plugins]{@link https://developers.google.com/web/tools/workbox/guides/using-plugins}.\n *\n * If there is no cache match, this will throw a `WorkboxError` exception.\n *\n * @memberof module:workbox-strategies\n */\nclass CacheOnly {\n    /**\n     * @param {Object} options\n     * @param {string} options.cacheName Cache name to store and retrieve\n     * requests. Defaults to cache names provided by\n     * [workbox-core]{@link module:workbox-core.cacheNames}.\n     * @param {Array<Object>} options.plugins [Plugins]{@link https://developers.google.com/web/tools/workbox/guides/using-plugins}\n     * to use in conjunction with this caching strategy.\n     * @param {Object} options.matchOptions [`CacheQueryOptions`](https://w3c.github.io/ServiceWorker/#dictdef-cachequeryoptions)\n     */\n    constructor(options = {}) {\n        this._cacheName = cacheNames.getRuntimeName(options.cacheName);\n        this._plugins = options.plugins || [];\n        this._matchOptions = options.matchOptions;\n    }\n    /**\n     * This method will perform a request strategy and follows an API that\n     * will work with the\n     * [Workbox Router]{@link module:workbox-routing.Router}.\n     *\n     * @param {Object} options\n     * @param {Request|string} options.request A request to run this strategy for.\n     * @param {Event} [options.event] The event that triggered the request.\n     * @return {Promise<Response>}\n     */\n    async handle({ event, request }) {\n        if (typeof request === 'string') {\n            request = new Request(request);\n        }\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isInstance(request, Request, {\n                moduleName: 'workbox-strategies',\n                className: 'CacheOnly',\n                funcName: 'makeRequest',\n                paramName: 'request',\n            });\n        }\n        const response = await cacheWrapper.match({\n            cacheName: this._cacheName,\n            request,\n            event,\n            matchOptions: this._matchOptions,\n            plugins: this._plugins,\n        });\n        if (process.env.NODE_ENV !== 'production') {\n            logger.groupCollapsed(messages.strategyStart('CacheOnly', request));\n            if (response) {\n                logger.log(`Found a cached response in the '${this._cacheName}'` +\n                    ` cache.`);\n                messages.printFinalResponse(response);\n            }\n            else {\n                logger.log(`No response found in the '${this._cacheName}' cache.`);\n            }\n            logger.groupEnd();\n        }\n        if (!response) {\n            throw new WorkboxError('no-response', { url: request.url });\n        }\n        return response;\n    }\n}\nexport { CacheOnly };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\nexport const cacheOkAndOpaquePlugin = {\n    /**\n     * Returns a valid response (to allow caching) if the status is 200 (OK) or\n     * 0 (opaque).\n     *\n     * @param {Object} options\n     * @param {Response} options.response\n     * @return {Response|null}\n     *\n     * @private\n     */\n    cacheWillUpdate: async ({ response }) => {\n        if (response.status === 200 || response.status === 0) {\n            return response;\n        }\n        return null;\n    },\n};\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from 'workbox-core/_private/assert.js';\nimport { cacheNames } from 'workbox-core/_private/cacheNames.js';\nimport { cacheWrapper } from 'workbox-core/_private/cacheWrapper.js';\nimport { fetchWrapper } from 'workbox-core/_private/fetchWrapper.js';\nimport { getFriendlyURL } from 'workbox-core/_private/getFriendlyURL.js';\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { WorkboxError } from 'workbox-core/_private/WorkboxError.js';\nimport { messages } from './utils/messages.js';\nimport { cacheOkAndOpaquePlugin } from './plugins/cacheOkAndOpaquePlugin.js';\nimport './_version.js';\n/**\n * An implementation of a\n * [network first]{@link https://developers.google.com/web/fundamentals/instant-and-offline/offline-cookbook/#network-falling-back-to-cache}\n * request strategy.\n *\n * By default, this strategy will cache responses with a 200 status code as\n * well as [opaque responses]{@link https://developers.google.com/web/tools/workbox/guides/handle-third-party-requests}.\n * Opaque responses are are cross-origin requests where the response doesn't\n * support [CORS]{@link https://enable-cors.org/}.\n *\n * If the network request fails, and there is no cache match, this will throw\n * a `WorkboxError` exception.\n *\n * @memberof module:workbox-strategies\n */\nclass NetworkFirst {\n    /**\n     * @param {Object} options\n     * @param {string} options.cacheName Cache name to store and retrieve\n     * requests. Defaults to cache names provided by\n     * [workbox-core]{@link module:workbox-core.cacheNames}.\n     * @param {Array<Object>} options.plugins [Plugins]{@link https://developers.google.com/web/tools/workbox/guides/using-plugins}\n     * to use in conjunction with this caching strategy.\n     * @param {Object} options.fetchOptions Values passed along to the\n     * [`init`](https://developer.mozilla.org/en-US/docs/Web/API/WindowOrWorkerGlobalScope/fetch#Parameters)\n     * of all fetch() requests made by this strategy.\n     * @param {Object} options.matchOptions [`CacheQueryOptions`](https://w3c.github.io/ServiceWorker/#dictdef-cachequeryoptions)\n     * @param {number} options.networkTimeoutSeconds If set, any network requests\n     * that fail to respond within the timeout will fallback to the cache.\n     *\n     * This option can be used to combat\n     * \"[lie-fi]{@link https://developers.google.com/web/fundamentals/performance/poor-connectivity/#lie-fi}\"\n     * scenarios.\n     */\n    constructor(options = {}) {\n        this._cacheName = cacheNames.getRuntimeName(options.cacheName);\n        if (options.plugins) {\n            let isUsingCacheWillUpdate = options.plugins.some((plugin) => !!plugin.cacheWillUpdate);\n            this._plugins = isUsingCacheWillUpdate ?\n                options.plugins : [cacheOkAndOpaquePlugin, ...options.plugins];\n        }\n        else {\n            // No plugins passed in, use the default plugin.\n            this._plugins = [cacheOkAndOpaquePlugin];\n        }\n        this._networkTimeoutSeconds = options.networkTimeoutSeconds || 0;\n        if (process.env.NODE_ENV !== 'production') {\n            if (this._networkTimeoutSeconds) {\n                assert.isType(this._networkTimeoutSeconds, 'number', {\n                    moduleName: 'workbox-strategies',\n                    className: 'NetworkFirst',\n                    funcName: 'constructor',\n                    paramName: 'networkTimeoutSeconds',\n                });\n            }\n        }\n        this._fetchOptions = options.fetchOptions;\n        this._matchOptions = options.matchOptions;\n    }\n    /**\n     * This method will perform a request strategy and follows an API that\n     * will work with the\n     * [Workbox Router]{@link module:workbox-routing.Router}.\n     *\n     * @param {Object} options\n     * @param {Request|string} options.request A request to run this strategy for.\n     * @param {Event} [options.event] The event that triggered the request.\n     * @return {Promise<Response>}\n     */\n    async handle({ event, request }) {\n        const logs = [];\n        if (typeof request === 'string') {\n            request = new Request(request);\n        }\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isInstance(request, Request, {\n                moduleName: 'workbox-strategies',\n                className: 'NetworkFirst',\n                funcName: 'handle',\n                paramName: 'makeRequest',\n            });\n        }\n        const promises = [];\n        let timeoutId;\n        if (this._networkTimeoutSeconds) {\n            const { id, promise } = this._getTimeoutPromise({ request, event, logs });\n            timeoutId = id;\n            promises.push(promise);\n        }\n        const networkPromise = this._getNetworkPromise({ timeoutId, request, event, logs });\n        promises.push(networkPromise);\n        // Promise.race() will resolve as soon as the first promise resolves.\n        let response = await Promise.race(promises);\n        // If Promise.race() resolved with null, it might be due to a network\n        // timeout + a cache miss. If that were to happen, we'd rather wait until\n        // the networkPromise resolves instead of returning null.\n        // Note that it's fine to await an already-resolved promise, so we don't\n        // have to check to see if it's still \"in flight\".\n        if (!response) {\n            response = await networkPromise;\n        }\n        if (process.env.NODE_ENV !== 'production') {\n            logger.groupCollapsed(messages.strategyStart('NetworkFirst', request));\n            for (let log of logs) {\n                logger.log(log);\n            }\n            messages.printFinalResponse(response);\n            logger.groupEnd();\n        }\n        if (!response) {\n            throw new WorkboxError('no-response', { url: request.url });\n        }\n        return response;\n    }\n    /**\n     * @param {Object} options\n     * @param {Request} options.request\n     * @param {Array} options.logs A reference to the logs array\n     * @param {Event} [options.event]\n     * @return {Promise<Response>}\n     *\n     * @private\n     */\n    _getTimeoutPromise({ request, logs, event }) {\n        let timeoutId;\n        const timeoutPromise = new Promise((resolve) => {\n            const onNetworkTimeout = async () => {\n                if (process.env.NODE_ENV !== 'production') {\n                    logs.push(`Timing out the network response at ` +\n                        `${this._networkTimeoutSeconds} seconds.`);\n                }\n                resolve(await this._respondFromCache({ request, event }));\n            };\n            timeoutId = setTimeout(onNetworkTimeout, this._networkTimeoutSeconds * 1000);\n        });\n        return {\n            promise: timeoutPromise,\n            id: timeoutId,\n        };\n    }\n    /**\n     * @param {Object} options\n     * @param {number|undefined} options.timeoutId\n     * @param {Request} options.request\n     * @param {Array} options.logs A reference to the logs Array.\n     * @param {Event} [options.event]\n     * @return {Promise<Response>}\n     *\n     * @private\n     */\n    async _getNetworkPromise({ timeoutId, request, logs, event }) {\n        let error;\n        let response;\n        try {\n            response = await fetchWrapper.fetch({\n                request,\n                event,\n                fetchOptions: this._fetchOptions,\n                plugins: this._plugins,\n            });\n        }\n        catch (err) {\n            error = err;\n        }\n        if (timeoutId) {\n            clearTimeout(timeoutId);\n        }\n        if (process.env.NODE_ENV !== 'production') {\n            if (response) {\n                logs.push(`Got response from network.`);\n            }\n            else {\n                logs.push(`Unable to get a response from the network. Will respond ` +\n                    `with a cached response.`);\n            }\n        }\n        if (error || !response) {\n            response = await this._respondFromCache({ request, event });\n            if (process.env.NODE_ENV !== 'production') {\n                if (response) {\n                    logs.push(`Found a cached response in the '${this._cacheName}'` +\n                        ` cache.`);\n                }\n                else {\n                    logs.push(`No response found in the '${this._cacheName}' cache.`);\n                }\n            }\n        }\n        else {\n            // Keep the service worker alive while we put the request in the cache\n            const responseClone = response.clone();\n            const cachePut = cacheWrapper.put({\n                cacheName: this._cacheName,\n                request,\n                response: responseClone,\n                event,\n                plugins: this._plugins,\n            });\n            if (event) {\n                try {\n                    // The event has been responded to so we can keep the SW alive to\n                    // respond to the request\n                    event.waitUntil(cachePut);\n                }\n                catch (err) {\n                    if (process.env.NODE_ENV !== 'production') {\n                        logger.warn(`Unable to ensure service worker stays alive when ` +\n                            `updating cache for '${getFriendlyURL(request.url)}'.`);\n                    }\n                }\n            }\n        }\n        return response;\n    }\n    /**\n     * Used if the network timeouts or fails to make the request.\n     *\n     * @param {Object} options\n     * @param {Request} request The request to match in the cache\n     * @param {Event} [options.event]\n     * @return {Promise<Object>}\n     *\n     * @private\n     */\n    _respondFromCache({ event, request }) {\n        return cacheWrapper.match({\n            cacheName: this._cacheName,\n            request,\n            event,\n            matchOptions: this._matchOptions,\n            plugins: this._plugins,\n        });\n    }\n}\nexport { NetworkFirst };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from 'workbox-core/_private/assert.js';\nimport { fetchWrapper } from 'workbox-core/_private/fetchWrapper.js';\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { WorkboxError } from 'workbox-core/_private/WorkboxError.js';\nimport { messages } from './utils/messages.js';\nimport './_version.js';\n/**\n * An implementation of a\n * [network-only]{@link https://developers.google.com/web/fundamentals/instant-and-offline/offline-cookbook/#network-only}\n * request strategy.\n *\n * This class is useful if you want to take advantage of any\n * [Workbox plugins]{@link https://developers.google.com/web/tools/workbox/guides/using-plugins}.\n *\n * If the network request fails, this will throw a `WorkboxError` exception.\n *\n * @memberof module:workbox-strategies\n */\nclass NetworkOnly {\n    /**\n     * @param {Object} options\n     * @param {string} options.cacheName Cache name to store and retrieve\n     * requests. Defaults to cache names provided by\n     * [workbox-core]{@link module:workbox-core.cacheNames}.\n     * @param {Array<Object>} options.plugins [Plugins]{@link https://developers.google.com/web/tools/workbox/guides/using-plugins}\n     * to use in conjunction with this caching strategy.\n     * @param {Object} options.fetchOptions Values passed along to the\n     * [`init`](https://developer.mozilla.org/en-US/docs/Web/API/WindowOrWorkerGlobalScope/fetch#Parameters)\n     * of all fetch() requests made by this strategy.\n     */\n    constructor(options = {}) {\n        this._plugins = options.plugins || [];\n        this._fetchOptions = options.fetchOptions;\n    }\n    /**\n     * This method will perform a request strategy and follows an API that\n     * will work with the\n     * [Workbox Router]{@link module:workbox-routing.Router}.\n     *\n     * @param {Object} options\n     * @param {Request|string} options.request The request to run this strategy for.\n     * @param {Event} [options.event] The event that triggered the request.\n     * @return {Promise<Response>}\n     */\n    async handle({ event, request }) {\n        if (typeof request === 'string') {\n            request = new Request(request);\n        }\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isInstance(request, Request, {\n                moduleName: 'workbox-strategies',\n                className: 'NetworkOnly',\n                funcName: 'handle',\n                paramName: 'request',\n            });\n        }\n        let error;\n        let response;\n        try {\n            response = await fetchWrapper.fetch({\n                request,\n                event,\n                fetchOptions: this._fetchOptions,\n                plugins: this._plugins,\n            });\n        }\n        catch (err) {\n            error = err;\n        }\n        if (process.env.NODE_ENV !== 'production') {\n            logger.groupCollapsed(messages.strategyStart('NetworkOnly', request));\n            if (response) {\n                logger.log(`Got response from network.`);\n            }\n            else {\n                logger.log(`Unable to get a response from the network.`);\n            }\n            messages.printFinalResponse(response);\n            logger.groupEnd();\n        }\n        if (!response) {\n            throw new WorkboxError('no-response', { url: request.url, error });\n        }\n        return response;\n    }\n}\nexport { NetworkOnly };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from 'workbox-core/_private/assert.js';\nimport { cacheNames } from 'workbox-core/_private/cacheNames.js';\nimport { cacheWrapper } from 'workbox-core/_private/cacheWrapper.js';\nimport { fetchWrapper } from 'workbox-core/_private/fetchWrapper.js';\nimport { getFriendlyURL } from 'workbox-core/_private/getFriendlyURL.js';\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { WorkboxError } from 'workbox-core/_private/WorkboxError.js';\nimport { messages } from './utils/messages.js';\nimport { cacheOkAndOpaquePlugin } from './plugins/cacheOkAndOpaquePlugin.js';\nimport './_version.js';\n/**\n * An implementation of a\n * [stale-while-revalidate]{@link https://developers.google.com/web/fundamentals/instant-and-offline/offline-cookbook/#stale-while-revalidate}\n * request strategy.\n *\n * Resources are requested from both the cache and the network in parallel.\n * The strategy will respond with the cached version if available, otherwise\n * wait for the network response. The cache is updated with the network response\n * with each successful request.\n *\n * By default, this strategy will cache responses with a 200 status code as\n * well as [opaque responses]{@link https://developers.google.com/web/tools/workbox/guides/handle-third-party-requests}.\n * Opaque responses are cross-origin requests where the response doesn't\n * support [CORS]{@link https://enable-cors.org/}.\n *\n * If the network request fails, and there is no cache match, this will throw\n * a `WorkboxError` exception.\n *\n * @memberof module:workbox-strategies\n */\nclass StaleWhileRevalidate {\n    /**\n     * @param {Object} options\n     * @param {string} options.cacheName Cache name to store and retrieve\n     * requests. Defaults to cache names provided by\n     * [workbox-core]{@link module:workbox-core.cacheNames}.\n     * @param {Array<Object>} options.plugins [Plugins]{@link https://developers.google.com/web/tools/workbox/guides/using-plugins}\n     * to use in conjunction with this caching strategy.\n     * @param {Object} options.fetchOptions Values passed along to the\n     * [`init`](https://developer.mozilla.org/en-US/docs/Web/API/WindowOrWorkerGlobalScope/fetch#Parameters)\n     * of all fetch() requests made by this strategy.\n     * @param {Object} options.matchOptions [`CacheQueryOptions`](https://w3c.github.io/ServiceWorker/#dictdef-cachequeryoptions)\n     */\n    constructor(options = {}) {\n        this._cacheName = cacheNames.getRuntimeName(options.cacheName);\n        this._plugins = options.plugins || [];\n        if (options.plugins) {\n            let isUsingCacheWillUpdate = options.plugins.some((plugin) => !!plugin.cacheWillUpdate);\n            this._plugins = isUsingCacheWillUpdate ?\n                options.plugins : [cacheOkAndOpaquePlugin, ...options.plugins];\n        }\n        else {\n            // No plugins passed in, use the default plugin.\n            this._plugins = [cacheOkAndOpaquePlugin];\n        }\n        this._fetchOptions = options.fetchOptions;\n        this._matchOptions = options.matchOptions;\n    }\n    /**\n     * This method will perform a request strategy and follows an API that\n     * will work with the\n     * [Workbox Router]{@link module:workbox-routing.Router}.\n     *\n     * @param {Object} options\n     * @param {Request|string} options.request A request to run this strategy for.\n     * @param {Event} [options.event] The event that triggered the request.\n     * @return {Promise<Response>}\n     */\n    async handle({ event, request }) {\n        const logs = [];\n        if (typeof request === 'string') {\n            request = new Request(request);\n        }\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isInstance(request, Request, {\n                moduleName: 'workbox-strategies',\n                className: 'StaleWhileRevalidate',\n                funcName: 'handle',\n                paramName: 'request',\n            });\n        }\n        const fetchAndCachePromise = this._getFromNetwork({ request, event });\n        let response = await cacheWrapper.match({\n            cacheName: this._cacheName,\n            request,\n            event,\n            matchOptions: this._matchOptions,\n            plugins: this._plugins,\n        });\n        let error;\n        if (response) {\n            if (process.env.NODE_ENV !== 'production') {\n                logs.push(`Found a cached response in the '${this._cacheName}'` +\n                    ` cache. Will update with the network response in the background.`);\n            }\n            if (event) {\n                try {\n                    event.waitUntil(fetchAndCachePromise);\n                }\n                catch (error) {\n                    if (process.env.NODE_ENV !== 'production') {\n                        logger.warn(`Unable to ensure service worker stays alive when ` +\n                            `updating cache for '${getFriendlyURL(request.url)}'.`);\n                    }\n                }\n            }\n        }\n        else {\n            if (process.env.NODE_ENV !== 'production') {\n                logs.push(`No response found in the '${this._cacheName}' cache. ` +\n                    `Will wait for the network response.`);\n            }\n            try {\n                response = await fetchAndCachePromise;\n            }\n            catch (err) {\n                error = err;\n            }\n        }\n        if (process.env.NODE_ENV !== 'production') {\n            logger.groupCollapsed(messages.strategyStart('StaleWhileRevalidate', request));\n            for (let log of logs) {\n                logger.log(log);\n            }\n            messages.printFinalResponse(response);\n            logger.groupEnd();\n        }\n        if (!response) {\n            throw new WorkboxError('no-response', { url: request.url, error });\n        }\n        return response;\n    }\n    /**\n     * @param {Object} options\n     * @param {Request} options.request\n     * @param {Event} [options.event]\n     * @return {Promise<Response>}\n     *\n     * @private\n     */\n    async _getFromNetwork({ request, event }) {\n        const response = await fetchWrapper.fetch({\n            request,\n            event,\n            fetchOptions: this._fetchOptions,\n            plugins: this._plugins,\n        });\n        const cachePutPromise = cacheWrapper.put({\n            cacheName: this._cacheName,\n            request,\n            response: response.clone(),\n            event,\n            plugins: this._plugins,\n        });\n        if (event) {\n            try {\n                event.waitUntil(cachePutPromise);\n            }\n            catch (error) {\n                if (process.env.NODE_ENV !== 'production') {\n                    logger.warn(`Unable to ensure service worker stays alive when ` +\n                        `updating cache for '${getFriendlyURL(request.url)}'.`);\n                }\n            }\n        }\n        return response;\n    }\n}\nexport { StaleWhileRevalidate };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { CacheFirst } from './CacheFirst.js';\nimport { CacheOnly } from './CacheOnly.js';\nimport { NetworkFirst } from './NetworkFirst.js';\nimport { NetworkOnly } from './NetworkOnly.js';\nimport { StaleWhileRevalidate } from './StaleWhileRevalidate.js';\nimport './_version.js';\n/**\n * There are common caching strategies that most service workers will need\n * and use. This module provides simple implementations of these strategies.\n *\n * @module workbox-strategies\n */\nexport { CacheFirst, CacheOnly, NetworkFirst, NetworkOnly, StaleWhileRevalidate, };\n","export * from './index.js';","import {precaching} from 'workbox-precaching';\r\nimport {registerRoute} from 'workbox-routing';\r\nimport {CacheFirst, StaleWhileRevalidate,NetworkFirst} from 'workbox-strategies';\r\nimport {precacheAndRoute} from 'workbox-precaching';\r\n\r\nprecacheAndRoute(self.__WB_MANIFEST);","var OVERLAY_ID = '__parcel__error__overlay__';\n\nvar OldModule = module.bundle.Module;\n\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData,\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function (fn) {\n      this._acceptCallbacks.push(fn || function () {});\n    },\n    dispose: function (fn) {\n      this._disposeCallbacks.push(fn);\n    }\n  };\n\n  module.bundle.hotData = null;\n}\n\nmodule.bundle.Module = Module;\nvar checkedAssets, assetsToAccept;\n\nvar parent = module.bundle.parent;\nif ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {\n  var hostname = process.env.HMR_HOSTNAME || location.hostname;\n  var protocol = location.protocol === 'https:' ? 'wss' : 'ws';\n  var ws = new WebSocket(protocol + '://' + hostname + ':' + process.env.HMR_PORT + '/');\n  ws.onmessage = function(event) {\n    checkedAssets = {};\n    assetsToAccept = [];\n\n    var data = JSON.parse(event.data);\n\n    if (data.type === 'update') {\n      var handled = false;\n      data.assets.forEach(function(asset) {\n        if (!asset.isNew) {\n          var didAccept = hmrAcceptCheck(global.parcelRequire, asset.id);\n          if (didAccept) {\n            handled = true;\n          }\n        }\n      });\n\n      // Enable HMR for CSS by default.\n      handled = handled || data.assets.every(function(asset) {\n        return asset.type === 'css' && asset.generated.js;\n      });\n\n      if (handled) {\n        console.clear();\n\n        data.assets.forEach(function (asset) {\n          hmrApply(global.parcelRequire, asset);\n        });\n\n        assetsToAccept.forEach(function (v) {\n          hmrAcceptRun(v[0], v[1]);\n        });\n      } else if (location.reload) { // `location` global exists in a web worker context but lacks `.reload()` function.\n        location.reload();\n      }\n    }\n\n    if (data.type === 'reload') {\n      ws.close();\n      ws.onclose = function () {\n        location.reload();\n      }\n    }\n\n    if (data.type === 'error-resolved') {\n      console.log('[parcel] ✨ Error resolved');\n\n      removeErrorOverlay();\n    }\n\n    if (data.type === 'error') {\n      console.error('[parcel] 🚨  ' + data.error.message + '\\n' + data.error.stack);\n\n      removeErrorOverlay();\n\n      var overlay = createErrorOverlay(data);\n      document.body.appendChild(overlay);\n    }\n  };\n}\n\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n  if (overlay) {\n    overlay.remove();\n  }\n}\n\nfunction createErrorOverlay(data) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n\n  // html encode message and stack trace\n  var message = document.createElement('div');\n  var stackTrace = document.createElement('pre');\n  message.innerText = data.error.message;\n  stackTrace.innerText = data.error.stack;\n\n  overlay.innerHTML = (\n    '<div style=\"background: black; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; opacity: 0.85; font-family: Menlo, Consolas, monospace; z-index: 9999;\">' +\n      '<span style=\"background: red; padding: 2px 4px; border-radius: 2px;\">ERROR</span>' +\n      '<span style=\"top: 2px; margin-left: 5px; position: relative;\">🚨</span>' +\n      '<div style=\"font-size: 18px; font-weight: bold; margin-top: 20px;\">' + message.innerHTML + '</div>' +\n      '<pre>' + stackTrace.innerHTML + '</pre>' +\n    '</div>'\n  );\n\n  return overlay;\n\n}\n\nfunction getParents(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return [];\n  }\n\n  var parents = [];\n  var k, d, dep;\n\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n      if (dep === id || (Array.isArray(dep) && dep[dep.length - 1] === id)) {\n        parents.push(k);\n      }\n    }\n  }\n\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n\n  return parents;\n}\n\nfunction hmrApply(bundle, asset) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (modules[asset.id] || !bundle.parent) {\n    var fn = new Function('require', 'module', 'exports', asset.generated.js);\n    asset.isNew = !modules[asset.id];\n    modules[asset.id] = [fn, asset.deps];\n  } else if (bundle.parent) {\n    hmrApply(bundle.parent, asset);\n  }\n}\n\nfunction hmrAcceptCheck(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (!modules[id] && bundle.parent) {\n    return hmrAcceptCheck(bundle.parent, id);\n  }\n\n  if (checkedAssets[id]) {\n    return;\n  }\n  checkedAssets[id] = true;\n\n  var cached = bundle.cache[id];\n\n  assetsToAccept.push([bundle, id]);\n\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    return true;\n  }\n\n  return getParents(global.parcelRequire, id).some(function (id) {\n    return hmrAcceptCheck(global.parcelRequire, id)\n  });\n}\n\nfunction hmrAcceptRun(bundle, id) {\n  var cached = bundle.cache[id];\n  bundle.hotData = {};\n  if (cached) {\n    cached.hot.data = bundle.hotData;\n  }\n\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function (cb) {\n      cb(bundle.hotData);\n    });\n  }\n\n  delete bundle.cache[id];\n  bundle(id);\n\n  cached = bundle.cache[id];\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    cached.hot._acceptCallbacks.forEach(function (cb) {\n      cb();\n    });\n    return true;\n  }\n}\n"]}