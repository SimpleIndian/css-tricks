{"id":"node_modules/workbox-routing/RegExpRoute.js","dependencies":[{"name":"C:\\Users\\souvik\\Desktop\\workbox-demo\\package.json","includedInParent":true,"mtime":1583840430660},{"name":"C:\\Users\\souvik\\Desktop\\workbox-demo\\node_modules\\workbox-routing\\package.json","includedInParent":true,"mtime":1583755862958},{"name":"workbox-core/_private/assert.js","loc":{"line":8,"column":23},"parent":"C:\\Users\\souvik\\Desktop\\workbox-demo\\node_modules\\workbox-routing\\RegExpRoute.js","resolved":"C:\\Users\\souvik\\Desktop\\workbox-demo\\node_modules\\workbox-core\\_private\\assert.js"},{"name":"workbox-core/_private/logger.js","loc":{"line":9,"column":23},"parent":"C:\\Users\\souvik\\Desktop\\workbox-demo\\node_modules\\workbox-routing\\RegExpRoute.js","resolved":"C:\\Users\\souvik\\Desktop\\workbox-demo\\node_modules\\workbox-core\\_private\\logger.js"},{"name":"./Route.js","loc":{"line":10,"column":22},"parent":"C:\\Users\\souvik\\Desktop\\workbox-demo\\node_modules\\workbox-routing\\RegExpRoute.js","resolved":"C:\\Users\\souvik\\Desktop\\workbox-demo\\node_modules\\workbox-routing\\Route.js"},{"name":"./_version.js","loc":{"line":11,"column":7},"parent":"C:\\Users\\souvik\\Desktop\\workbox-demo\\node_modules\\workbox-routing\\RegExpRoute.js","resolved":"C:\\Users\\souvik\\Desktop\\workbox-demo\\node_modules\\workbox-routing\\_version.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.RegExpRoute = void 0;\n\nvar _assert = require(\"workbox-core/_private/assert.js\");\n\nvar _logger = require(\"workbox-core/_private/logger.js\");\n\nvar _Route = require(\"./Route.js\");\n\nrequire(\"./_version.js\");\n\n/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\n\n/**\n * RegExpRoute makes it easy to create a regular expression based\n * [Route]{@link module:workbox-routing.Route}.\n *\n * For same-origin requests the RegExp only needs to match part of the URL. For\n * requests against third-party servers, you must define a RegExp that matches\n * the start of the URL.\n *\n * [See the module docs for info.]{@link https://developers.google.com/web/tools/workbox/modules/workbox-routing}\n *\n * @memberof module:workbox-routing\n * @extends module:workbox-routing.Route\n */\nclass RegExpRoute extends _Route.Route {\n  /**\n   * If the regular expression contains\n   * [capture groups]{@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp#grouping-back-references},\n   * the captured values will be passed to the\n   * [handler's]{@link module:workbox-routing~handlerCallback} `params`\n   * argument.\n   *\n   * @param {RegExp} regExp The regular expression to match against URLs.\n   * @param {module:workbox-routing~handlerCallback} handler A callback\n   * function that returns a Promise resulting in a Response.\n   * @param {string} [method='GET'] The HTTP method to match the Route\n   * against.\n   */\n  constructor(regExp, handler, method) {\n    if (\"development\" !== 'production') {\n      _assert.assert.isInstance(regExp, RegExp, {\n        moduleName: 'workbox-routing',\n        className: 'RegExpRoute',\n        funcName: 'constructor',\n        paramName: 'pattern'\n      });\n    }\n\n    const match = ({\n      url\n    }) => {\n      const result = regExp.exec(url.href); // Return immediately if there's no match.\n\n      if (!result) {\n        return;\n      } // Require that the match start at the first character in the URL string\n      // if it's a cross-origin request.\n      // See https://github.com/GoogleChrome/workbox/issues/281 for the context\n      // behind this behavior.\n\n\n      if (url.origin !== location.origin && result.index !== 0) {\n        if (\"development\" !== 'production') {\n          _logger.logger.debug(`The regular expression '${regExp}' only partially matched ` + `against the cross-origin URL '${url}'. RegExpRoute's will only ` + `handle cross-origin requests if they match the entire URL.`);\n        }\n\n        return;\n      } // If the route matches, but there aren't any capture groups defined, then\n      // this will return [], which is truthy and therefore sufficient to\n      // indicate a match.\n      // If there are capture groups, then it will return their values.\n\n\n      return result.slice(1);\n    };\n\n    super(match, handler, method);\n  }\n\n}\n\nexports.RegExpRoute = RegExpRoute;"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":8,"column":0},"source":"node_modules/workbox-routing/RegExpRoute.js","original":{"line":8,"column":0}},{"generated":{"line":10,"column":0},"source":"node_modules/workbox-routing/RegExpRoute.js","original":{"line":9,"column":0}},{"generated":{"line":12,"column":0},"source":"node_modules/workbox-routing/RegExpRoute.js","original":{"line":10,"column":0}},{"generated":{"line":14,"column":0},"source":"node_modules/workbox-routing/RegExpRoute.js","original":{"line":11,"column":0}},{"generated":{"line":16,"column":0},"source":"node_modules/workbox-routing/RegExpRoute.js","original":{"line":1,"column":0}},{"generated":{"line":24,"column":0},"source":"node_modules/workbox-routing/RegExpRoute.js","original":{"line":12,"column":0}},{"generated":{"line":37,"column":0},"source":"node_modules/workbox-routing/RegExpRoute.js","original":{"line":25,"column":0}},{"name":"RegExpRoute","generated":{"line":37,"column":6},"source":"node_modules/workbox-routing/RegExpRoute.js","original":{"line":25,"column":6}},{"generated":{"line":37,"column":17},"source":"node_modules/workbox-routing/RegExpRoute.js","original":{"line":25,"column":0}},{"name":"Route","generated":{"line":37,"column":26},"source":"node_modules/workbox-routing/RegExpRoute.js","original":{"line":25,"column":26}},{"generated":{"line":37,"column":38},"source":"node_modules/workbox-routing/RegExpRoute.js","original":{"line":25,"column":0}},{"generated":{"line":37,"column":39},"source":"node_modules/workbox-routing/RegExpRoute.js","original":{"line":25,"column":32}},{"generated":{"line":38,"column":0},"source":"node_modules/workbox-routing/RegExpRoute.js","original":{"line":26,"column":4}},{"name":"constructor","generated":{"line":51,"column":0},"source":"node_modules/workbox-routing/RegExpRoute.js","original":{"line":39,"column":4}},{"name":"constructor","generated":{"line":51,"column":2},"source":"node_modules/workbox-routing/RegExpRoute.js","original":{"line":39,"column":4}},{"generated":{"line":51,"column":13},"source":"node_modules/workbox-routing/RegExpRoute.js","original":{"line":39,"column":15}},{"name":"regExp","generated":{"line":51,"column":14},"source":"node_modules/workbox-routing/RegExpRoute.js","original":{"line":39,"column":16}},{"generated":{"line":51,"column":20},"source":"node_modules/workbox-routing/RegExpRoute.js","original":{"line":39,"column":15}},{"name":"handler","generated":{"line":51,"column":22},"source":"node_modules/workbox-routing/RegExpRoute.js","original":{"line":39,"column":24}},{"generated":{"line":51,"column":29},"source":"node_modules/workbox-routing/RegExpRoute.js","original":{"line":39,"column":15}},{"name":"method","generated":{"line":51,"column":31},"source":"node_modules/workbox-routing/RegExpRoute.js","original":{"line":39,"column":33}},{"generated":{"line":51,"column":37},"source":"node_modules/workbox-routing/RegExpRoute.js","original":{"line":39,"column":15}},{"generated":{"line":51,"column":39},"source":"node_modules/workbox-routing/RegExpRoute.js","original":{"line":39,"column":41}},{"generated":{"line":52,"column":0},"source":"node_modules/workbox-routing/RegExpRoute.js","original":{"line":40,"column":8}},{"generated":{"line":52,"column":8},"source":"node_modules/workbox-routing/RegExpRoute.js","original":{"line":40,"column":12}},{"generated":{"line":52,"column":26},"source":"node_modules/workbox-routing/RegExpRoute.js","original":{"line":40,"column":37}},{"generated":{"line":52,"column":38},"source":"node_modules/workbox-routing/RegExpRoute.js","original":{"line":40,"column":8}},{"generated":{"line":52,"column":40},"source":"node_modules/workbox-routing/RegExpRoute.js","original":{"line":40,"column":51}},{"name":"assert","generated":{"line":53,"column":0},"source":"node_modules/workbox-routing/RegExpRoute.js","original":{"line":41,"column":12}},{"name":"isInstance","generated":{"line":53,"column":21},"source":"node_modules/workbox-routing/RegExpRoute.js","original":{"line":41,"column":19}},{"generated":{"line":53,"column":31},"source":"node_modules/workbox-routing/RegExpRoute.js","original":{"line":41,"column":12}},{"name":"regExp","generated":{"line":53,"column":32},"source":"node_modules/workbox-routing/RegExpRoute.js","original":{"line":41,"column":30}},{"generated":{"line":53,"column":38},"source":"node_modules/workbox-routing/RegExpRoute.js","original":{"line":41,"column":12}},{"name":"RegExp","generated":{"line":53,"column":40},"source":"node_modules/workbox-routing/RegExpRoute.js","original":{"line":41,"column":38}},{"generated":{"line":53,"column":46},"source":"node_modules/workbox-routing/RegExpRoute.js","original":{"line":41,"column":12}},{"generated":{"line":53,"column":48},"source":"node_modules/workbox-routing/RegExpRoute.js","original":{"line":41,"column":46}},{"name":"moduleName","generated":{"line":54,"column":0},"source":"node_modules/workbox-routing/RegExpRoute.js","original":{"line":42,"column":16}},{"name":"moduleName","generated":{"line":54,"column":8},"source":"node_modules/workbox-routing/RegExpRoute.js","original":{"line":42,"column":16}},{"generated":{"line":54,"column":18},"source":"node_modules/workbox-routing/RegExpRoute.js","original":{"line":42,"column":26}},{"generated":{"line":54,"column":20},"source":"node_modules/workbox-routing/RegExpRoute.js","original":{"line":42,"column":28}},{"generated":{"line":54,"column":37},"source":"node_modules/workbox-routing/RegExpRoute.js","original":{"line":41,"column":46}},{"name":"className","generated":{"line":55,"column":0},"source":"node_modules/workbox-routing/RegExpRoute.js","original":{"line":43,"column":16}},{"name":"className","generated":{"line":55,"column":8},"source":"node_modules/workbox-routing/RegExpRoute.js","original":{"line":43,"column":16}},{"generated":{"line":55,"column":17},"source":"node_modules/workbox-routing/RegExpRoute.js","original":{"line":43,"column":25}},{"generated":{"line":55,"column":19},"source":"node_modules/workbox-routing/RegExpRoute.js","original":{"line":43,"column":27}},{"generated":{"line":55,"column":32},"source":"node_modules/workbox-routing/RegExpRoute.js","original":{"line":41,"column":46}},{"name":"funcName","generated":{"line":56,"column":0},"source":"node_modules/workbox-routing/RegExpRoute.js","original":{"line":44,"column":16}},{"name":"funcName","generated":{"line":56,"column":8},"source":"node_modules/workbox-routing/RegExpRoute.js","original":{"line":44,"column":16}},{"generated":{"line":56,"column":16},"source":"node_modules/workbox-routing/RegExpRoute.js","original":{"line":44,"column":24}},{"generated":{"line":56,"column":18},"source":"node_modules/workbox-routing/RegExpRoute.js","original":{"line":44,"column":26}},{"generated":{"line":56,"column":31},"source":"node_modules/workbox-routing/RegExpRoute.js","original":{"line":41,"column":46}},{"name":"paramName","generated":{"line":57,"column":0},"source":"node_modules/workbox-routing/RegExpRoute.js","original":{"line":45,"column":16}},{"name":"paramName","generated":{"line":57,"column":8},"source":"node_modules/workbox-routing/RegExpRoute.js","original":{"line":45,"column":16}},{"generated":{"line":57,"column":17},"source":"node_modules/workbox-routing/RegExpRoute.js","original":{"line":45,"column":25}},{"generated":{"line":57,"column":19},"source":"node_modules/workbox-routing/RegExpRoute.js","original":{"line":45,"column":27}},{"generated":{"line":58,"column":0},"source":"node_modules/workbox-routing/RegExpRoute.js","original":{"line":41,"column":46}},{"generated":{"line":58,"column":7},"source":"node_modules/workbox-routing/RegExpRoute.js","original":{"line":41,"column":12}},{"generated":{"line":59,"column":0},"source":"node_modules/workbox-routing/RegExpRoute.js","original":{"line":47,"column":9}},{"generated":{"line":61,"column":0},"source":"node_modules/workbox-routing/RegExpRoute.js","original":{"line":48,"column":8}},{"name":"match","generated":{"line":61,"column":10},"source":"node_modules/workbox-routing/RegExpRoute.js","original":{"line":48,"column":14}},{"generated":{"line":61,"column":15},"source":"node_modules/workbox-routing/RegExpRoute.js","original":{"line":48,"column":19}},{"generated":{"line":61,"column":18},"source":"node_modules/workbox-routing/RegExpRoute.js","original":{"line":48,"column":22}},{"generated":{"line":61,"column":19},"source":"node_modules/workbox-routing/RegExpRoute.js","original":{"line":48,"column":23}},{"name":"url","generated":{"line":62,"column":0},"source":"node_modules/workbox-routing/RegExpRoute.js","original":{"line":48,"column":25}},{"name":"url","generated":{"line":62,"column":6},"source":"node_modules/workbox-routing/RegExpRoute.js","original":{"line":48,"column":25}},{"generated":{"line":63,"column":0},"source":"node_modules/workbox-routing/RegExpRoute.js","original":{"line":48,"column":23}},{"generated":{"line":63,"column":5},"source":"node_modules/workbox-routing/RegExpRoute.js","original":{"line":48,"column":22}},{"generated":{"line":63,"column":10},"source":"node_modules/workbox-routing/RegExpRoute.js","original":{"line":48,"column":35}},{"generated":{"line":64,"column":0},"source":"node_modules/workbox-routing/RegExpRoute.js","original":{"line":49,"column":12}},{"name":"result","generated":{"line":64,"column":12},"source":"node_modules/workbox-routing/RegExpRoute.js","original":{"line":49,"column":18}},{"generated":{"line":64,"column":18},"source":"node_modules/workbox-routing/RegExpRoute.js","original":{"line":49,"column":24}},{"name":"regExp","generated":{"line":64,"column":21},"source":"node_modules/workbox-routing/RegExpRoute.js","original":{"line":49,"column":27}},{"generated":{"line":64,"column":27},"source":"node_modules/workbox-routing/RegExpRoute.js","original":{"line":49,"column":33}},{"name":"exec","generated":{"line":64,"column":28},"source":"node_modules/workbox-routing/RegExpRoute.js","original":{"line":49,"column":34}},{"generated":{"line":64,"column":32},"source":"node_modules/workbox-routing/RegExpRoute.js","original":{"line":49,"column":27}},{"name":"url","generated":{"line":64,"column":33},"source":"node_modules/workbox-routing/RegExpRoute.js","original":{"line":49,"column":39}},{"generated":{"line":64,"column":36},"source":"node_modules/workbox-routing/RegExpRoute.js","original":{"line":49,"column":42}},{"name":"href","generated":{"line":64,"column":37},"source":"node_modules/workbox-routing/RegExpRoute.js","original":{"line":49,"column":43}},{"generated":{"line":64,"column":41},"source":"node_modules/workbox-routing/RegExpRoute.js","original":{"line":49,"column":27}},{"generated":{"line":64,"column":42},"source":"node_modules/workbox-routing/RegExpRoute.js","original":{"line":49,"column":12}},{"generated":{"line":64,"column":43},"source":"node_modules/workbox-routing/RegExpRoute.js","original":{"line":48,"column":35}},{"generated":{"line":64,"column":44},"source":"node_modules/workbox-routing/RegExpRoute.js","original":{"line":50,"column":12}},{"generated":{"line":66,"column":0},"source":"node_modules/workbox-routing/RegExpRoute.js","original":{"line":51,"column":12}},{"generated":{"line":66,"column":10},"source":"node_modules/workbox-routing/RegExpRoute.js","original":{"line":51,"column":16}},{"name":"result","generated":{"line":66,"column":11},"source":"node_modules/workbox-routing/RegExpRoute.js","original":{"line":51,"column":17}},{"generated":{"line":66,"column":17},"source":"node_modules/workbox-routing/RegExpRoute.js","original":{"line":51,"column":12}},{"generated":{"line":66,"column":19},"source":"node_modules/workbox-routing/RegExpRoute.js","original":{"line":51,"column":25}},{"generated":{"line":67,"column":0},"source":"node_modules/workbox-routing/RegExpRoute.js","original":{"line":52,"column":16}},{"generated":{"line":68,"column":0},"source":"node_modules/workbox-routing/RegExpRoute.js","original":{"line":53,"column":13}},{"generated":{"line":68,"column":7},"source":"node_modules/workbox-routing/RegExpRoute.js","original":{"line":48,"column":35}},{"generated":{"line":68,"column":8},"source":"node_modules/workbox-routing/RegExpRoute.js","original":{"line":54,"column":12}},{"generated":{"line":69,"column":0},"source":"node_modules/workbox-routing/RegExpRoute.js","original":{"line":55,"column":12}},{"generated":{"line":70,"column":0},"source":"node_modules/workbox-routing/RegExpRoute.js","original":{"line":56,"column":12}},{"generated":{"line":71,"column":0},"source":"node_modules/workbox-routing/RegExpRoute.js","original":{"line":57,"column":12}},{"generated":{"line":74,"column":0},"source":"node_modules/workbox-routing/RegExpRoute.js","original":{"line":58,"column":12}},{"name":"url","generated":{"line":74,"column":10},"source":"node_modules/workbox-routing/RegExpRoute.js","original":{"line":58,"column":17}},{"generated":{"line":74,"column":13},"source":"node_modules/workbox-routing/RegExpRoute.js","original":{"line":58,"column":20}},{"name":"origin","generated":{"line":74,"column":14},"source":"node_modules/workbox-routing/RegExpRoute.js","original":{"line":58,"column":21}},{"generated":{"line":74,"column":20},"source":"node_modules/workbox-routing/RegExpRoute.js","original":{"line":58,"column":17}},{"name":"location","generated":{"line":74,"column":25},"source":"node_modules/workbox-routing/RegExpRoute.js","original":{"line":58,"column":32}},{"generated":{"line":74,"column":33},"source":"node_modules/workbox-routing/RegExpRoute.js","original":{"line":58,"column":40}},{"name":"origin","generated":{"line":74,"column":34},"source":"node_modules/workbox-routing/RegExpRoute.js","original":{"line":58,"column":41}},{"generated":{"line":74,"column":40},"source":"node_modules/workbox-routing/RegExpRoute.js","original":{"line":58,"column":16}},{"name":"result","generated":{"line":74,"column":44},"source":"node_modules/workbox-routing/RegExpRoute.js","original":{"line":58,"column":53}},{"generated":{"line":74,"column":50},"source":"node_modules/workbox-routing/RegExpRoute.js","original":{"line":58,"column":59}},{"name":"index","generated":{"line":74,"column":51},"source":"node_modules/workbox-routing/RegExpRoute.js","original":{"line":58,"column":60}},{"generated":{"line":74,"column":56},"source":"node_modules/workbox-routing/RegExpRoute.js","original":{"line":58,"column":53}},{"generated":{"line":74,"column":61},"source":"node_modules/workbox-routing/RegExpRoute.js","original":{"line":58,"column":70}},{"generated":{"line":74,"column":62},"source":"node_modules/workbox-routing/RegExpRoute.js","original":{"line":58,"column":12}},{"generated":{"line":74,"column":64},"source":"node_modules/workbox-routing/RegExpRoute.js","original":{"line":58,"column":74}},{"generated":{"line":75,"column":0},"source":"node_modules/workbox-routing/RegExpRoute.js","original":{"line":59,"column":16}},{"generated":{"line":75,"column":12},"source":"node_modules/workbox-routing/RegExpRoute.js","original":{"line":59,"column":20}},{"generated":{"line":75,"column":30},"source":"node_modules/workbox-routing/RegExpRoute.js","original":{"line":59,"column":45}},{"generated":{"line":75,"column":42},"source":"node_modules/workbox-routing/RegExpRoute.js","original":{"line":59,"column":16}},{"generated":{"line":75,"column":44},"source":"node_modules/workbox-routing/RegExpRoute.js","original":{"line":59,"column":59}},{"name":"logger","generated":{"line":76,"column":0},"source":"node_modules/workbox-routing/RegExpRoute.js","original":{"line":60,"column":20}},{"name":"debug","generated":{"line":76,"column":25},"source":"node_modules/workbox-routing/RegExpRoute.js","original":{"line":60,"column":27}},{"generated":{"line":76,"column":30},"source":"node_modules/workbox-routing/RegExpRoute.js","original":{"line":60,"column":20}},{"generated":{"line":76,"column":31},"source":"node_modules/workbox-routing/RegExpRoute.js","original":{"line":60,"column":34}},{"name":"regExp","generated":{"line":76,"column":58},"source":"node_modules/workbox-routing/RegExpRoute.js","original":{"line":60,"column":60}},{"generated":{"line":76,"column":64},"source":"node_modules/workbox-routing/RegExpRoute.js","original":{"line":60,"column":67}},{"generated":{"line":76,"column":91},"source":"node_modules/workbox-routing/RegExpRoute.js","original":{"line":60,"column":33}},{"generated":{"line":76,"column":94},"source":"node_modules/workbox-routing/RegExpRoute.js","original":{"line":61,"column":25}},{"name":"url","generated":{"line":76,"column":127},"source":"node_modules/workbox-routing/RegExpRoute.js","original":{"line":61,"column":57}},{"generated":{"line":76,"column":130},"source":"node_modules/workbox-routing/RegExpRoute.js","original":{"line":61,"column":61}},{"generated":{"line":76,"column":159},"source":"node_modules/workbox-routing/RegExpRoute.js","original":{"line":60,"column":33}},{"generated":{"line":76,"column":162},"source":"node_modules/workbox-routing/RegExpRoute.js","original":{"line":62,"column":25}},{"generated":{"line":76,"column":222},"source":"node_modules/workbox-routing/RegExpRoute.js","original":{"line":60,"column":20}},{"generated":{"line":77,"column":0},"source":"node_modules/workbox-routing/RegExpRoute.js","original":{"line":63,"column":17}},{"generated":{"line":79,"column":0},"source":"node_modules/workbox-routing/RegExpRoute.js","original":{"line":64,"column":16}},{"generated":{"line":80,"column":0},"source":"node_modules/workbox-routing/RegExpRoute.js","original":{"line":65,"column":13}},{"generated":{"line":80,"column":7},"source":"node_modules/workbox-routing/RegExpRoute.js","original":{"line":48,"column":35}},{"generated":{"line":80,"column":8},"source":"node_modules/workbox-routing/RegExpRoute.js","original":{"line":66,"column":12}},{"generated":{"line":81,"column":0},"source":"node_modules/workbox-routing/RegExpRoute.js","original":{"line":67,"column":12}},{"generated":{"line":82,"column":0},"source":"node_modules/workbox-routing/RegExpRoute.js","original":{"line":68,"column":12}},{"generated":{"line":83,"column":0},"source":"node_modules/workbox-routing/RegExpRoute.js","original":{"line":69,"column":12}},{"generated":{"line":86,"column":0},"source":"node_modules/workbox-routing/RegExpRoute.js","original":{"line":70,"column":12}},{"name":"result","generated":{"line":86,"column":13},"source":"node_modules/workbox-routing/RegExpRoute.js","original":{"line":70,"column":19}},{"generated":{"line":86,"column":19},"source":"node_modules/workbox-routing/RegExpRoute.js","original":{"line":70,"column":25}},{"name":"slice","generated":{"line":86,"column":20},"source":"node_modules/workbox-routing/RegExpRoute.js","original":{"line":70,"column":26}},{"generated":{"line":86,"column":25},"source":"node_modules/workbox-routing/RegExpRoute.js","original":{"line":70,"column":19}},{"generated":{"line":86,"column":26},"source":"node_modules/workbox-routing/RegExpRoute.js","original":{"line":70,"column":32}},{"generated":{"line":86,"column":27},"source":"node_modules/workbox-routing/RegExpRoute.js","original":{"line":70,"column":19}},{"generated":{"line":86,"column":28},"source":"node_modules/workbox-routing/RegExpRoute.js","original":{"line":70,"column":12}},{"generated":{"line":87,"column":0},"source":"node_modules/workbox-routing/RegExpRoute.js","original":{"line":71,"column":9}},{"generated":{"line":87,"column":5},"source":"node_modules/workbox-routing/RegExpRoute.js","original":{"line":48,"column":8}},{"generated":{"line":89,"column":0},"source":"node_modules/workbox-routing/RegExpRoute.js","original":{"line":72,"column":8}},{"name":"match","generated":{"line":89,"column":10},"source":"node_modules/workbox-routing/RegExpRoute.js","original":{"line":72,"column":14}},{"generated":{"line":89,"column":15},"source":"node_modules/workbox-routing/RegExpRoute.js","original":{"line":72,"column":8}},{"name":"handler","generated":{"line":89,"column":17},"source":"node_modules/workbox-routing/RegExpRoute.js","original":{"line":72,"column":21}},{"generated":{"line":89,"column":24},"source":"node_modules/workbox-routing/RegExpRoute.js","original":{"line":72,"column":8}},{"name":"method","generated":{"line":89,"column":26},"source":"node_modules/workbox-routing/RegExpRoute.js","original":{"line":72,"column":30}},{"generated":{"line":89,"column":32},"source":"node_modules/workbox-routing/RegExpRoute.js","original":{"line":72,"column":8}},{"generated":{"line":90,"column":0},"source":"node_modules/workbox-routing/RegExpRoute.js","original":{"line":73,"column":5}},{"generated":{"line":92,"column":0},"source":"node_modules/workbox-routing/RegExpRoute.js","original":{"line":25,"column":32}}],"sources":{"node_modules/workbox-routing/RegExpRoute.js":"/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from 'workbox-core/_private/assert.js';\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { Route } from './Route.js';\nimport './_version.js';\n/**\n * RegExpRoute makes it easy to create a regular expression based\n * [Route]{@link module:workbox-routing.Route}.\n *\n * For same-origin requests the RegExp only needs to match part of the URL. For\n * requests against third-party servers, you must define a RegExp that matches\n * the start of the URL.\n *\n * [See the module docs for info.]{@link https://developers.google.com/web/tools/workbox/modules/workbox-routing}\n *\n * @memberof module:workbox-routing\n * @extends module:workbox-routing.Route\n */\nclass RegExpRoute extends Route {\n    /**\n     * If the regular expression contains\n     * [capture groups]{@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp#grouping-back-references},\n     * the captured values will be passed to the\n     * [handler's]{@link module:workbox-routing~handlerCallback} `params`\n     * argument.\n     *\n     * @param {RegExp} regExp The regular expression to match against URLs.\n     * @param {module:workbox-routing~handlerCallback} handler A callback\n     * function that returns a Promise resulting in a Response.\n     * @param {string} [method='GET'] The HTTP method to match the Route\n     * against.\n     */\n    constructor(regExp, handler, method) {\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isInstance(regExp, RegExp, {\n                moduleName: 'workbox-routing',\n                className: 'RegExpRoute',\n                funcName: 'constructor',\n                paramName: 'pattern',\n            });\n        }\n        const match = ({ url }) => {\n            const result = regExp.exec(url.href);\n            // Return immediately if there's no match.\n            if (!result) {\n                return;\n            }\n            // Require that the match start at the first character in the URL string\n            // if it's a cross-origin request.\n            // See https://github.com/GoogleChrome/workbox/issues/281 for the context\n            // behind this behavior.\n            if ((url.origin !== location.origin) && (result.index !== 0)) {\n                if (process.env.NODE_ENV !== 'production') {\n                    logger.debug(`The regular expression '${regExp}' only partially matched ` +\n                        `against the cross-origin URL '${url}'. RegExpRoute's will only ` +\n                        `handle cross-origin requests if they match the entire URL.`);\n                }\n                return;\n            }\n            // If the route matches, but there aren't any capture groups defined, then\n            // this will return [], which is truthy and therefore sufficient to\n            // indicate a match.\n            // If there are capture groups, then it will return their values.\n            return result.slice(1);\n        };\n        super(match, handler, method);\n    }\n}\nexport { RegExpRoute };\n"},"lineCount":null}},"error":null,"hash":"034ff81eb3d5276243e50d07515730b7","cacheData":{"env":{"NODE_ENV":"development"}}}