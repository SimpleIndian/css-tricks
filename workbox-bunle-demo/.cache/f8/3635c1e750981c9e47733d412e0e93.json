{"id":"node_modules/workbox-core/copyResponse.js","dependencies":[{"name":"C:\\Users\\souvik\\Desktop\\workbox-demo\\package.json","includedInParent":true,"mtime":1583840430660},{"name":"C:\\Users\\souvik\\Desktop\\workbox-demo\\node_modules\\workbox-core\\package.json","includedInParent":true,"mtime":1583755863460},{"name":"./_private/canConstructResponseFromBodyStream.js","loc":{"line":8,"column":51},"parent":"C:\\Users\\souvik\\Desktop\\workbox-demo\\node_modules\\workbox-core\\copyResponse.js","resolved":"C:\\Users\\souvik\\Desktop\\workbox-demo\\node_modules\\workbox-core\\_private\\canConstructResponseFromBodyStream.js"},{"name":"./_version.js","loc":{"line":9,"column":7},"parent":"C:\\Users\\souvik\\Desktop\\workbox-demo\\node_modules\\workbox-core\\copyResponse.js","resolved":"C:\\Users\\souvik\\Desktop\\workbox-demo\\node_modules\\workbox-core\\_version.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.copyResponse = copyResponse;\n\nvar _canConstructResponseFromBodyStream = require(\"./_private/canConstructResponseFromBodyStream.js\");\n\nrequire(\"./_version.js\");\n\n/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\n\n/**\n * Allows developers to copy a response and modify its `headers`, `status`,\n * or `statusText` values (the values settable via a\n * [`ResponseInit`]{@link https://developer.mozilla.org/en-US/docs/Web/API/Response/Response#Syntax}\n * object in the constructor).\n * To modify these values, pass a function as the second argument. That\n * function will be invoked with a single object with the response properties\n * `{headers, status, statusText}`. The return value of this function will\n * be used as the `ResponseInit` for the new `Response`. To change the values\n * either modify the passed parameter(s) and return it, or return a totally\n * new object.\n *\n * @param {Response} response\n * @param {Function} modifier\n * @memberof module:workbox-core\n */\nasync function copyResponse(response, modifier) {\n  const clonedResponse = response.clone(); // Create a fresh `ResponseInit` object by cloning the headers.\n\n  const responseInit = {\n    headers: new Headers(clonedResponse.headers),\n    status: clonedResponse.status,\n    statusText: clonedResponse.statusText\n  }; // Apply any user modifications.\n\n  const modifiedResponseInit = modifier ? modifier(responseInit) : responseInit; // Create the new response from the body stream and `ResponseInit`\n  // modifications. Note: not all browsers support the Response.body stream,\n  // so fall back to reading the entire body into memory as a blob.\n\n  const body = (0, _canConstructResponseFromBodyStream.canConstructResponseFromBodyStream)() ? clonedResponse.body : await clonedResponse.blob();\n  return new Response(body, modifiedResponseInit);\n}\n\n;"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":8,"column":0},"source":"node_modules/workbox-core/copyResponse.js","original":{"line":8,"column":0}},{"generated":{"line":10,"column":0},"source":"node_modules/workbox-core/copyResponse.js","original":{"line":9,"column":0}},{"generated":{"line":12,"column":0},"source":"node_modules/workbox-core/copyResponse.js","original":{"line":1,"column":0}},{"generated":{"line":20,"column":0},"source":"node_modules/workbox-core/copyResponse.js","original":{"line":10,"column":0}},{"generated":{"line":36,"column":0},"source":"node_modules/workbox-core/copyResponse.js","original":{"line":26,"column":0}},{"name":"copyResponse","generated":{"line":36,"column":15},"source":"node_modules/workbox-core/copyResponse.js","original":{"line":26,"column":15}},{"generated":{"line":36,"column":27},"source":"node_modules/workbox-core/copyResponse.js","original":{"line":26,"column":0}},{"name":"response","generated":{"line":36,"column":28},"source":"node_modules/workbox-core/copyResponse.js","original":{"line":26,"column":28}},{"generated":{"line":36,"column":36},"source":"node_modules/workbox-core/copyResponse.js","original":{"line":26,"column":0}},{"name":"modifier","generated":{"line":36,"column":38},"source":"node_modules/workbox-core/copyResponse.js","original":{"line":26,"column":38}},{"generated":{"line":36,"column":46},"source":"node_modules/workbox-core/copyResponse.js","original":{"line":26,"column":0}},{"generated":{"line":36,"column":48},"source":"node_modules/workbox-core/copyResponse.js","original":{"line":26,"column":48}},{"generated":{"line":37,"column":0},"source":"node_modules/workbox-core/copyResponse.js","original":{"line":27,"column":4}},{"name":"clonedResponse","generated":{"line":37,"column":8},"source":"node_modules/workbox-core/copyResponse.js","original":{"line":27,"column":10}},{"generated":{"line":37,"column":22},"source":"node_modules/workbox-core/copyResponse.js","original":{"line":27,"column":24}},{"name":"response","generated":{"line":37,"column":25},"source":"node_modules/workbox-core/copyResponse.js","original":{"line":27,"column":27}},{"generated":{"line":37,"column":33},"source":"node_modules/workbox-core/copyResponse.js","original":{"line":27,"column":35}},{"name":"clone","generated":{"line":37,"column":34},"source":"node_modules/workbox-core/copyResponse.js","original":{"line":27,"column":36}},{"generated":{"line":37,"column":39},"source":"node_modules/workbox-core/copyResponse.js","original":{"line":27,"column":27}},{"generated":{"line":37,"column":41},"source":"node_modules/workbox-core/copyResponse.js","original":{"line":27,"column":4}},{"generated":{"line":37,"column":42},"source":"node_modules/workbox-core/copyResponse.js","original":{"line":26,"column":48}},{"generated":{"line":37,"column":43},"source":"node_modules/workbox-core/copyResponse.js","original":{"line":28,"column":4}},{"generated":{"line":39,"column":0},"source":"node_modules/workbox-core/copyResponse.js","original":{"line":29,"column":4}},{"name":"responseInit","generated":{"line":39,"column":8},"source":"node_modules/workbox-core/copyResponse.js","original":{"line":29,"column":10}},{"generated":{"line":39,"column":20},"source":"node_modules/workbox-core/copyResponse.js","original":{"line":29,"column":22}},{"generated":{"line":39,"column":23},"source":"node_modules/workbox-core/copyResponse.js","original":{"line":29,"column":25}},{"name":"headers","generated":{"line":40,"column":0},"source":"node_modules/workbox-core/copyResponse.js","original":{"line":30,"column":8}},{"name":"headers","generated":{"line":40,"column":4},"source":"node_modules/workbox-core/copyResponse.js","original":{"line":30,"column":8}},{"generated":{"line":40,"column":11},"source":"node_modules/workbox-core/copyResponse.js","original":{"line":30,"column":15}},{"generated":{"line":40,"column":13},"source":"node_modules/workbox-core/copyResponse.js","original":{"line":30,"column":17}},{"name":"Headers","generated":{"line":40,"column":17},"source":"node_modules/workbox-core/copyResponse.js","original":{"line":30,"column":21}},{"generated":{"line":40,"column":24},"source":"node_modules/workbox-core/copyResponse.js","original":{"line":30,"column":17}},{"name":"clonedResponse","generated":{"line":40,"column":25},"source":"node_modules/workbox-core/copyResponse.js","original":{"line":30,"column":29}},{"generated":{"line":40,"column":39},"source":"node_modules/workbox-core/copyResponse.js","original":{"line":30,"column":43}},{"name":"headers","generated":{"line":40,"column":40},"source":"node_modules/workbox-core/copyResponse.js","original":{"line":30,"column":44}},{"generated":{"line":40,"column":47},"source":"node_modules/workbox-core/copyResponse.js","original":{"line":30,"column":17}},{"generated":{"line":40,"column":48},"source":"node_modules/workbox-core/copyResponse.js","original":{"line":29,"column":25}},{"name":"status","generated":{"line":41,"column":0},"source":"node_modules/workbox-core/copyResponse.js","original":{"line":31,"column":8}},{"name":"status","generated":{"line":41,"column":4},"source":"node_modules/workbox-core/copyResponse.js","original":{"line":31,"column":8}},{"generated":{"line":41,"column":10},"source":"node_modules/workbox-core/copyResponse.js","original":{"line":31,"column":14}},{"name":"clonedResponse","generated":{"line":41,"column":12},"source":"node_modules/workbox-core/copyResponse.js","original":{"line":31,"column":16}},{"generated":{"line":41,"column":26},"source":"node_modules/workbox-core/copyResponse.js","original":{"line":31,"column":30}},{"name":"status","generated":{"line":41,"column":27},"source":"node_modules/workbox-core/copyResponse.js","original":{"line":31,"column":31}},{"generated":{"line":41,"column":33},"source":"node_modules/workbox-core/copyResponse.js","original":{"line":29,"column":25}},{"name":"statusText","generated":{"line":42,"column":0},"source":"node_modules/workbox-core/copyResponse.js","original":{"line":32,"column":8}},{"name":"statusText","generated":{"line":42,"column":4},"source":"node_modules/workbox-core/copyResponse.js","original":{"line":32,"column":8}},{"generated":{"line":42,"column":14},"source":"node_modules/workbox-core/copyResponse.js","original":{"line":32,"column":18}},{"name":"clonedResponse","generated":{"line":42,"column":16},"source":"node_modules/workbox-core/copyResponse.js","original":{"line":32,"column":20}},{"generated":{"line":42,"column":30},"source":"node_modules/workbox-core/copyResponse.js","original":{"line":32,"column":34}},{"name":"statusText","generated":{"line":42,"column":31},"source":"node_modules/workbox-core/copyResponse.js","original":{"line":32,"column":35}},{"generated":{"line":43,"column":0},"source":"node_modules/workbox-core/copyResponse.js","original":{"line":29,"column":25}},{"generated":{"line":43,"column":3},"source":"node_modules/workbox-core/copyResponse.js","original":{"line":29,"column":4}},{"generated":{"line":43,"column":4},"source":"node_modules/workbox-core/copyResponse.js","original":{"line":26,"column":48}},{"generated":{"line":43,"column":5},"source":"node_modules/workbox-core/copyResponse.js","original":{"line":34,"column":4}},{"generated":{"line":45,"column":0},"source":"node_modules/workbox-core/copyResponse.js","original":{"line":35,"column":4}},{"name":"modifiedResponseInit","generated":{"line":45,"column":8},"source":"node_modules/workbox-core/copyResponse.js","original":{"line":35,"column":10}},{"generated":{"line":45,"column":28},"source":"node_modules/workbox-core/copyResponse.js","original":{"line":35,"column":30}},{"name":"modifier","generated":{"line":45,"column":31},"source":"node_modules/workbox-core/copyResponse.js","original":{"line":35,"column":33}},{"generated":{"line":45,"column":39},"source":"node_modules/workbox-core/copyResponse.js","original":{"line":35,"column":41}},{"name":"modifier","generated":{"line":45,"column":42},"source":"node_modules/workbox-core/copyResponse.js","original":{"line":35,"column":44}},{"generated":{"line":45,"column":50},"source":"node_modules/workbox-core/copyResponse.js","original":{"line":35,"column":52}},{"name":"responseInit","generated":{"line":45,"column":51},"source":"node_modules/workbox-core/copyResponse.js","original":{"line":35,"column":53}},{"generated":{"line":45,"column":63},"source":"node_modules/workbox-core/copyResponse.js","original":{"line":35,"column":52}},{"generated":{"line":45,"column":64},"source":"node_modules/workbox-core/copyResponse.js","original":{"line":35,"column":41}},{"name":"responseInit","generated":{"line":45,"column":67},"source":"node_modules/workbox-core/copyResponse.js","original":{"line":35,"column":69}},{"generated":{"line":45,"column":79},"source":"node_modules/workbox-core/copyResponse.js","original":{"line":35,"column":4}},{"generated":{"line":45,"column":80},"source":"node_modules/workbox-core/copyResponse.js","original":{"line":26,"column":48}},{"generated":{"line":45,"column":81},"source":"node_modules/workbox-core/copyResponse.js","original":{"line":36,"column":4}},{"generated":{"line":46,"column":0},"source":"node_modules/workbox-core/copyResponse.js","original":{"line":37,"column":4}},{"generated":{"line":47,"column":0},"source":"node_modules/workbox-core/copyResponse.js","original":{"line":38,"column":4}},{"generated":{"line":49,"column":0},"source":"node_modules/workbox-core/copyResponse.js","original":{"line":39,"column":4}},{"name":"body","generated":{"line":49,"column":8},"source":"node_modules/workbox-core/copyResponse.js","original":{"line":39,"column":10}},{"generated":{"line":49,"column":12},"source":"node_modules/workbox-core/copyResponse.js","original":{"line":39,"column":14}},{"generated":{"line":49,"column":15},"source":"node_modules/workbox-core/copyResponse.js","original":{"line":39,"column":17}},{"name":"clonedResponse","generated":{"line":49,"column":95},"source":"node_modules/workbox-core/copyResponse.js","original":{"line":40,"column":8}},{"generated":{"line":49,"column":109},"source":"node_modules/workbox-core/copyResponse.js","original":{"line":40,"column":22}},{"name":"body","generated":{"line":49,"column":110},"source":"node_modules/workbox-core/copyResponse.js","original":{"line":40,"column":23}},{"generated":{"line":49,"column":114},"source":"node_modules/workbox-core/copyResponse.js","original":{"line":39,"column":17}},{"generated":{"line":49,"column":117},"source":"node_modules/workbox-core/copyResponse.js","original":{"line":40,"column":30}},{"name":"clonedResponse","generated":{"line":49,"column":123},"source":"node_modules/workbox-core/copyResponse.js","original":{"line":40,"column":36}},{"generated":{"line":49,"column":137},"source":"node_modules/workbox-core/copyResponse.js","original":{"line":40,"column":50}},{"name":"blob","generated":{"line":49,"column":138},"source":"node_modules/workbox-core/copyResponse.js","original":{"line":40,"column":51}},{"generated":{"line":49,"column":142},"source":"node_modules/workbox-core/copyResponse.js","original":{"line":40,"column":36}},{"generated":{"line":49,"column":144},"source":"node_modules/workbox-core/copyResponse.js","original":{"line":39,"column":4}},{"generated":{"line":50,"column":0},"source":"node_modules/workbox-core/copyResponse.js","original":{"line":41,"column":4}},{"generated":{"line":50,"column":9},"source":"node_modules/workbox-core/copyResponse.js","original":{"line":41,"column":11}},{"name":"Response","generated":{"line":50,"column":13},"source":"node_modules/workbox-core/copyResponse.js","original":{"line":41,"column":15}},{"generated":{"line":50,"column":21},"source":"node_modules/workbox-core/copyResponse.js","original":{"line":41,"column":11}},{"name":"body","generated":{"line":50,"column":22},"source":"node_modules/workbox-core/copyResponse.js","original":{"line":41,"column":24}},{"generated":{"line":50,"column":26},"source":"node_modules/workbox-core/copyResponse.js","original":{"line":41,"column":11}},{"name":"modifiedResponseInit","generated":{"line":50,"column":28},"source":"node_modules/workbox-core/copyResponse.js","original":{"line":41,"column":30}},{"generated":{"line":50,"column":48},"source":"node_modules/workbox-core/copyResponse.js","original":{"line":41,"column":11}},{"generated":{"line":50,"column":49},"source":"node_modules/workbox-core/copyResponse.js","original":{"line":41,"column":4}},{"generated":{"line":51,"column":0},"source":"node_modules/workbox-core/copyResponse.js","original":{"line":42,"column":1}},{"generated":{"line":53,"column":0},"source":"node_modules/workbox-core/copyResponse.js","original":{"line":43,"column":0}}],"sources":{"node_modules/workbox-core/copyResponse.js":"/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { canConstructResponseFromBodyStream } from './_private/canConstructResponseFromBodyStream.js';\nimport './_version.js';\n/**\n * Allows developers to copy a response and modify its `headers`, `status`,\n * or `statusText` values (the values settable via a\n * [`ResponseInit`]{@link https://developer.mozilla.org/en-US/docs/Web/API/Response/Response#Syntax}\n * object in the constructor).\n * To modify these values, pass a function as the second argument. That\n * function will be invoked with a single object with the response properties\n * `{headers, status, statusText}`. The return value of this function will\n * be used as the `ResponseInit` for the new `Response`. To change the values\n * either modify the passed parameter(s) and return it, or return a totally\n * new object.\n *\n * @param {Response} response\n * @param {Function} modifier\n * @memberof module:workbox-core\n */\nasync function copyResponse(response, modifier) {\n    const clonedResponse = response.clone();\n    // Create a fresh `ResponseInit` object by cloning the headers.\n    const responseInit = {\n        headers: new Headers(clonedResponse.headers),\n        status: clonedResponse.status,\n        statusText: clonedResponse.statusText,\n    };\n    // Apply any user modifications.\n    const modifiedResponseInit = modifier ? modifier(responseInit) : responseInit;\n    // Create the new response from the body stream and `ResponseInit`\n    // modifications. Note: not all browsers support the Response.body stream,\n    // so fall back to reading the entire body into memory as a blob.\n    const body = canConstructResponseFromBodyStream() ?\n        clonedResponse.body : await clonedResponse.blob();\n    return new Response(body, modifiedResponseInit);\n}\n;\nexport { copyResponse };\n"},"lineCount":null}},"error":null,"hash":"06f216286d8bda88682b4910adc9684b","cacheData":{"env":{}}}