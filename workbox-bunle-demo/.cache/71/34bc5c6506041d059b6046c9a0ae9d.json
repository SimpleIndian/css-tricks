{"id":"node_modules/workbox-precaching/addRoute.js","dependencies":[{"name":"C:\\Users\\souvik\\Desktop\\workbox-demo\\package.json","includedInParent":true,"mtime":1583840430660},{"name":"C:\\Users\\souvik\\Desktop\\workbox-demo\\node_modules\\workbox-precaching\\package.json","includedInParent":true,"mtime":1583755862959},{"name":"./utils/addFetchListener.js","loc":{"line":7,"column":33},"parent":"C:\\Users\\souvik\\Desktop\\workbox-demo\\node_modules\\workbox-precaching\\addRoute.js","resolved":"C:\\Users\\souvik\\Desktop\\workbox-demo\\node_modules\\workbox-precaching\\utils\\addFetchListener.js"},{"name":"./_version.js","loc":{"line":8,"column":7},"parent":"C:\\Users\\souvik\\Desktop\\workbox-demo\\node_modules\\workbox-precaching\\addRoute.js","resolved":"C:\\Users\\souvik\\Desktop\\workbox-demo\\node_modules\\workbox-precaching\\_version.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.addRoute = addRoute;\n\nvar _addFetchListener = require(\"./utils/addFetchListener.js\");\n\nrequire(\"./_version.js\");\n\n/*\n  Copyright 2019 Google LLC\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nlet listenerAdded = false;\n/**\n * Add a `fetch` listener to the service worker that will\n * respond to\n * [network requests]{@link https://developer.mozilla.org/en-US/docs/Web/API/Service_Worker_API/Using_Service_Workers#Custom_responses_to_requests}\n * with precached assets.\n *\n * Requests for assets that aren't precached, the `FetchEvent` will not be\n * responded to, allowing the event to fall through to other `fetch` event\n * listeners.\n *\n * @param {Object} [options]\n * @param {string} [options.directoryIndex=index.html] The `directoryIndex` will\n * check cache entries for a URLs ending with '/' to see if there is a hit when\n * appending the `directoryIndex` value.\n * @param {Array<RegExp>} [options.ignoreURLParametersMatching=[/^utm_/]] An\n * array of regex's to remove search params when looking for a cache match.\n * @param {boolean} [options.cleanURLs=true] The `cleanURLs` option will\n * check the cache for the URL with a `.html` added to the end of the end.\n * @param {module:workbox-precaching~urlManipulation} [options.urlManipulation]\n * This is a function that should take a URL and return an array of\n * alternative URLs that should be checked for precache matches.\n *\n * @memberof module:workbox-precaching\n */\n\nfunction addRoute(options) {\n  if (!listenerAdded) {\n    (0, _addFetchListener.addFetchListener)(options);\n    listenerAdded = true;\n  }\n}\n\n;"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":8,"column":0},"source":"node_modules/workbox-precaching/addRoute.js","original":{"line":7,"column":0}},{"generated":{"line":10,"column":0},"source":"node_modules/workbox-precaching/addRoute.js","original":{"line":8,"column":0}},{"generated":{"line":12,"column":0},"source":"node_modules/workbox-precaching/addRoute.js","original":{"line":1,"column":0}},{"generated":{"line":18,"column":0},"source":"node_modules/workbox-precaching/addRoute.js","original":{"line":9,"column":0}},{"name":"listenerAdded","generated":{"line":18,"column":4},"source":"node_modules/workbox-precaching/addRoute.js","original":{"line":9,"column":4}},{"generated":{"line":18,"column":17},"source":"node_modules/workbox-precaching/addRoute.js","original":{"line":9,"column":17}},{"generated":{"line":18,"column":20},"source":"node_modules/workbox-precaching/addRoute.js","original":{"line":9,"column":20}},{"generated":{"line":18,"column":25},"source":"node_modules/workbox-precaching/addRoute.js","original":{"line":9,"column":0}},{"generated":{"line":19,"column":0},"source":"node_modules/workbox-precaching/addRoute.js","original":{"line":10,"column":0}},{"generated":{"line":44,"column":0},"source":"node_modules/workbox-precaching/addRoute.js","original":{"line":34,"column":0}},{"name":"addRoute","generated":{"line":44,"column":9},"source":"node_modules/workbox-precaching/addRoute.js","original":{"line":34,"column":9}},{"generated":{"line":44,"column":17},"source":"node_modules/workbox-precaching/addRoute.js","original":{"line":34,"column":0}},{"name":"options","generated":{"line":44,"column":18},"source":"node_modules/workbox-precaching/addRoute.js","original":{"line":34,"column":18}},{"generated":{"line":44,"column":25},"source":"node_modules/workbox-precaching/addRoute.js","original":{"line":34,"column":0}},{"generated":{"line":44,"column":27},"source":"node_modules/workbox-precaching/addRoute.js","original":{"line":34,"column":27}},{"generated":{"line":45,"column":0},"source":"node_modules/workbox-precaching/addRoute.js","original":{"line":35,"column":4}},{"generated":{"line":45,"column":6},"source":"node_modules/workbox-precaching/addRoute.js","original":{"line":35,"column":8}},{"name":"listenerAdded","generated":{"line":45,"column":7},"source":"node_modules/workbox-precaching/addRoute.js","original":{"line":35,"column":9}},{"generated":{"line":45,"column":20},"source":"node_modules/workbox-precaching/addRoute.js","original":{"line":35,"column":4}},{"generated":{"line":45,"column":22},"source":"node_modules/workbox-precaching/addRoute.js","original":{"line":35,"column":24}},{"generated":{"line":46,"column":0},"source":"node_modules/workbox-precaching/addRoute.js","original":{"line":36,"column":8}},{"name":"options","generated":{"line":46,"column":44},"source":"node_modules/workbox-precaching/addRoute.js","original":{"line":36,"column":25}},{"generated":{"line":46,"column":51},"source":"node_modules/workbox-precaching/addRoute.js","original":{"line":36,"column":8}},{"name":"listenerAdded","generated":{"line":47,"column":0},"source":"node_modules/workbox-precaching/addRoute.js","original":{"line":37,"column":8}},{"name":"listenerAdded","generated":{"line":47,"column":4},"source":"node_modules/workbox-precaching/addRoute.js","original":{"line":37,"column":8}},{"generated":{"line":47,"column":17},"source":"node_modules/workbox-precaching/addRoute.js","original":{"line":37,"column":21}},{"generated":{"line":47,"column":20},"source":"node_modules/workbox-precaching/addRoute.js","original":{"line":37,"column":24}},{"generated":{"line":47,"column":24},"source":"node_modules/workbox-precaching/addRoute.js","original":{"line":37,"column":8}},{"generated":{"line":48,"column":0},"source":"node_modules/workbox-precaching/addRoute.js","original":{"line":38,"column":5}},{"generated":{"line":49,"column":0},"source":"node_modules/workbox-precaching/addRoute.js","original":{"line":39,"column":1}},{"generated":{"line":51,"column":0},"source":"node_modules/workbox-precaching/addRoute.js","original":{"line":40,"column":0}}],"sources":{"node_modules/workbox-precaching/addRoute.js":"/*\n  Copyright 2019 Google LLC\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { addFetchListener } from './utils/addFetchListener.js';\nimport './_version.js';\nlet listenerAdded = false;\n/**\n * Add a `fetch` listener to the service worker that will\n * respond to\n * [network requests]{@link https://developer.mozilla.org/en-US/docs/Web/API/Service_Worker_API/Using_Service_Workers#Custom_responses_to_requests}\n * with precached assets.\n *\n * Requests for assets that aren't precached, the `FetchEvent` will not be\n * responded to, allowing the event to fall through to other `fetch` event\n * listeners.\n *\n * @param {Object} [options]\n * @param {string} [options.directoryIndex=index.html] The `directoryIndex` will\n * check cache entries for a URLs ending with '/' to see if there is a hit when\n * appending the `directoryIndex` value.\n * @param {Array<RegExp>} [options.ignoreURLParametersMatching=[/^utm_/]] An\n * array of regex's to remove search params when looking for a cache match.\n * @param {boolean} [options.cleanURLs=true] The `cleanURLs` option will\n * check the cache for the URL with a `.html` added to the end of the end.\n * @param {module:workbox-precaching~urlManipulation} [options.urlManipulation]\n * This is a function that should take a URL and return an array of\n * alternative URLs that should be checked for precache matches.\n *\n * @memberof module:workbox-precaching\n */\nfunction addRoute(options) {\n    if (!listenerAdded) {\n        addFetchListener(options);\n        listenerAdded = true;\n    }\n}\n;\nexport { addRoute };\n"},"lineCount":null}},"error":null,"hash":"3461c56a26c8d4c03d0cdda7fe54375b","cacheData":{"env":{}}}